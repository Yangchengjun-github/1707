Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    main.o(.text.main) refers to cs32f10x_rcu.o(.text.rcu_clk_freq_get) for rcu_clk_freq_get
    main.o(.text.main) refers to init.o(.text.tick_init) for tick_init
    main.o(.text.main) refers to app.o(.text.tick_delay) for tick_delay
    main.o(.text.main) refers to cs32f10x_gpio.o(.text.gpio_pin_remap_config) for gpio_pin_remap_config
    main.o(.text.main) refers to init.o(.text.io_sleep_conf) for io_sleep_conf
    main.o(.text.main) refers to cs32f10x_pmu.o(.text.pmu_stop_mode_enter) for pmu_stop_mode_enter
    main.o(.text.main) refers to init.o(.text.uart_init) for uart_init
    main.o(.text.main) refers to init.o(.text.log_init) for log_init
    main.o(.text.main) refers to puts.o(i.puts) for puts
    main.o(.text.main) refers to key.o(.text.key_init) for key_init
    main.o(.text.main) refers to adc.o(.text.adc_init_) for adc_init_
    main.o(.text.main) refers to init.o(.text.tim_init) for tim_init
    main.o(.text.main) refers to iic.o(.text.i2c_init_2) for i2c_init_2
    main.o(.text.main) refers to init.o(.text.other_io_init) for other_io_init
    main.o(.text.main) refers to bathealth.o(.text.health_init) for health_init
    main.o(.text.main) refers to led.o(.text.led_init) for led_init
    main.o(.text.main) refers to init.o(.text.exti_init) for exti_init
    main.o(.text.main) refers to init.o(.text.nvic_configuration) for nvic_configuration
    main.o(.text.main) refers to app.o(.data.sys) for sys
    main.o(.text.main) refers to task.o(.text.Task_Pro_Handler_Callback) for Task_Pro_Handler_Callback
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.led1_toggle) refers to main.o(.text.led1_toggle) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.led2_toggle) refers to main.o(.text.led2_toggle) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.delay) refers to main.o(.text.delay) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.NMI_Handler) refers to cs32f10x_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.HardFault_Handler) refers to cs32f10x_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.MemManage_Handler) refers to cs32f10x_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.BusFault_Handler) refers to cs32f10x_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.UsageFault_Handler) refers to cs32f10x_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.SVC_Handler) refers to cs32f10x_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.DebugMon_Handler) refers to cs32f10x_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.PendSV_Handler) refers to cs32f10x_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.text.SysTick_Handler) refers to app.o(.data.sys) for sys
    cs32f10x_it.o(.text.SysTick_Handler) refers to task.o(.text.Task_Marks_Handler_Callback) for Task_Marks_Handler_Callback
    cs32f10x_it.o(.ARM.exidx.text.SysTick_Handler) refers to cs32f10x_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.text.USART3_IRQHandler) refers to queue.o(.bss.rxBuffer) for rxBuffer
    cs32f10x_it.o(.text.USART3_IRQHandler) refers to queue.o(.text.circ_buffer_push) for circ_buffer_push
    cs32f10x_it.o(.ARM.exidx.text.USART3_IRQHandler) refers to cs32f10x_it.o(.text.USART3_IRQHandler) for [Anonymous Symbol]
    cs32f10x_it.o(.text.TIM1_UP_IRQHandler) refers to led.o(.data.led) for led
    cs32f10x_it.o(.text.TIM1_UP_IRQHandler) refers to led.o(.text.led_pwm_control) for led_pwm_control
    cs32f10x_it.o(.text.TIM1_UP_IRQHandler) refers to app.o(.text.eta_driver) for eta_driver
    cs32f10x_it.o(.ARM.exidx.text.TIM1_UP_IRQHandler) refers to cs32f10x_it.o(.text.TIM1_UP_IRQHandler) for [Anonymous Symbol]
    cs32f10x_it.o(.text.EXTI4_IRQHandler) refers to app.o(.data.sys) for sys
    cs32f10x_it.o(.ARM.exidx.text.EXTI4_IRQHandler) refers to cs32f10x_it.o(.text.EXTI4_IRQHandler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.EXTI1_IRQHandler) refers to cs32f10x_it.o(.text.EXTI1_IRQHandler) for [Anonymous Symbol]
    init.o(.text.log_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    init.o(.text.log_init) refers to cs32f10x_usart.o(.text.usart_init) for usart_init
    init.o(.ARM.exidx.text.log_init) refers to init.o(.text.log_init) for [Anonymous Symbol]
    init.o(.ARM.exidx.text.fputc) refers to init.o(.text.fputc) for [Anonymous Symbol]
    init.o(.ARM.exidx.text.fgetc) refers to init.o(.text.fgetc) for [Anonymous Symbol]
    init.o(.text.uart_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    init.o(.text.uart_init) refers to cs32f10x_usart.o(.text.usart_init) for usart_init
    init.o(.ARM.exidx.text.uart_init) refers to init.o(.text.uart_init) for [Anonymous Symbol]
    init.o(.text.other_io_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    init.o(.ARM.exidx.text.other_io_init) refers to init.o(.text.other_io_init) for [Anonymous Symbol]
    init.o(.text.io_sleep_conf) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    init.o(.ARM.exidx.text.io_sleep_conf) refers to init.o(.text.io_sleep_conf) for [Anonymous Symbol]
    init.o(.text.tick_init) refers to system_cs32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    init.o(.ARM.exidx.text.tick_init) refers to init.o(.text.tick_init) for [Anonymous Symbol]
    init.o(.text.nvic_configuration) refers to cs32f10x_misc.o(.text.nvic_init) for nvic_init
    init.o(.text.nvic_configuration) refers to cs32f10x_misc.o(.text.nvic_priority_group_config) for nvic_priority_group_config
    init.o(.ARM.exidx.text.nvic_configuration) refers to init.o(.text.nvic_configuration) for [Anonymous Symbol]
    init.o(.text.tim_init) refers to cs32f10x_tim.o(.text.tim_base_init) for tim_base_init
    init.o(.ARM.exidx.text.tim_init) refers to init.o(.text.tim_init) for [Anonymous Symbol]
    init.o(.text.exti_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    init.o(.text.exti_init) refers to cs32f10x_gpio.o(.text.gpio_exti_pin_config) for gpio_exti_pin_config
    init.o(.ARM.exidx.text.exti_init) refers to init.o(.text.exti_init) for [Anonymous Symbol]
    init.o(.text.fwdt_init) refers to cs32f10x_fwdt.o(.text.fwdt_write_access_enable_ctrl) for fwdt_write_access_enable_ctrl
    init.o(.text.fwdt_init) refers to cs32f10x_fwdt.o(.text.fwdt_prescaler_set) for fwdt_prescaler_set
    init.o(.text.fwdt_init) refers to cs32f10x_fwdt.o(.text.fwdt_reload_set) for fwdt_reload_set
    init.o(.text.fwdt_init) refers to cs32f10x_fwdt.o(.text.fwdt_enable) for fwdt_enable
    init.o(.ARM.exidx.text.fwdt_init) refers to init.o(.text.fwdt_init) for [Anonymous Symbol]
    init.o(.text.rtc_config) refers to cs32f10x_pmu.o(.text.pmu_vbat_domain_write_config) for pmu_vbat_domain_write_config
    init.o(.text.rtc_config) refers to cs32f10x_rcu.o(.text.rcu_clkready_reset_flag_get) for rcu_clkready_reset_flag_get
    init.o(.text.rtc_config) refers to cs32f10x_rcu.o(.text.rcu_rtcclk_config) for rcu_rtcclk_config
    init.o(.text.rtc_config) refers to cs32f10x_rtc.o(.text.rtc_wait_for_synchronize) for rtc_wait_for_synchronize
    init.o(.text.rtc_config) refers to cs32f10x_rtc.o(.text.rtc_prescaler_set) for rtc_prescaler_set
    init.o(.text.rtc_config) refers to cs32f10x_rtc.o(.text.rtc_counter_set) for rtc_counter_set
    init.o(.ARM.exidx.text.rtc_config) refers to init.o(.text.rtc_config) for [Anonymous Symbol]
    init.o(.text.deinit_befor_sleep) refers to cs32f10x_usart.o(.text.usart_def_init) for usart_def_init
    init.o(.ARM.exidx.text.deinit_befor_sleep) refers to init.o(.text.deinit_befor_sleep) for [Anonymous Symbol]
    init.o(.text.init_after_sleep) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    init.o(.text.init_after_sleep) refers to cs32f10x_usart.o(.text.usart_init) for usart_init
    init.o(.text.init_after_sleep) refers to adc.o(.text.adc_init_) for adc_init_
    init.o(.ARM.exidx.text.init_after_sleep) refers to init.o(.text.init_after_sleep) for [Anonymous Symbol]
    adc.o(.text.adc_init_) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    adc.o(.text.adc_init_) refers to cs32f10x_rcu.o(.text.rcu_adcclk_config) for rcu_adcclk_config
    adc.o(.text.adc_init_) refers to cs32f10x_adc.o(.text.adc_struct_init) for adc_struct_init
    adc.o(.text.adc_init_) refers to cs32f10x_adc.o(.text.adc_init) for adc_init
    adc.o(.text.adc_init_) refers to cs32f10x_adc.o(.text.adc_regular_channel_config) for adc_regular_channel_config
    adc.o(.ARM.exidx.text.adc_init_) refers to adc.o(.text.adc_init_) for [Anonymous Symbol]
    adc.o(.text.task_adc) refers to app.o(.data.sys) for sys
    adc.o(.text.task_adc) refers to dflti.o(.text) for __aeabi_i2d
    adc.o(.text.task_adc) refers to ddiv.o(.text) for __aeabi_ddiv
    adc.o(.text.task_adc) refers to dmul.o(.text) for __aeabi_dmul
    adc.o(.text.task_adc) refers to dfixi.o(.text) for __aeabi_d2iz
    adc.o(.text.task_adc) refers to cs32f10x_adc.o(.text.adc_regular_channel_config) for adc_regular_channel_config
    adc.o(.ARM.exidx.text.task_adc) refers to adc.o(.text.task_adc) for [Anonymous Symbol]
    app.o(.text.f_uaba_open) refers to app.o(.rodata.str1.1) for .L.str.2
    app.o(.text.f_uaba_open) refers to printf8.o(i.__0printf$8) for __2printf
    app.o(.text.f_uaba_open) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.f_uaba_open) refers to app.o(.text.f_uaba_open) for [Anonymous Symbol]
    app.o(.text.f_uaba_close) refers to app.o(.rodata.str1.1) for .L.str.2
    app.o(.text.f_uaba_close) refers to printf8.o(i.__0printf$8) for __2printf
    app.o(.text.f_uaba_close) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.f_uaba_close) refers to app.o(.text.f_uaba_close) for [Anonymous Symbol]
    app.o(.text.f_uaba_fault_ov) refers to app.o(.rodata.str1.1) for .L.str.5
    app.o(.text.f_uaba_fault_ov) refers to printf8.o(i.__0printf$8) for __2printf
    app.o(.text.f_uaba_fault_ov) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.f_uaba_fault_ov) refers to app.o(.text.f_uaba_fault_ov) for [Anonymous Symbol]
    app.o(.text.app_init) refers to app.o(.data.sys) for sys
    app.o(.text.app_init) refers to memseta.o(.text) for __aeabi_memclr4
    app.o(.ARM.exidx.text.app_init) refers to app.o(.text.app_init) for [Anonymous Symbol]
    app.o(.text.task_app) refers to app.o(.data.sys) for sys
    app.o(.text.task_app) refers to app.o(.bss.sys_switch_check.key2_high_cnt) for sys_switch_check.key2_high_cnt
    app.o(.text.task_app) refers to app.o(.bss.sys_switch_check.key2_low_cnt) for sys_switch_check.key2_low_cnt
    app.o(.text.task_app) refers to led.o(.data.led) for led
    app.o(.text.task_app) refers to app.o(.bss.key_fast_switch.last_level) for key_fast_switch.last_level
    app.o(.text.task_app) refers to app.o(.bss.key_fast_switch.timer) for key_fast_switch.timer
    app.o(.text.task_app) refers to app.o(.bss.key_fast_switch.num) for key_fast_switch.num
    app.o(.text.task_app) refers to app.o(.text.app_led_control) for app_led_control
    app.o(.text.task_app) refers to app.o(.text.app_usba_control_protect) for app_usba_control_protect
    app.o(.text.task_app) refers to bms_pro.o(.bss.bms_tmp1) for bms_tmp1
    app.o(.text.task_app) refers to bms_pro.o(.bss.bms_tmp2) for bms_tmp2
    app.o(.text.task_app) refers to bms_pro.o(.bss.bms_tmp3) for bms_tmp3
    app.o(.text.task_app) refers to bms_pro.o(.bss.bms_tmp4) for bms_tmp4
    app.o(.text.task_app) refers to app.o(.bss.app_power_rank_contorl.cnt) for app_power_rank_contorl.cnt
    app.o(.text.task_app) refers to app.o(.text.app_power_sw_contorl) for app_power_sw_contorl
    app.o(.text.task_app) refers to app.o(.text.app_temperature_protect) for app_temperature_protect
    app.o(.text.task_app) refers to app.o(.text.sleep_control) for sleep_control
    app.o(.ARM.exidx.text.task_app) refers to app.o(.text.task_app) for [Anonymous Symbol]
    app.o(.text.sys_switch_check) refers to app.o(.bss.sys_switch_check.key2_high_cnt) for sys_switch_check.key2_high_cnt
    app.o(.text.sys_switch_check) refers to app.o(.data.sys) for sys
    app.o(.text.sys_switch_check) refers to app.o(.bss.sys_switch_check.key2_low_cnt) for sys_switch_check.key2_low_cnt
    app.o(.ARM.exidx.text.sys_switch_check) refers to app.o(.text.sys_switch_check) for [Anonymous Symbol]
    app.o(.text.sys_pow_on_off_deal) refers to app.o(.data.sys) for sys
    app.o(.text.sys_pow_on_off_deal) refers to led.o(.data.led) for led
    app.o(.ARM.exidx.text.sys_pow_on_off_deal) refers to app.o(.text.sys_pow_on_off_deal) for [Anonymous Symbol]
    app.o(.text.key_fast_switch) refers to app.o(.bss.key_fast_switch.last_level) for key_fast_switch.last_level
    app.o(.text.key_fast_switch) refers to app.o(.bss.key_fast_switch.timer) for key_fast_switch.timer
    app.o(.text.key_fast_switch) refers to app.o(.bss.key_fast_switch.num) for key_fast_switch.num
    app.o(.text.key_fast_switch) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.key_fast_switch) refers to app.o(.text.key_fast_switch) for [Anonymous Symbol]
    app.o(.text.app_led_control) refers to app.o(.data.sys) for sys
    app.o(.text.app_led_control) refers to led.o(.data.led) for led
    app.o(.text.app_led_control) refers to app.o(.bss.app_led_control.err_mode) for app_led_control.err_mode
    app.o(.text.app_led_control) refers to printf8.o(i.__0printf$8) for __2printf
    app.o(.ARM.exidx.text.app_led_control) refers to app.o(.text.app_led_control) for [Anonymous Symbol]
    app.o(.text.app_usba_control_protect) refers to app.o(.data.sys) for sys
    app.o(.text.app_usba_control_protect) refers to app.o(.bss.app_usba_control_protect.recover_cnt) for app_usba_control_protect.recover_cnt
    app.o(.text.app_usba_control_protect) refers to app.o(.bss.portA_plug_check.cnt) for portA_plug_check.cnt
    app.o(.text.app_usba_control_protect) refers to app.o(.bss.app_usba_control_protect.oc_cnt) for app_usba_control_protect.oc_cnt
    app.o(.text.app_usba_control_protect) refers to app.o(.bss.app_usba_control_protect.small_cur_cnt) for app_usba_control_protect.small_cur_cnt
    app.o(.ARM.exidx.text.app_usba_control_protect) refers to app.o(.text.app_usba_control_protect) for [Anonymous Symbol]
    app.o(.text.app_power_rank_contorl) refers to bms_pro.o(.bss.bms_tmp1) for bms_tmp1
    app.o(.text.app_power_rank_contorl) refers to bms_pro.o(.bss.bms_tmp2) for bms_tmp2
    app.o(.text.app_power_rank_contorl) refers to bms_pro.o(.bss.bms_tmp3) for bms_tmp3
    app.o(.text.app_power_rank_contorl) refers to bms_pro.o(.bss.bms_tmp4) for bms_tmp4
    app.o(.text.app_power_rank_contorl) refers to app.o(.data.sys) for sys
    app.o(.text.app_power_rank_contorl) refers to app.o(.bss.app_power_rank_contorl.cnt) for app_power_rank_contorl.cnt
    app.o(.ARM.exidx.text.app_power_rank_contorl) refers to app.o(.text.app_power_rank_contorl) for [Anonymous Symbol]
    app.o(.text.app_power_sw_contorl) refers to app.o(.data.sys) for sys
    app.o(.text.app_power_sw_contorl) refers to communication.o(.text.cmd_g020_write) for cmd_g020_write
    app.o(.ARM.exidx.text.app_power_sw_contorl) refers to app.o(.text.app_power_sw_contorl) for [Anonymous Symbol]
    app.o(.text.app_temperature_protect) refers to app.o(.data.sys) for sys
    app.o(.text.app_temperature_protect) refers to bms_pro.o(.bss.bms_tmp1) for bms_tmp1
    app.o(.text.app_temperature_protect) refers to bms_pro.o(.bss.bms_tmp2) for bms_tmp2
    app.o(.text.app_temperature_protect) refers to bms_pro.o(.bss.bms_tmp3) for bms_tmp3
    app.o(.text.app_temperature_protect) refers to app.o(.bss.app_temperature_protect.rep.0) for app_temperature_protect.rep.0
    app.o(.text.app_temperature_protect) refers to app.o(.bss.app_temperature_protect.rep.1) for app_temperature_protect.rep.1
    app.o(.text.app_temperature_protect) refers to app.o(.bss.app_temperature_protect.rep.2) for app_temperature_protect.rep.2
    app.o(.text.app_temperature_protect) refers to app.o(.bss.app_temperature_protect.rep.3) for app_temperature_protect.rep.3
    app.o(.ARM.exidx.text.app_temperature_protect) refers to app.o(.text.app_temperature_protect) for [Anonymous Symbol]
    app.o(.text.app_eta_control) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.app_eta_control) refers to app.o(.text.app_eta_control) for [Anonymous Symbol]
    app.o(.text.sleep_control) refers to app.o(.data.sys) for sys
    app.o(.text.sleep_control) refers to app.o(.bss.sleep_control.delay) for sleep_control.delay
    app.o(.text.sleep_control) refers to puts.o(i.puts) for puts
    app.o(.text.sleep_control) refers to init.o(.text.deinit_befor_sleep) for deinit_befor_sleep
    app.o(.text.sleep_control) refers to cs32f10x_pmu.o(.text.pmu_stop_mode_enter) for pmu_stop_mode_enter
    app.o(.text.sleep_control) refers to cs32f10x_rcu.o(.text.rcu_clkready_reset_flag_get) for rcu_clkready_reset_flag_get
    app.o(.text.sleep_control) refers to cs32f10x_rcu.o(.text.rcu_sysclk_config) for rcu_sysclk_config
    app.o(.text.sleep_control) refers to cs32f10x_rcu.o(.text.rcu_sysclk_src_get) for rcu_sysclk_src_get
    app.o(.text.sleep_control) refers to init.o(.text.init_after_sleep) for init_after_sleep
    app.o(.ARM.exidx.text.sleep_control) refers to app.o(.text.sleep_control) for [Anonymous Symbol]
    app.o(.text.f_uaba_fault_oc) refers to app.o(.rodata.str1.1) for .L.str.5
    app.o(.text.f_uaba_fault_oc) refers to printf8.o(i.__0printf$8) for __2printf
    app.o(.text.f_uaba_fault_oc) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.f_uaba_fault_oc) refers to app.o(.text.f_uaba_fault_oc) for [Anonymous Symbol]
    app.o(.text.eta_driver) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.eta_driver) refers to app.o(.text.eta_driver) for [Anonymous Symbol]
    app.o(.text.app_bms_comm_recover) refers to app.o(.bss.app_bms_comm_recover.cnt) for app_bms_comm_recover.cnt
    app.o(.text.app_bms_comm_recover) refers to app.o(.data.sys) for sys
    app.o(.text.app_bms_comm_recover) refers to bms.o(.text.bq76942_reset) for bq76942_reset
    app.o(.text.app_bms_comm_recover) refers to coulomp.o(.text.coulomp_init) for coulomp_init
    app.o(.text.app_bms_comm_recover) refers to led.o(.data.led) for led
    app.o(.ARM.exidx.text.app_bms_comm_recover) refers to app.o(.text.app_bms_comm_recover) for [Anonymous Symbol]
    app.o(.text.tick_delay) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.tick_delay) refers to app.o(.text.tick_delay) for [Anonymous Symbol]
    app.o(.text.app_bms_charge_to_active) refers to app.o(.data.sys) for sys
    app.o(.text.app_bms_charge_to_active) refers to bms.o(.text.BQ769x2_RESET_DSG_OFF) for BQ769x2_RESET_DSG_OFF
    app.o(.text.app_bms_charge_to_active) refers to app.o(.bss.app_bms_charge_to_active.cnt) for app_bms_charge_to_active.cnt
    app.o(.text.app_bms_charge_to_active) refers to bms.o(.text.BQ769x2_DSG_OFF) for BQ769x2_DSG_OFF
    app.o(.ARM.exidx.text.app_bms_charge_to_active) refers to app.o(.text.app_bms_charge_to_active) for [Anonymous Symbol]
    app.o(.data.sys) refers to app.o(.text.f_uaba_open) for f_uaba_open
    app.o(.data.sys) refers to app.o(.text.f_uaba_close) for f_uaba_close
    app.o(.data.sys) refers to app.o(.text.f_uaba_fault_ov) for f_uaba_fault_ov
    bms.o(.text.IIC_WriteData) refers to iic.o(.text.I2C_WriteMulti) for I2C_WriteMulti
    bms.o(.ARM.exidx.text.IIC_WriteData) refers to bms.o(.text.IIC_WriteData) for [Anonymous Symbol]
    bms.o(.text.IIC_ReadData) refers to iic.o(.text.I2C_ReadMulti) for I2C_ReadMulti
    bms.o(.ARM.exidx.text.IIC_ReadData) refers to bms.o(.text.IIC_ReadData) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.CopyArray) refers to bms.o(.text.CopyArray) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.Checksum) refers to bms.o(.text.Checksum) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.CRC8) refers to bms.o(.text.CRC8) for [Anonymous Symbol]
    bms.o(.text.I2C_WriteReg) refers to iic.o(.text.I2C_WriteMulti) for I2C_WriteMulti
    bms.o(.ARM.exidx.text.I2C_WriteReg) refers to bms.o(.text.I2C_WriteReg) for [Anonymous Symbol]
    bms.o(.text.I2C_ReadReg) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms.o(.text.I2C_ReadReg) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.text.I2C_ReadReg) refers to iic.o(.text.I2C_ReadMulti) for I2C_ReadMulti
    bms.o(.ARM.exidx.text.I2C_ReadReg) refers to bms.o(.text.I2C_ReadReg) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.delay_us_2ms) refers to bms.o(.text.delay_us_2ms) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_SetRegister) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.BQ769x2_SetRegister) refers to bms.o(.bss.u16_nack_flag) for u16_nack_flag
    bms.o(.ARM.exidx.text.BQ769x2_SetRegister) refers to bms.o(.text.BQ769x2_SetRegister) for [Anonymous Symbol]
    bms.o(.text.BMS_FET_ENABLE) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.BMS_FET_ENABLE) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.text.BMS_FET_ENABLE) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BMS_FET_ENABLE) refers to bms.o(.text.BMS_FET_ENABLE) for [Anonymous Symbol]
    bms.o(.text.Subcommands) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.Subcommands) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.text.Subcommands) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.Subcommands) refers to bms.o(.text.Subcommands) for [Anonymous Symbol]
    bms.o(.text.CommandSubcommands) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.CommandSubcommands) refers to app.o(.data.sys) for sys
    bms.o(.ARM.exidx.text.CommandSubcommands) refers to bms.o(.text.CommandSubcommands) for [Anonymous Symbol]
    bms.o(.text.bms_init) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.bms_init) refers to app.o(.data.sys) for sys
    bms.o(.text.bms_init) refers to bms.o(.text.BQ769x2_Init) for BQ769x2_Init
    bms.o(.text.bms_init) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.text.bms_init) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.bms_init) refers to bms.o(.bss.write_nack) for write_nack
    bms.o(.text.bms_init) refers to printf8.o(i.__0printf$8) for __2printf
    bms.o(.ARM.exidx.text.bms_init) refers to bms.o(.text.bms_init) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.BQ769x2_DSG_OFF) refers to bms.o(.text.BQ769x2_DSG_OFF) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.BQ769x2_RESET_CHG_OFF) refers to bms.o(.text.BQ769x2_RESET_CHG_OFF) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.BQ769x2_ReleaseShutdownPin) refers to bms.o(.text.BQ769x2_ReleaseShutdownPin) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_Init) refers to bms.o(.text.turn_to_CFGUPDATE) for turn_to_CFGUPDATE
    bms.o(.text.BQ769x2_Init) refers to app.o(.data.sys) for sys
    bms.o(.text.BQ769x2_Init) refers to bms.o(.data.bms_init_array) for bms_init_array
    bms.o(.text.BQ769x2_Init) refers to bms.o(.text.BQ769x2_SetRegister) for BQ769x2_SetRegister
    bms.o(.text.BQ769x2_Init) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.BQ769x2_Init) refers to bms.o(.data.bms_ccGain) for bms_ccGain
    bms.o(.text.BQ769x2_Init) refers to bms.o(.data.bms_capGain) for bms_capGain
    bms.o(.ARM.exidx.text.BQ769x2_Init) refers to bms.o(.text.BQ769x2_Init) for [Anonymous Symbol]
    bms.o(.text.read_data_cmd_long) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.read_data_cmd_long) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.text.read_data_cmd_long) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.read_data_cmd_long) refers to bms.o(.text.read_data_cmd_long) for [Anonymous Symbol]
    bms.o(.text.DirectCommands) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.DirectCommands) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.DirectCommands) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.ARM.exidx.text.DirectCommands) refers to bms.o(.text.DirectCommands) for [Anonymous Symbol]
    bms.o(.text.BSWBq769x2ReadBatteryStatus) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BSWBq769x2ReadBatteryStatus) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.BSWBq769x2ReadBatteryStatus) refers to bms.o(.bss.write_res) for write_res
    bms.o(.ARM.exidx.text.BSWBq769x2ReadBatteryStatus) refers to bms.o(.text.BSWBq769x2ReadBatteryStatus) for [Anonymous Symbol]
    bms.o(.text.load_bms_init_array) refers to bms.o(.data.bms_init_array) for bms_init_array
    bms.o(.text.load_bms_init_array) refers to bms.o(.text.BQ769x2_SetRegister) for BQ769x2_SetRegister
    bms.o(.ARM.exidx.text.load_bms_init_array) refers to bms.o(.text.load_bms_init_array) for [Anonymous Symbol]
    bms.o(.text.turn_to_CFGUPDATE) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.turn_to_CFGUPDATE) refers to app.o(.data.sys) for sys
    bms.o(.text.turn_to_CFGUPDATE) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.turn_to_CFGUPDATE) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.turn_to_CFGUPDATE) refers to bms.o(.bss.write_res) for write_res
    bms.o(.ARM.exidx.text.turn_to_CFGUPDATE) refers to bms.o(.text.turn_to_CFGUPDATE) for [Anonymous Symbol]
    bms.o(.text.set_low_cell_predsg) refers to bms.o(.text.turn_to_CFGUPDATE) for turn_to_CFGUPDATE
    bms.o(.text.set_low_cell_predsg) refers to bms.o(.text.BQ769x2_SetRegister) for BQ769x2_SetRegister
    bms.o(.text.set_low_cell_predsg) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.set_low_cell_predsg) refers to app.o(.data.sys) for sys
    bms.o(.ARM.exidx.text.set_low_cell_predsg) refers to bms.o(.text.set_low_cell_predsg) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.BQ769x2_RESET_DSG_OFF) refers to bms.o(.text.BQ769x2_RESET_DSG_OFF) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.BQ769x2_CHG_OFF) refers to bms.o(.text.BQ769x2_CHG_OFF) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.FET_Status) for FET_Status
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.DSG) for DSG
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.CHG) for CHG
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.PCHG) for PCHG
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.PDSG) for PDSG
    bms.o(.ARM.exidx.text.BQ769x2_ReadFETStatus) refers to bms.o(.text.BQ769x2_ReadFETStatus) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.BQ769x2_ShutdownPin) refers to bms.o(.text.BQ769x2_ShutdownPin) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadAlarmStatus) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadAlarmStatus) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_ReadAlarmStatus) refers to bms.o(.text.BQ769x2_ReadAlarmStatus) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadAlarmRaw) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadAlarmRaw) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_ReadAlarmRaw) refers to bms.o(.text.BQ769x2_ReadAlarmRaw) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.value_SafetyStatusA) for value_SafetyStatusA
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.UV_Fault) for UV_Fault
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.OV_Fault) for OV_Fault
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.SCD_Fault) for SCD_Fault
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.OCD_Fault) for OCD_Fault
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.OCC_Fault) for OCC_Fault
    bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.text.BQ769x2_ReadSafetyStatusA) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadSafetyStatusB) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadSafetyStatusB) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.BQ769x2_ReadSafetyStatusB) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms.o(.text.BQ769x2_ReadSafetyStatusB) refers to bms.o(.bss.value_SafetyStatusB) for value_SafetyStatusB
    bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusB) refers to bms.o(.text.BQ769x2_ReadSafetyStatusB) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.value_SafetyStatusC) for value_SafetyStatusC
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.value_SafetyStatusA) for value_SafetyStatusA
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.value_SafetyStatusB) for value_SafetyStatusB
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.ProtectionsTriggered) for ProtectionsTriggered
    bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.text.BQ769x2_ReadSafetyStatusC) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadPFStatusA) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadPFStatusA) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.BQ769x2_ReadPFStatusA) refers to bms.o(.bss.value_PFStatusA) for value_PFStatusA
    bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusA) refers to bms.o(.text.BQ769x2_ReadPFStatusA) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadPFStatusB) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadPFStatusB) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.BQ769x2_ReadPFStatusB) refers to bms.o(.bss.value_PFStatusB) for value_PFStatusB
    bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusB) refers to bms.o(.text.BQ769x2_ReadPFStatusB) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadPFStatusC) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadPFStatusC) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.BQ769x2_ReadPFStatusC) refers to bms.o(.bss.value_PFStatusC) for value_PFStatusC
    bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusC) refers to bms.o(.text.BQ769x2_ReadPFStatusC) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadVoltage) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadVoltage) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_ReadVoltage) refers to bms.o(.text.BQ769x2_ReadVoltage) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to bms.o(.bss.CellVoltage) for CellVoltage
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to bms.o(.bss.Stack_Voltage) for Stack_Voltage
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to app.o(.data.sys) for sys
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to bms.o(.bss.Pack_Voltage) for Pack_Voltage
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to bms.o(.bss.LD_Voltage) for LD_Voltage
    bms.o(.ARM.exidx.text.BQ769x2_ReadAllVoltages) refers to bms.o(.text.BQ769x2_ReadAllVoltages) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_Read_Vcells_123) refers to bms.o(.bss.V_cells) for V_cells
    bms.o(.text.BQ769x2_Read_Vcells_123) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_123) refers to bms.o(.text.BQ769x2_Read_Vcells_123) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_Read_Vcells_5) refers to bms.o(.bss.V_cells) for V_cells
    bms.o(.text.BQ769x2_Read_Vcells_5) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_5) refers to bms.o(.text.BQ769x2_Read_Vcells_5) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_Read_Vcells_7) refers to bms.o(.bss.V_cells) for V_cells
    bms.o(.text.BQ769x2_Read_Vcells_7) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_7) refers to bms.o(.text.BQ769x2_Read_Vcells_7) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_Read_Vcells_9) refers to bms.o(.bss.V_cells) for V_cells
    bms.o(.text.BQ769x2_Read_Vcells_9) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_9) refers to bms.o(.text.BQ769x2_Read_Vcells_9) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadCurrent) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadCurrent) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_ReadCurrent) refers to bms.o(.text.BQ769x2_ReadCurrent) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadTemperature) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadTemperature) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_ReadTemperature) refers to bms.o(.text.BQ769x2_ReadTemperature) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadPassQ) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.BQ769x2_ReadPassQ) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.text.BQ769x2_ReadPassQ) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.BQ769x2_ReadPassQ) refers to bms.o(.bss.AccumulatedCharge_Int) for AccumulatedCharge_Int
    bms.o(.text.BQ769x2_ReadPassQ) refers to bms.o(.bss.AccumulatedCharge_Frac) for AccumulatedCharge_Frac
    bms.o(.text.BQ769x2_ReadPassQ) refers to bms.o(.bss.AccumulatedCharge_Time) for AccumulatedCharge_Time
    bms.o(.ARM.exidx.text.BQ769x2_ReadPassQ) refers to bms.o(.text.BQ769x2_ReadPassQ) for [Anonymous Symbol]
    bms.o(.text.bq76942_reset) refers to app.o(.bss.xbms) for xbms
    bms.o(.text.bq76942_reset) refers to app.o(.data.sys) for sys
    bms.o(.text.bq76942_reset) refers to puts.o(i.puts) for puts
    bms.o(.text.bq76942_reset) refers to bms.o(.text.bms_init) for bms_init
    bms.o(.ARM.exidx.text.bq76942_reset) refers to bms.o(.text.bq76942_reset) for [Anonymous Symbol]
    communication.o(.text.task_com_rx) refers to queue.o(.bss.rxBuffer) for rxBuffer
    communication.o(.text.task_com_rx) refers to queue.o(.text.ProcessData1) for ProcessData1
    communication.o(.ARM.exidx.text.task_com_rx) refers to communication.o(.text.task_com_rx) for [Anonymous Symbol]
    communication.o(.text.cmd_g020_write) refers to communication.o(.bss.cmd_g020) for cmd_g020
    communication.o(.ARM.exidx.text.cmd_g020_write) refers to communication.o(.text.cmd_g020_write) for [Anonymous Symbol]
    communication.o(.text.cmd_g020_get) refers to communication.o(.bss.cmd_g020) for cmd_g020
    communication.o(.ARM.exidx.text.cmd_g020_get) refers to communication.o(.text.cmd_g020_get) for [Anonymous Symbol]
    communication.o(.text.task_com_tx) refers to communication.o(.bss.rx_CB) for rx_CB
    communication.o(.text.task_com_tx) refers to communication.o(.bss.field_Transmit) for field_Transmit
    communication.o(.text.task_com_tx) refers to app.o(.data.sys) for sys
    communication.o(.text.task_com_tx) refers to communication.o(.bss.cmd_g020) for cmd_g020
    communication.o(.text.task_com_tx) refers to communication.o(.bss.receive_ok) for receive_ok
    communication.o(.ARM.exidx.text.task_com_tx) refers to communication.o(.text.task_com_tx) for [Anonymous Symbol]
    communication.o(.ARM.exidx.text.transmit_data) refers to communication.o(.text.transmit_data) for [Anonymous Symbol]
    communication.o(.text.data_printf) refers to printf8.o(i.__0printf$8) for __2printf
    communication.o(.text.data_printf) refers to putchar.o(i.putchar) for putchar
    communication.o(.ARM.exidx.text.data_printf) refers to communication.o(.text.data_printf) for [Anonymous Symbol]
    debug.o(.text.task_debug) refers to app.o(.data.sys) for sys
    debug.o(.text.task_debug) refers to debug.o(.data.p) for p
    debug.o(.text.task_debug) refers to debug.o(.rodata.str1.1) for .L.str.18
    debug.o(.text.task_debug) refers to printf8.o(i.__0printf$8) for __2printf
    debug.o(.text.task_debug) refers to debug.o(.data.pCPort) for pCPort
    debug.o(.text.task_debug) refers to debug.o(.data.pGPort) for pGPort
    debug.o(.text.task_debug) refers to debug.o(.data.pAPort) for pAPort
    debug.o(.text.task_debug) refers to led.o(.data.led) for led
    debug.o(.text.task_debug) refers to debug.o(.data.pled) for pled
    debug.o(.text.task_debug) refers to debug.o(.data.pled2) for pled2
    debug.o(.text.task_debug) refers to bms.o(.bss.Stack_Voltage) for Stack_Voltage
    debug.o(.text.task_debug) refers to communication.o(.text.cmd_g020_get) for cmd_g020_get
    debug.o(.text.task_debug) refers to bms.o(.bss.DSG) for DSG
    debug.o(.text.task_debug) refers to bms.o(.bss.CHG) for CHG
    debug.o(.text.task_debug) refers to bms.o(.bss.PCHG) for PCHG
    debug.o(.text.task_debug) refers to bms.o(.bss.PDSG) for PDSG
    debug.o(.ARM.exidx.text.task_debug) refers to debug.o(.text.task_debug) for [Anonymous Symbol]
    debug.o(.data.p) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    debug.o(.data.pCPort) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    debug.o(.data.pGPort) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    debug.o(.data.pAPort) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    debug.o(.data.pled) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    debug.o(.data.pled2) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    debug.o(.data.pg020) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    key.o(.text.key_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    key.o(.text.key_init) refers to key.o(.bss.key_cb) for key_cb
    key.o(.ARM.exidx.text.key_init) refers to key.o(.text.key_init) for [Anonymous Symbol]
    key.o(.text.task_key) refers to key.o(.bss.key_cb) for key_cb
    key.o(.ARM.exidx.text.task_key) refers to key.o(.text.task_key) for [Anonymous Symbol]
    led.o(.text.f_led_show_battery) refers to led.o(.data.led) for led
    led.o(.text.f_led_show_battery) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_show_battery) refers to printf8.o(i.__0printf$8) for __2printf
    led.o(.ARM.exidx.text.f_led_show_battery) refers to led.o(.text.f_led_show_battery) for [Anonymous Symbol]
    led.o(.text.f_led_discharge) refers to led.o(.data.led) for led
    led.o(.text.f_led_discharge) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_discharge) refers to printf8.o(i.__0printf$8) for __2printf
    led.o(.ARM.exidx.text.f_led_discharge) refers to led.o(.text.f_led_discharge) for [Anonymous Symbol]
    led.o(.text.f_led_charge) refers to led.o(.data.led) for led
    led.o(.text.f_led_charge) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_charge) refers to printf8.o(i.__0printf$8) for __2printf
    led.o(.text.f_led_charge) refers to app.o(.data.sys) for sys
    led.o(.ARM.exidx.text.f_led_charge) refers to led.o(.text.f_led_charge) for [Anonymous Symbol]
    led.o(.text.f_led_health) refers to led.o(.data.led) for led
    led.o(.text.f_led_health) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_health) refers to printf8.o(i.__0printf$8) for __2printf
    led.o(.ARM.exidx.text.f_led_health) refers to led.o(.text.f_led_health) for [Anonymous Symbol]
    led.o(.text.f_led_alloff) refers to led.o(.data.led) for led
    led.o(.text.f_led_alloff) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_alloff) refers to printf8.o(i.__0printf$8) for __2printf
    led.o(.ARM.exidx.text.f_led_alloff) refers to led.o(.text.f_led_alloff) for [Anonymous Symbol]
    led.o(.text.f_led_warning) refers to led.o(.data.led) for led
    led.o(.text.f_led_warning) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_warning) refers to printf8.o(i.__0printf$8) for __2printf
    led.o(.ARM.exidx.text.f_led_warning) refers to led.o(.text.f_led_warning) for [Anonymous Symbol]
    led.o(.text.f_led_err) refers to led.o(.data.led) for led
    led.o(.text.f_led_err) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_err) refers to printf8.o(i.__0printf$8) for __2printf
    led.o(.ARM.exidx.text.f_led_err) refers to led.o(.text.f_led_err) for [Anonymous Symbol]
    led.o(.text.f_led_port_normal) refers to led.o(.data.led) for led
    led.o(.text.f_led_port_normal) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_port_normal) refers to printf8.o(i.__0printf$8) for __2printf
    led.o(.ARM.exidx.text.f_led_port_normal) refers to led.o(.text.f_led_port_normal) for [Anonymous Symbol]
    led.o(.text.f_led_port_warning) refers to led.o(.data.led) for led
    led.o(.text.f_led_port_warning) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_port_warning) refers to printf8.o(i.__0printf$8) for __2printf
    led.o(.text.f_led_port_warning) refers to app.o(.data.sys) for sys
    led.o(.ARM.exidx.text.f_led_port_warning) refers to led.o(.text.f_led_port_warning) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.ledBreath_init) refers to led.o(.text.ledBreath_init) for [Anonymous Symbol]
    led.o(.text.led_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    led.o(.text.led_init) refers to led.o(.data.led) for led
    led.o(.ARM.exidx.text.led_init) refers to led.o(.text.led_init) for [Anonymous Symbol]
    led.o(.text.task_led) refers to led.o(.data.led) for led
    led.o(.text.task_led) refers to led.o(.text.led_bat_show) for led_bat_show
    led.o(.text.task_led) refers to led.o(.text.led_port_show) for led_port_show
    led.o(.ARM.exidx.text.task_led) refers to led.o(.text.task_led) for [Anonymous Symbol]
    led.o(.text.led_bat_show) refers to app.o(.data.sys) for sys
    led.o(.text.led_bat_show) refers to led.o(.data.led) for led
    led.o(.ARM.exidx.text.led_bat_show) refers to led.o(.text.led_bat_show) for [Anonymous Symbol]
    led.o(.text.led_port_show) refers to app.o(.data.sys) for sys
    led.o(.ARM.exidx.text.led_port_show) refers to led.o(.text.led_port_show) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.led_pwm_control) refers to led.o(.text.led_pwm_control) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.swd_to_gpio) refers to led.o(.text.swd_to_gpio) for [Anonymous Symbol]
    led.o(.data.led) refers to led.o(.text.f_led_show_battery) for f_led_show_battery
    led.o(.data.led) refers to led.o(.text.f_led_discharge) for f_led_discharge
    led.o(.data.led) refers to led.o(.text.f_led_charge) for f_led_charge
    led.o(.data.led) refers to led.o(.text.f_led_health) for f_led_health
    led.o(.data.led) refers to led.o(.text.f_led_alloff) for f_led_alloff
    led.o(.data.led) refers to led.o(.text.f_led_warning) for f_led_warning
    led.o(.data.led) refers to led.o(.text.f_led_err) for f_led_err
    led.o(.data.led) refers to led.o(.text.f_led_port_normal) for f_led_port_normal
    led.o(.data.led) refers to led.o(.text.f_led_port_warning) for f_led_port_warning
    queue.o(.ARM.exidx.text.circ_buffer_init) refers to queue.o(.text.circ_buffer_init) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.circ_buffer_push) refers to queue.o(.text.circ_buffer_push) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.circ_buffer_pop) refers to queue.o(.text.circ_buffer_pop) for [Anonymous Symbol]
    queue.o(.text.output_buf) refers to printf8.o(i.__0printf$8) for __2printf
    queue.o(.text.output_buf) refers to puts.o(i.puts) for puts
    queue.o(.ARM.exidx.text.output_buf) refers to queue.o(.text.output_buf) for [Anonymous Symbol]
    queue.o(.text.ProcessPacket) refers to communication.o(.bss.field_receive) for field_receive
    queue.o(.text.ProcessPacket) refers to queue.o(.rodata.str1.1) for .Lstr.5
    queue.o(.text.ProcessPacket) refers to puts.o(i.puts) for puts
    queue.o(.text.ProcessPacket) refers to communication.o(.bss.receive_ok) for receive_ok
    queue.o(.text.ProcessPacket) refers to app.o(.data.sys) for sys
    queue.o(.ARM.exidx.text.ProcessPacket) refers to queue.o(.text.ProcessPacket) for [Anonymous Symbol]
    queue.o(.text.ProcessData) refers to queue.o(.bss.ProcessData.receiving) for ProcessData.receiving
    queue.o(.text.ProcessData) refers to communication.o(.bss.field_receive) for field_receive
    queue.o(.text.ProcessData) refers to queue.o(.bss.ProcessData.packet) for ProcessData.packet
    queue.o(.text.ProcessData) refers to queue.o(.bss.ProcessData.packetIndex) for ProcessData.packetIndex
    queue.o(.text.ProcessData) refers to queue.o(.rodata.str1.1) for .Lstr.5
    queue.o(.text.ProcessData) refers to puts.o(i.puts) for puts
    queue.o(.text.ProcessData) refers to communication.o(.bss.receive_ok) for receive_ok
    queue.o(.text.ProcessData) refers to app.o(.data.sys) for sys
    queue.o(.ARM.exidx.text.ProcessData) refers to queue.o(.text.ProcessData) for [Anonymous Symbol]
    queue.o(.text.ProcessData1) refers to queue.o(.bss.ProcessData1.receive_status) for ProcessData1.receive_status
    queue.o(.text.ProcessData1) refers to queue.o(.bss.ProcessData1.packetIndex) for ProcessData1.packetIndex
    queue.o(.text.ProcessData1) refers to queue.o(.bss.ProcessData1.packet) for ProcessData1.packet
    queue.o(.text.ProcessData1) refers to communication.o(.bss.field_receive) for field_receive
    queue.o(.text.ProcessData1) refers to queue.o(.rodata.str1.1) for .Lstr.5
    queue.o(.text.ProcessData1) refers to puts.o(i.puts) for puts
    queue.o(.text.ProcessData1) refers to communication.o(.bss.receive_ok) for receive_ok
    queue.o(.text.ProcessData1) refers to app.o(.data.sys) for sys
    queue.o(.ARM.exidx.text.ProcessData1) refers to queue.o(.text.ProcessData1) for [Anonymous Symbol]
    task.o(.text.Task_Marks_Handler_Callback) refers to task.o(.data.Tasks_Max) for Tasks_Max
    task.o(.text.Task_Marks_Handler_Callback) refers to task.o(.data.Task_Comps) for Task_Comps
    task.o(.ARM.exidx.text.Task_Marks_Handler_Callback) refers to task.o(.text.Task_Marks_Handler_Callback) for [Anonymous Symbol]
    task.o(.text.Task_Pro_Handler_Callback) refers to task.o(.data.Tasks_Max) for Tasks_Max
    task.o(.text.Task_Pro_Handler_Callback) refers to task.o(.data.Task_Comps) for Task_Comps
    task.o(.ARM.exidx.text.Task_Pro_Handler_Callback) refers to task.o(.text.Task_Pro_Handler_Callback) for [Anonymous Symbol]
    task.o(.data.Task_Comps) refers to adc.o(.text.task_adc) for task_adc
    task.o(.data.Task_Comps) refers to key.o(.text.task_key) for task_key
    task.o(.data.Task_Comps) refers to debug.o(.text.task_debug) for task_debug
    task.o(.data.Task_Comps) refers to app.o(.text.task_app) for task_app
    task.o(.data.Task_Comps) refers to communication.o(.text.task_com_rx) for task_com_rx
    task.o(.data.Task_Comps) refers to communication.o(.text.task_com_tx) for task_com_tx
    task.o(.data.Task_Comps) refers to led.o(.text.task_led) for task_led
    task.o(.data.Task_Comps) refers to coulomp.o(.text.task_coulomp) for task_coulomp
    task.o(.data.Task_Comps) refers to bathealth.o(.text.task_health) for task_health
    iic.o(.text.i2c_init_) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    iic.o(.text.i2c_init_) refers to cs32f10x_i2c.o(.text.i2c_init) for i2c_init
    iic.o(.ARM.exidx.text.i2c_init_) refers to iic.o(.text.i2c_init_) for [Anonymous Symbol]
    iic.o(.text.i2c_master_write) refers to cs32f10x_i2c.o(.text.i2c_flag_status_check) for i2c_flag_status_check
    iic.o(.text.i2c_master_write) refers to cs32f10x_i2c.o(.text.i2c_master_send7bits_address) for i2c_master_send7bits_address
    iic.o(.text.i2c_master_write) refers to cs32f10x_i2c.o(.text.i2c_event_check) for i2c_event_check
    iic.o(.text.i2c_master_write) refers to printf8.o(i.__0printf$8) for __2printf
    iic.o(.ARM.exidx.text.i2c_master_write) refers to iic.o(.text.i2c_master_write) for [Anonymous Symbol]
    iic.o(.text.i2c_master_read) refers to memseta.o(.text) for __aeabi_memclr4
    iic.o(.text.i2c_master_read) refers to cs32f10x_i2c.o(.text.i2c_flag_status_check) for i2c_flag_status_check
    iic.o(.text.i2c_master_read) refers to cs32f10x_i2c.o(.text.i2c_master_send7bits_address) for i2c_master_send7bits_address
    iic.o(.text.i2c_master_read) refers to cs32f10x_i2c.o(.text.i2c_event_check) for i2c_event_check
    iic.o(.text.i2c_master_read) refers to memcpya.o(.text) for __aeabi_memcpy
    iic.o(.ARM.exidx.text.i2c_master_read) refers to iic.o(.text.i2c_master_read) for [Anonymous Symbol]
    iic.o(.text.iic_test) refers to iic.o(.data.iic_test.data.0) for iic_test.data.0
    iic.o(.ARM.exidx.text.iic_test) refers to iic.o(.text.iic_test) for [Anonymous Symbol]
    iic.o(.ARM.exidx.text.i2c_nop) refers to iic.o(.text.i2c_nop) for [Anonymous Symbol]
    iic.o(.text.i2c_init_2) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    iic.o(.ARM.exidx.text.i2c_init_2) refers to iic.o(.text.i2c_init_2) for [Anonymous Symbol]
    iic.o(.ARM.exidx.text.I2C_Start) refers to iic.o(.text.I2C_Start) for [Anonymous Symbol]
    iic.o(.text.I2C_Stop) refers to app.o(.data.sys) for sys
    iic.o(.ARM.exidx.text.I2C_Stop) refers to iic.o(.text.I2C_Stop) for [Anonymous Symbol]
    iic.o(.ARM.exidx.text.I2C_SendAck) refers to iic.o(.text.I2C_SendAck) for [Anonymous Symbol]
    iic.o(.text.I2C_WaitAck) refers to app.o(.data.sys) for sys
    iic.o(.text.I2C_WaitAck) refers to app.o(.bss.xbms) for xbms
    iic.o(.text.I2C_WaitAck) refers to printf8.o(i.__0printf$8) for __2printf
    iic.o(.ARM.exidx.text.I2C_WaitAck) refers to iic.o(.text.I2C_WaitAck) for [Anonymous Symbol]
    iic.o(.text.I2C_SendByte) refers to app.o(.data.sys) for sys
    iic.o(.ARM.exidx.text.I2C_SendByte) refers to iic.o(.text.I2C_SendByte) for [Anonymous Symbol]
    iic.o(.text.I2C_ReceiveByte) refers to app.o(.data.sys) for sys
    iic.o(.ARM.exidx.text.I2C_ReceiveByte) refers to iic.o(.text.I2C_ReceiveByte) for [Anonymous Symbol]
    iic.o(.text.I2C_WriteData) refers to iic.o(.text.I2C_SendByte) for I2C_SendByte
    iic.o(.text.I2C_WriteData) refers to iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    iic.o(.text.I2C_WriteData) refers to app.o(.data.sys) for sys
    iic.o(.ARM.exidx.text.I2C_WriteData) refers to iic.o(.text.I2C_WriteData) for [Anonymous Symbol]
    iic.o(.text.I2C_ReadData) refers to iic.o(.text.I2C_SendByte) for I2C_SendByte
    iic.o(.text.I2C_ReadData) refers to iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    iic.o(.text.I2C_ReadData) refers to app.o(.data.sys) for sys
    iic.o(.ARM.exidx.text.I2C_ReadData) refers to iic.o(.text.I2C_ReadData) for [Anonymous Symbol]
    iic.o(.text.I2C_WriteMulti) refers to iic.o(.text.I2C_SendByte) for I2C_SendByte
    iic.o(.text.I2C_WriteMulti) refers to iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    iic.o(.text.I2C_WriteMulti) refers to app.o(.data.sys) for sys
    iic.o(.ARM.exidx.text.I2C_WriteMulti) refers to iic.o(.text.I2C_WriteMulti) for [Anonymous Symbol]
    iic.o(.text.I2C_ReadMulti) refers to iic.o(.text.I2C_SendByte) for I2C_SendByte
    iic.o(.text.I2C_ReadMulti) refers to iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    iic.o(.text.I2C_ReadMulti) refers to app.o(.data.sys) for sys
    iic.o(.ARM.exidx.text.I2C_ReadMulti) refers to iic.o(.text.I2C_ReadMulti) for [Anonymous Symbol]
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.min_cell_V) for min_cell_V
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_vbat_sum) for bms_vbat_sum
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.max_cell_V) for max_cell_V
    bms_pro.o(.text.find_max_min) refers to bms.o(.bss.V_cells) for V_cells
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_tmp3) for bms_tmp3
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_tmp2) for bms_tmp2
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_tmp_H) for bms_tmp_H
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_tmp1) for bms_tmp1
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_tmp_L) for bms_tmp_L
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.i_bms_tmp_H) for i_bms_tmp_H
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.i_bms_tmp_L) for i_bms_tmp_L
    bms_pro.o(.ARM.exidx.text.find_max_min) refers to bms_pro.o(.text.find_max_min) for [Anonymous Symbol]
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.write_nack) for write_nack
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.bms_pro_flag) for bms_pro_flag
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.u16_nack_flag) for u16_nack_flag
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.protect_scan_flag.pidx) for protect_scan_flag.pidx
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.min_cell_V) for min_cell_V
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_vbat_sum) for bms_vbat_sum
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.max_cell_V) for max_cell_V
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.V_cells) for V_cells
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tmp3) for bms_tmp3
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tmp2) for bms_tmp2
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tmp_H) for bms_tmp_H
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tmp1) for bms_tmp1
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tmp_L) for bms_tmp_L
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.i_bms_tmp_H) for i_bms_tmp_H
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.i_bms_tmp_L) for i_bms_tmp_L
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_curr) for bms_curr
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.err_0v5_cnt) for err_0v5_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_th_chg_cnt) for bms_th_chg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_cell_chg_cnt) for bms_cell_chg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_cell_chg_curr_cnt) for bms_cell_chg_curr_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tmp4) for bms_tmp4
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_t_mos_cnt) for bms_t_mos_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_curr_dsg_cnt) for bms_curr_dsg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.err_3v8_cnt) for err_3v8_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_th_dsg_cnt) for bms_th_dsg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_curr_chg_cnt) for bms_curr_chg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_battery_status) for bms_battery_status
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_rst_cnt) for bms_rst_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tl_chg_cnt) for bms_tl_chg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_t_err_cnt) for bms_t_err_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.err_1v8_cnt) for err_1v8_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.DSG) for DSG
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.CHG) for CHG
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_mos_err_cnt) for bms_mos_err_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tl_dsg_cnt) for bms_tl_dsg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.data.t_power_on_cnt_s) for t_power_on_cnt_s
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.text.CommandSubcommands) for CommandSubcommands
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_cell_dsg_cnt) for bms_cell_dsg_cnt
    bms_pro.o(.ARM.exidx.text.protect_scan_flag) refers to bms_pro.o(.text.protect_scan_flag) for [Anonymous Symbol]
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.task_bms.idx) for task_bms.idx
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadFETStatus) for BQ769x2_ReadFETStatus
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadTemperature) for BQ769x2_ReadTemperature
    bms_pro.o(.text.task_bms) refers to app.o(.data.sys) for sys
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_tmp4) for bms_tmp4
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_tmp2) for bms_tmp2
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadSafetyStatusC) for BQ769x2_ReadSafetyStatusC
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadPFStatusC) for BQ769x2_ReadPFStatusC
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_tmp3) for bms_tmp3
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadSafetyStatusA) for BQ769x2_ReadSafetyStatusA
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadPFStatusA) for BQ769x2_ReadPFStatusA
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadSafetyStatusB) for BQ769x2_ReadSafetyStatusB
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadPFStatusB) for BQ769x2_ReadPFStatusB
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_Read_Vcells_123) for BQ769x2_Read_Vcells_123
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadAlarmRaw) for BQ769x2_ReadAlarmRaw
    bms_pro.o(.text.task_bms) refers to bms.o(.bss.AlarmBits) for AlarmBits
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadAlarmStatus) for BQ769x2_ReadAlarmStatus
    bms_pro.o(.text.task_bms) refers to bms.o(.bss.AlarmBits2) for AlarmBits2
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadAllVoltages) for BQ769x2_ReadAllVoltages
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadVoltage) for BQ769x2_ReadVoltage
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.pack_pin_voltage) for pack_pin_voltage
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_tmp1) for bms_tmp1
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadCurrent) for BQ769x2_ReadCurrent
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_curr) for bms_curr
    bms_pro.o(.text.task_bms) refers to coulomp.o(.bss.coulomp) for coulomp
    bms_pro.o(.text.task_bms) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms_pro.o(.text.task_bms) refers to bms.o(.bss.RX_data) for RX_data
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_battery_status) for bms_battery_status
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_Read_Vcells_5) for BQ769x2_Read_Vcells_5
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_Read_Vcells_7) for BQ769x2_Read_Vcells_7
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_Read_Vcells_9) for BQ769x2_Read_Vcells_9
    bms_pro.o(.text.task_bms) refers to bms.o(.bss.u16_nack_flag) for u16_nack_flag
    bms_pro.o(.text.task_bms) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms_pro.o(.text.task_bms) refers to bms.o(.bss.write_nack) for write_nack
    bms_pro.o(.text.task_bms) refers to bms.o(.data.t_power_on_cnt_s) for t_power_on_cnt_s
    bms_pro.o(.ARM.exidx.text.task_bms) refers to bms_pro.o(.text.task_bms) for [Anonymous Symbol]
    coulomp.o(.text.coulomp_init) refers to coulomp.o(.bss.coulomp) for coulomp
    coulomp.o(.text.coulomp_init) refers to bms.o(.text.BQ769x2_ReadVoltage) for BQ769x2_ReadVoltage
    coulomp.o(.text.coulomp_init) refers to app.o(.data.sys) for sys
    coulomp.o(.text.coulomp_init) refers to coulomp.o(.data.voltage_soc_ranges) for voltage_soc_ranges
    coulomp.o(.text.coulomp_init) refers to fflti.o(.text) for __aeabi_i2f
    coulomp.o(.text.coulomp_init) refers to fdiv.o(.text) for __aeabi_fdiv
    coulomp.o(.text.coulomp_init) refers to fadd.o(.text) for __aeabi_fsub
    coulomp.o(.text.coulomp_init) refers to fmul.o(.text) for __aeabi_fmul
    coulomp.o(.text.coulomp_init) refers to ffixi.o(.text) for __aeabi_f2iz
    coulomp.o(.text.coulomp_init) refers to dfltui.o(.text) for __aeabi_ui2d
    coulomp.o(.text.coulomp_init) refers to ddiv.o(.text) for __aeabi_ddiv
    coulomp.o(.text.coulomp_init) refers to dflti.o(.text) for __aeabi_i2d
    coulomp.o(.text.coulomp_init) refers to dmul.o(.text) for __aeabi_dmul
    coulomp.o(.text.coulomp_init) refers to dfixi.o(.text) for __aeabi_d2iz
    coulomp.o(.text.coulomp_init) refers to coulomp.o(.rodata.str1.1) for table
    coulomp.o(.text.coulomp_init) refers to printf8.o(i.__0printf$8) for __2printf
    coulomp.o(.ARM.exidx.text.coulomp_init) refers to coulomp.o(.text.coulomp_init) for [Anonymous Symbol]
    coulomp.o(.text.estimate_soc_from_voltage) refers to coulomp.o(.data.voltage_soc_ranges) for voltage_soc_ranges
    coulomp.o(.text.estimate_soc_from_voltage) refers to fflti.o(.text) for __aeabi_i2f
    coulomp.o(.text.estimate_soc_from_voltage) refers to fdiv.o(.text) for __aeabi_fdiv
    coulomp.o(.text.estimate_soc_from_voltage) refers to fadd.o(.text) for __aeabi_fsub
    coulomp.o(.text.estimate_soc_from_voltage) refers to fmul.o(.text) for __aeabi_fmul
    coulomp.o(.ARM.exidx.text.estimate_soc_from_voltage) refers to coulomp.o(.text.estimate_soc_from_voltage) for [Anonymous Symbol]
    coulomp.o(.text.task_coulomp) refers to app.o(.data.sys) for sys
    coulomp.o(.text.task_coulomp) refers to coulomp.o(.bss.coulomp) for coulomp
    coulomp.o(.text.task_coulomp) refers to coulomp.o(.text.coulomp_calc) for coulomp_calc
    coulomp.o(.text.task_coulomp) refers to coulomp.o(.rodata.str1.1) for table
    coulomp.o(.ARM.exidx.text.task_coulomp) refers to coulomp.o(.text.task_coulomp) for [Anonymous Symbol]
    coulomp.o(.text.coulomp_calc) refers to coulomp.o(.data.voltage_soc_ranges) for voltage_soc_ranges
    coulomp.o(.text.coulomp_calc) refers to fflti.o(.text) for __aeabi_i2f
    coulomp.o(.text.coulomp_calc) refers to fdiv.o(.text) for __aeabi_fdiv
    coulomp.o(.text.coulomp_calc) refers to fadd.o(.text) for __aeabi_fsub
    coulomp.o(.text.coulomp_calc) refers to fmul.o(.text) for __aeabi_fmul
    coulomp.o(.text.coulomp_calc) refers to ffixi.o(.text) for __aeabi_f2iz
    coulomp.o(.text.coulomp_calc) refers to app.o(.data.sys) for sys
    coulomp.o(.text.coulomp_calc) refers to dflti.o(.text) for __aeabi_i2d
    coulomp.o(.text.coulomp_calc) refers to dmul.o(.text) for __aeabi_dmul
    coulomp.o(.text.coulomp_calc) refers to ddiv.o(.text) for __aeabi_ddiv
    coulomp.o(.text.coulomp_calc) refers to dfixi.o(.text) for __aeabi_d2iz
    coulomp.o(.ARM.exidx.text.coulomp_calc) refers to coulomp.o(.text.coulomp_calc) for [Anonymous Symbol]
    bathealth.o(.text.health_init) refers to app.o(.data.sys) for sys
    bathealth.o(.ARM.exidx.text.health_init) refers to bathealth.o(.text.health_init) for [Anonymous Symbol]
    bathealth.o(.text.task_health) refers to coulomp.o(.bss.coulomp) for coulomp
    bathealth.o(.text.task_health) refers to bathealth.o(.bss.health) for health
    bathealth.o(.text.task_health) refers to uldiv.o(.text) for __aeabi_uldivmod
    bathealth.o(.text.task_health) refers to app.o(.data.sys) for sys
    bathealth.o(.ARM.exidx.text.task_health) refers to bathealth.o(.text.task_health) for [Anonymous Symbol]
    bathealth.o(.text.health_calc) refers to bathealth.o(.bss.health) for health
    bathealth.o(.text.health_calc) refers to uldiv.o(.text) for __aeabi_uldivmod
    bathealth.o(.ARM.exidx.text.health_calc) refers to bathealth.o(.text.health_calc) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_init) refers to cs32f10x_adc.o(.text.adc_init) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_struct_init) refers to cs32f10x_adc.o(.text.adc_struct_init) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_disc_mode_channel_config) refers to cs32f10x_adc.o(.text.adc_disc_mode_channel_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_regular_channel_config) refers to cs32f10x_adc.o(.text.adc_regular_channel_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_inject_ext_trigger_config) refers to cs32f10x_adc.o(.text.adc_inject_ext_trigger_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_inject_channel_config) refers to cs32f10x_adc.o(.text.adc_inject_channel_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_inject_sequence_length_config) refers to cs32f10x_adc.o(.text.adc_inject_sequence_length_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_inject_offset_set) refers to cs32f10x_adc.o(.text.adc_inject_offset_set) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_inject_conv_value_get) refers to cs32f10x_adc.o(.text.adc_inject_conv_value_get) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_analog_wdt_threshold_set) refers to cs32f10x_adc.o(.text.adc_analog_wdt_threshold_set) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_analog_channel_config) refers to cs32f10x_adc.o(.text.adc_analog_channel_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_analog_wdt_config) refers to cs32f10x_adc.o(.text.adc_analog_wdt_config) for [Anonymous Symbol]
    cs32f10x_bkp.o(.ARM.exidx.text.bkp_tamper_active_level_config) refers to cs32f10x_bkp.o(.text.bkp_tamper_active_level_config) for [Anonymous Symbol]
    cs32f10x_bkp.o(.ARM.exidx.text.bkp_rtc_output_config) refers to cs32f10x_bkp.o(.text.bkp_rtc_output_config) for [Anonymous Symbol]
    cs32f10x_bkp.o(.ARM.exidx.text.bkp_rtc_cali_data_set) refers to cs32f10x_bkp.o(.text.bkp_rtc_cali_data_set) for [Anonymous Symbol]
    cs32f10x_bkp.o(.ARM.exidx.text.bkp_backup_register_write) refers to cs32f10x_bkp.o(.text.bkp_backup_register_write) for [Anonymous Symbol]
    cs32f10x_bkp.o(.ARM.exidx.text.bkp_backup_register_read) refers to cs32f10x_bkp.o(.text.bkp_backup_register_read) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_init) refers to cs32f10x_can.o(.text.can_init) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_config_struct_init) refers to cs32f10x_can.o(.text.can_config_struct_init) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_work_mode_config) refers to cs32f10x_can.o(.text.can_work_mode_config) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_filter_init) refers to cs32f10x_can.o(.text.can_filter_init) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_time_trigger_enable_ctrl) refers to cs32f10x_can.o(.text.can_time_trigger_enable_ctrl) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_message_send) refers to cs32f10x_can.o(.text.can_message_send) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_tx_status_get) refers to cs32f10x_can.o(.text.can_tx_status_get) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_tx_abort_set) refers to cs32f10x_can.o(.text.can_tx_abort_set) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_message_receive) refers to cs32f10x_can.o(.text.can_message_receive) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_rx_fifo_release) refers to cs32f10x_can.o(.text.can_rx_fifo_release) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_fifo_msg_num_get) refers to cs32f10x_can.o(.text.can_fifo_msg_num_get) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_sleep_set) refers to cs32f10x_can.o(.text.can_sleep_set) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_wakeup_set) refers to cs32f10x_can.o(.text.can_wakeup_set) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_op_mode_switch_ctrl) refers to cs32f10x_can.o(.text.can_op_mode_switch_ctrl) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_flag_status_get) refers to cs32f10x_can.o(.text.can_flag_status_get) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_flag_clear) refers to cs32f10x_can.o(.text.can_flag_clear) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_int_status_get) refers to cs32f10x_can.o(.text.can_int_status_get) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_int_flag_clear) refers to cs32f10x_can.o(.text.can_int_flag_clear) for [Anonymous Symbol]
    cs32f10x_crc.o(.ARM.exidx.text.crc_def_init) refers to cs32f10x_crc.o(.text.crc_def_init) for [Anonymous Symbol]
    cs32f10x_crc.o(.ARM.exidx.text.crc_crc32_calc) refers to cs32f10x_crc.o(.text.crc_crc32_calc) for [Anonymous Symbol]
    cs32f10x_crc.o(.ARM.exidx.text.crc_data_buffer_calc) refers to cs32f10x_crc.o(.text.crc_data_buffer_calc) for [Anonymous Symbol]
    cs32f10x_debug.o(.ARM.exidx.text.debug_revision_id_get) refers to cs32f10x_debug.o(.text.debug_revision_id_get) for [Anonymous Symbol]
    cs32f10x_debug.o(.ARM.exidx.text.debug_dev_id_get) refers to cs32f10x_debug.o(.text.debug_dev_id_get) for [Anonymous Symbol]
    cs32f10x_debug.o(.ARM.exidx.text.debug_low_power_config) refers to cs32f10x_debug.o(.text.debug_low_power_config) for [Anonymous Symbol]
    cs32f10x_dma.o(.ARM.exidx.text.dma_def_init) refers to cs32f10x_dma.o(.text.dma_def_init) for [Anonymous Symbol]
    cs32f10x_dma.o(.ARM.exidx.text.dma_init) refers to cs32f10x_dma.o(.text.dma_init) for [Anonymous Symbol]
    cs32f10x_dma.o(.ARM.exidx.text.dma_transfer_config) refers to cs32f10x_dma.o(.text.dma_transfer_config) for [Anonymous Symbol]
    cs32f10x_dma.o(.text.dma_struct_config) refers to memseta.o(.text) for __aeabi_memclr4
    cs32f10x_dma.o(.ARM.exidx.text.dma_struct_config) refers to cs32f10x_dma.o(.text.dma_struct_config) for [Anonymous Symbol]
    cs32f10x_exti.o(.ARM.exidx.text.exti_def_init) refers to cs32f10x_exti.o(.text.exti_def_init) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_wait_counter_set) refers to cs32f10x_flash.o(.text.flash_wait_counter_set) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_unlock) refers to cs32f10x_flash.o(.text.flash_unlock) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_lock) refers to cs32f10x_flash.o(.text.flash_lock) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_page_erase) refers to cs32f10x_flash.o(.text.flash_page_erase) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_operation_wait) refers to cs32f10x_flash.o(.text.flash_operation_wait) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_all_pages_erase) refers to cs32f10x_flash.o(.text.flash_all_pages_erase) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_word_program) refers to cs32f10x_flash.o(.text.flash_word_program) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_half_word_program) refers to cs32f10x_flash.o(.text.flash_half_word_program) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_unlock) refers to cs32f10x_flash.o(.text.flash_option_bytes_unlock) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_lock) refers to cs32f10x_flash.o(.text.flash_option_bytes_lock) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_erase) refers to cs32f10x_flash.o(.text.flash_option_bytes_erase) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_option_bytes_user_set) refers to cs32f10x_flash.o(.text.flash_option_bytes_set) for flash_option_bytes_set
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_user_set) refers to cs32f10x_flash.o(.text.flash_option_bytes_user_set) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_set) refers to cs32f10x_flash.o(.text.flash_option_bytes_set) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_option_bytes_write_protect_enable) refers to cs32f10x_flash.o(.text.flash_option_bytes_set) for flash_option_bytes_set
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_write_protect_enable) refers to cs32f10x_flash.o(.text.flash_option_bytes_write_protect_enable) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_option_bytes_read_protect_config) refers to cs32f10x_flash.o(.text.flash_option_bytes_set) for flash_option_bytes_set
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_read_protect_config) refers to cs32f10x_flash.o(.text.flash_option_bytes_read_protect_config) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_write_access_enable_ctrl) refers to cs32f10x_fwdt.o(.text.fwdt_write_access_enable_ctrl) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_prescaler_set) refers to cs32f10x_fwdt.o(.text.fwdt_prescaler_set) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_reload_set) refers to cs32f10x_fwdt.o(.text.fwdt_reload_set) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_reload_counter) refers to cs32f10x_fwdt.o(.text.fwdt_reload_counter) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_enable) refers to cs32f10x_fwdt.o(.text.fwdt_enable) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_flag_status_get) refers to cs32f10x_fwdt.o(.text.fwdt_flag_status_get) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_mode_config) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_def_init) refers to cs32f10x_gpio.o(.text.gpio_def_init) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_af_deinit) refers to cs32f10x_gpio.o(.text.gpio_af_deinit) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_pin_lock_set) refers to cs32f10x_gpio.o(.text.gpio_pin_lock_set) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_event_config) refers to cs32f10x_gpio.o(.text.gpio_event_config) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_pin_remap_config) refers to cs32f10x_gpio.o(.text.gpio_pin_remap_config) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_exti_pin_config) refers to cs32f10x_gpio.o(.text.gpio_exti_pin_config) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_deinit) refers to cs32f10x_i2c.o(.text.i2c_deinit) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_struct_init) refers to cs32f10x_i2c.o(.text.i2c_struct_init) for [Anonymous Symbol]
    cs32f10x_i2c.o(.text.i2c_init) refers to cs32f10x_rcu.o(.text.rcu_clk_freq_get) for rcu_clk_freq_get
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_init) refers to cs32f10x_i2c.o(.text.i2c_init) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_slave_address2_config) refers to cs32f10x_i2c.o(.text.i2c_slave_address2_config) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_config) refers to cs32f10x_i2c.o(.text.i2c_interrupt_config) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_master_send7bits_address) refers to cs32f10x_i2c.o(.text.i2c_master_send7bits_address) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_read_register) refers to cs32f10x_i2c.o(.text.i2c_read_register) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_get_pec) refers to cs32f10x_i2c.o(.text.i2c_get_pec) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_event_check) refers to cs32f10x_i2c.o(.text.i2c_event_check) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_last_event_get) refers to cs32f10x_i2c.o(.text.i2c_last_event_get) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_flag_status_check) refers to cs32f10x_i2c.o(.text.i2c_flag_status_check) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_flag_clear) refers to cs32f10x_i2c.o(.text.i2c_flag_clear) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_status_get) refers to cs32f10x_i2c.o(.text.i2c_interrupt_status_get) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_clear) refers to cs32f10x_i2c.o(.text.i2c_interrupt_clear) for [Anonymous Symbol]
    cs32f10x_misc.o(.ARM.exidx.text.nvic_priority_group_config) refers to cs32f10x_misc.o(.text.nvic_priority_group_config) for [Anonymous Symbol]
    cs32f10x_misc.o(.ARM.exidx.text.nvic_init) refers to cs32f10x_misc.o(.text.nvic_init) for [Anonymous Symbol]
    cs32f10x_misc.o(.ARM.exidx.text.nvic_vector_table_set) refers to cs32f10x_misc.o(.text.nvic_vector_table_set) for [Anonymous Symbol]
    cs32f10x_misc.o(.ARM.exidx.text.nvic_sys_lowpwr_config) refers to cs32f10x_misc.o(.text.nvic_sys_lowpwr_config) for [Anonymous Symbol]
    cs32f10x_misc.o(.ARM.exidx.text.systick_clk_src_config) refers to cs32f10x_misc.o(.text.systick_clk_src_config) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_deinit) refers to cs32f10x_pmu.o(.text.pmu_deinit) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_vbat_domain_write_config) refers to cs32f10x_pmu.o(.text.pmu_vbat_domain_write_config) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_lvd_voltage_select) refers to cs32f10x_pmu.o(.text.pmu_lvd_voltage_select) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_lvd_enable_config) refers to cs32f10x_pmu.o(.text.pmu_lvd_enable_config) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_wkup_pin_config) refers to cs32f10x_pmu.o(.text.pmu_wkup_pin_config) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_stop_mode_enter) refers to cs32f10x_pmu.o(.text.pmu_stop_mode_enter) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_standby_enter) refers to cs32f10x_pmu.o(.text.pmu_standby_enter) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_flag_get) refers to cs32f10x_pmu.o(.text.pmu_flag_get) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_flag_clear) refers to cs32f10x_pmu.o(.text.pmu_flag_clear) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_def_init) refers to cs32f10x_rcu.o(.text.rcu_def_init) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_hxt_stabilization_wait) refers to cs32f10x_rcu.o(.text.rcu_hxt_stabilization_wait) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_hxt_status_set) refers to cs32f10x_rcu.o(.text.rcu_hxt_status_set) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_hrc_calibration_adjust) refers to cs32f10x_rcu.o(.text.rcu_hrc_calibration_adjust) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_pll_config) refers to cs32f10x_rcu.o(.text.rcu_pll_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_clkout_config) refers to cs32f10x_rcu.o(.text.rcu_clkout_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_sysclk_config) refers to cs32f10x_rcu.o(.text.rcu_sysclk_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_sysclk_src_get) refers to cs32f10x_rcu.o(.text.rcu_sysclk_src_get) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_pclk1_config) refers to cs32f10x_rcu.o(.text.rcu_pclk1_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_pclk2_config) refers to cs32f10x_rcu.o(.text.rcu_pclk2_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_hclk_config) refers to cs32f10x_rcu.o(.text.rcu_hclk_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_adcclk_config) refers to cs32f10x_rcu.o(.text.rcu_adcclk_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_usbclk_config) refers to cs32f10x_rcu.o(.text.rcu_usbclk_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_rtcclk_config) refers to cs32f10x_rcu.o(.text.rcu_rtcclk_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_clkready_reset_flag_get) refers to cs32f10x_rcu.o(.text.rcu_clkready_reset_flag_get) for [Anonymous Symbol]
    cs32f10x_rcu.o(.text.rcu_clk_freq_get) refers to cs32f10x_rcu.o(.rodata.APBAHB_pdiv_table) for APBAHB_pdiv_table
    cs32f10x_rcu.o(.text.rcu_clk_freq_get) refers to cs32f10x_rcu.o(.rodata.ADC_pdiv_table) for ADC_pdiv_table
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_clk_freq_get) refers to cs32f10x_rcu.o(.text.rcu_clk_freq_get) for [Anonymous Symbol]
    cs32f10x_rtc.o(.ARM.exidx.text.rtc_counter_set) refers to cs32f10x_rtc.o(.text.rtc_counter_set) for [Anonymous Symbol]
    cs32f10x_rtc.o(.ARM.exidx.text.rtc_prescaler_set) refers to cs32f10x_rtc.o(.text.rtc_prescaler_set) for [Anonymous Symbol]
    cs32f10x_rtc.o(.ARM.exidx.text.rtc_alarm_set) refers to cs32f10x_rtc.o(.text.rtc_alarm_set) for [Anonymous Symbol]
    cs32f10x_rtc.o(.ARM.exidx.text.rtc_wait_for_synchronize) refers to cs32f10x_rtc.o(.text.rtc_wait_for_synchronize) for [Anonymous Symbol]
    cs32f10x_spi.o(.ARM.exidx.text.spi_config_struct_init) refers to cs32f10x_spi.o(.text.spi_config_struct_init) for [Anonymous Symbol]
    cs32f10x_spi.o(.ARM.exidx.text.spi_init) refers to cs32f10x_spi.o(.text.spi_init) for [Anonymous Symbol]
    cs32f10x_spi.o(.ARM.exidx.text.spi_transmit_direct_set) refers to cs32f10x_spi.o(.text.spi_transmit_direct_set) for [Anonymous Symbol]
    cs32f10x_spi.o(.ARM.exidx.text.spi_software_nss_config) refers to cs32f10x_spi.o(.text.spi_software_nss_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_def_init) refers to cs32f10x_tim.o(.text.tim_def_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_base_init) refers to cs32f10x_tim.o(.text.tim_base_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_base_struct_init) refers to cs32f10x_tim.o(.text.tim_base_struct_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_prescaler_set) refers to cs32f10x_tim.o(.text.tim_prescaler_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_count_pattern_set) refers to cs32f10x_tim.o(.text.tim_count_pattern_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_update_request_set) refers to cs32f10x_tim.o(.text.tim_update_request_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_clock_division_set) refers to cs32f10x_tim.o(.text.tim_clock_division_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_protect_config) refers to cs32f10x_tim.o(.text.tim_protect_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_protect_struct_init) refers to cs32f10x_tim.o(.text.tim_protect_struct_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_init) refers to cs32f10x_tim.o(.text.tim_choc_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_struct_init) refers to cs32f10x_tim.o(.text.tim_choc_struct_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_mode_set) refers to cs32f10x_tim.o(.text.tim_choc_mode_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_preload_set) refers to cs32f10x_tim.o(.text.tim_choc_preload_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_fast_set) refers to cs32f10x_tim.o(.text.tim_choc_fast_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_clear_set) refers to cs32f10x_tim.o(.text.tim_choc_clear_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chcc_polarity_set) refers to cs32f10x_tim.o(.text.tim_chcc_polarity_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chncc_polarity_set) refers to cs32f10x_tim.o(.text.tim_chncc_polarity_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chcc_enable_ctrl) refers to cs32f10x_tim.o(.text.tim_chcc_enable_ctrl) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chncc_enable_ctrl) refers to cs32f10x_tim.o(.text.tim_chncc_enable_ctrl) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chic_predivider_set) refers to cs32f10x_tim.o(.text.tim_chic_predivider_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chic_init) refers to cs32f10x_tim.o(.text.tim_chic_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chic_struct_init) refers to cs32f10x_tim.o(.text.tim_chic_struct_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_pwmi_config) refers to cs32f10x_tim.o(.text.tim_pwmi_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_dma_access_config) refers to cs32f10x_tim.o(.text.tim_dma_access_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_internal_clock_config) refers to cs32f10x_tim.o(.text.tim_internal_clock_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_input_trigger_set) refers to cs32f10x_tim.o(.text.tim_input_trigger_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_internal_trigger_external_clock_config) refers to cs32f10x_tim.o(.text.tim_internal_trigger_external_clock_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_ti_external_clock_config) refers to cs32f10x_tim.o(.text.tim_ti_external_clock_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_external_trigger_config) refers to cs32f10x_tim.o(.text.tim_external_trigger_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_external_clock_mode1_config) refers to cs32f10x_tim.o(.text.tim_external_clock_mode1_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_external_clock_mode2_config) refers to cs32f10x_tim.o(.text.tim_external_clock_mode2_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_trigger_output_set) refers to cs32f10x_tim.o(.text.tim_trigger_output_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_slave_mode_config) refers to cs32f10x_tim.o(.text.tim_slave_mode_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_master_slave_set) refers to cs32f10x_tim.o(.text.tim_master_slave_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_encoder_interface_set) refers to cs32f10x_tim.o(.text.tim_encoder_interface_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_pulse_mode_set) refers to cs32f10x_tim.o(.text.tim_pulse_mode_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_forced_set) refers to cs32f10x_tim.o(.text.tim_choc_forced_set) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_def_init) refers to cs32f10x_usart.o(.text.usart_def_init) for [Anonymous Symbol]
    cs32f10x_usart.o(.text.usart_init) refers to cs32f10x_rcu.o(.text.rcu_clk_freq_get) for rcu_clk_freq_get
    cs32f10x_usart.o(.ARM.exidx.text.usart_init) refers to cs32f10x_usart.o(.text.usart_init) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_config_struct_init) refers to cs32f10x_usart.o(.text.usart_config_struct_init) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_synchronous_clock_init) refers to cs32f10x_usart.o(.text.usart_synchronous_clock_init) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_synchronous_clock_struct_init) refers to cs32f10x_usart.o(.text.usart_synchronous_clock_struct_init) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_address_set) refers to cs32f10x_usart.o(.text.usart_address_set) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_recv_wakeup_config) refers to cs32f10x_usart.o(.text.usart_recv_wakeup_config) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_lin_break_detection_length_confiig) refers to cs32f10x_usart.o(.text.usart_lin_break_detection_length_confiig) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_break_frame_send) refers to cs32f10x_usart.o(.text.usart_break_frame_send) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_sc_guard_time_set) refers to cs32f10x_usart.o(.text.usart_sc_guard_time_set) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_prescaler_set) refers to cs32f10x_usart.o(.text.usart_prescaler_set) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_sc_nack_enable) refers to cs32f10x_usart.o(.text.usart_sc_nack_enable) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_half_duplex_enable) refers to cs32f10x_usart.o(.text.usart_half_duplex_enable) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_irda_low_power_enable) refers to cs32f10x_usart.o(.text.usart_irda_low_power_enable) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_def_init) refers to cs32f10x_wwdt.o(.text.wwdt_def_init) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_prescaler_set) refers to cs32f10x_wwdt.o(.text.wwdt_prescaler_set) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_window_value_set) refers to cs32f10x_wwdt.o(.text.wwdt_window_value_set) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_interrupt_enable) refers to cs32f10x_wwdt.o(.text.wwdt_interrupt_enable) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_counter_set) refers to cs32f10x_wwdt.o(.text.wwdt_counter_set) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_enable) refers to cs32f10x_wwdt.o(.text.wwdt_enable) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_status_flag_get) refers to cs32f10x_wwdt.o(.text.wwdt_status_flag_get) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_flag_clear) refers to cs32f10x_wwdt.o(.text.wwdt_flag_clear) for [Anonymous Symbol]
    startup_cs32f103xb.o(RESET) refers to startup_cs32f103xb.o(STACK) for __initial_sp
    startup_cs32f103xb.o(RESET) refers to startup_cs32f103xb.o(.text) for Reset_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.NMI_Handler) for NMI_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.SVC_Handler) for SVC_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.EXTI1_IRQHandler) for EXTI1_IRQHandler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.EXTI4_IRQHandler) for EXTI4_IRQHandler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.TIM1_UP_IRQHandler) for TIM1_UP_IRQHandler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.USART3_IRQHandler) for USART3_IRQHandler
    startup_cs32f103xb.o(.text) refers to system_cs32f10x.o(.text.SystemInit) for SystemInit
    startup_cs32f103xb.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_cs32f10x.o(.ARM.exidx.text.SystemInit) refers to system_cs32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_cs32f10x.o(.text.SystemCoreClockUpdate) refers to system_cs32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_cs32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_cs32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    puts.o(i.puts) refers to init.o(.text.fputc) for fputc
    puts.o(i.puts) refers to stdout.o(.data) for __stdout
    putchar.o(i.putchar) refers to init.o(.text.fputc) for fputc
    putchar.o(i.putchar) refers to stdout.o(.data) for __stdout
    puts_e.o(.text) refers to init.o(.text.fputc) for fputc
    puts_e.o(.text) refers to stdout.o(.data) for __stdout
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to init.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to init.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to init.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to init.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to init.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to init.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to init.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to init.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to init.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to init.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to init.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to init.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to init.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to init.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to init.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to init.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to init.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to init.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to init.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to init.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to init.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to init.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to init.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to init.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to init.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to init.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to init.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to init.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to init.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to init.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to init.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to init.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to init.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to init.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to init.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to init.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to init.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to init.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to init.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to init.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to init.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to init.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to init.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to init.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    fflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ffixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_cs32f103xb.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_cs32f103xb.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.text.led1_toggle), (18 bytes).
    Removing main.o(.ARM.exidx.text.led1_toggle), (8 bytes).
    Removing main.o(.text.led2_toggle), (18 bytes).
    Removing main.o(.ARM.exidx.text.led2_toggle), (8 bytes).
    Removing main.o(.text.delay), (22 bytes).
    Removing main.o(.ARM.exidx.text.delay), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing cs32f10x_it.o(.text), (0 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.USART3_IRQHandler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.TIM1_UP_IRQHandler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.EXTI4_IRQHandler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.EXTI1_IRQHandler), (8 bytes).
    Removing init.o(.text), (0 bytes).
    Removing init.o(.ARM.exidx.text.log_init), (8 bytes).
    Removing init.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing init.o(.text.fgetc), (20 bytes).
    Removing init.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing init.o(.ARM.exidx.text.uart_init), (8 bytes).
    Removing init.o(.ARM.exidx.text.other_io_init), (8 bytes).
    Removing init.o(.ARM.exidx.text.io_sleep_conf), (8 bytes).
    Removing init.o(.ARM.exidx.text.tick_init), (8 bytes).
    Removing init.o(.ARM.exidx.text.nvic_configuration), (8 bytes).
    Removing init.o(.ARM.exidx.text.tim_init), (8 bytes).
    Removing init.o(.ARM.exidx.text.exti_init), (8 bytes).
    Removing init.o(.text.fwdt_init), (32 bytes).
    Removing init.o(.ARM.exidx.text.fwdt_init), (8 bytes).
    Removing init.o(.text.rtc_config), (136 bytes).
    Removing init.o(.ARM.exidx.text.rtc_config), (8 bytes).
    Removing init.o(.ARM.exidx.text.deinit_befor_sleep), (8 bytes).
    Removing init.o(.ARM.exidx.text.init_after_sleep), (8 bytes).
    Removing adc.o(.text), (0 bytes).
    Removing adc.o(.ARM.exidx.text.adc_init_), (8 bytes).
    Removing adc.o(.ARM.exidx.text.task_adc), (8 bytes).
    Removing app.o(.text), (0 bytes).
    Removing app.o(.ARM.exidx.text.f_uaba_open), (8 bytes).
    Removing app.o(.ARM.exidx.text.f_uaba_close), (8 bytes).
    Removing app.o(.ARM.exidx.text.f_uaba_fault_ov), (8 bytes).
    Removing app.o(.text.app_init), (18 bytes).
    Removing app.o(.ARM.exidx.text.app_init), (8 bytes).
    Removing app.o(.ARM.exidx.text.task_app), (8 bytes).
    Removing app.o(.text.sys_switch_check), (124 bytes).
    Removing app.o(.ARM.exidx.text.sys_switch_check), (8 bytes).
    Removing app.o(.text.sys_pow_on_off_deal), (98 bytes).
    Removing app.o(.ARM.exidx.text.sys_pow_on_off_deal), (8 bytes).
    Removing app.o(.text.key_fast_switch), (102 bytes).
    Removing app.o(.ARM.exidx.text.key_fast_switch), (8 bytes).
    Removing app.o(.ARM.exidx.text.app_led_control), (8 bytes).
    Removing app.o(.ARM.exidx.text.app_usba_control_protect), (8 bytes).
    Removing app.o(.text.app_power_rank_contorl), (138 bytes).
    Removing app.o(.ARM.exidx.text.app_power_rank_contorl), (8 bytes).
    Removing app.o(.ARM.exidx.text.app_power_sw_contorl), (8 bytes).
    Removing app.o(.ARM.exidx.text.app_temperature_protect), (8 bytes).
    Removing app.o(.text.app_eta_control), (26 bytes).
    Removing app.o(.ARM.exidx.text.app_eta_control), (8 bytes).
    Removing app.o(.ARM.exidx.text.sleep_control), (8 bytes).
    Removing app.o(.text.f_uaba_fault_oc), (76 bytes).
    Removing app.o(.ARM.exidx.text.f_uaba_fault_oc), (8 bytes).
    Removing app.o(.ARM.exidx.text.eta_driver), (8 bytes).
    Removing app.o(.text.app_bms_comm_recover), (110 bytes).
    Removing app.o(.ARM.exidx.text.app_bms_comm_recover), (8 bytes).
    Removing app.o(.ARM.exidx.text.tick_delay), (8 bytes).
    Removing app.o(.text.app_bms_charge_to_active), (84 bytes).
    Removing app.o(.ARM.exidx.text.app_bms_charge_to_active), (8 bytes).
    Removing app.o(.bss.app_bms_comm_recover.cnt), (2 bytes).
    Removing app.o(.bss.app_bms_charge_to_active.cnt), (2 bytes).
    Removing app.o(.bss.xbms), (4 bytes).
    Removing bms.o(.text), (0 bytes).
    Removing bms.o(.text.IIC_WriteData), (14 bytes).
    Removing bms.o(.ARM.exidx.text.IIC_WriteData), (8 bytes).
    Removing bms.o(.text.IIC_ReadData), (14 bytes).
    Removing bms.o(.ARM.exidx.text.IIC_ReadData), (8 bytes).
    Removing bms.o(.text.CopyArray), (26 bytes).
    Removing bms.o(.ARM.exidx.text.CopyArray), (8 bytes).
    Removing bms.o(.text.Checksum), (30 bytes).
    Removing bms.o(.ARM.exidx.text.Checksum), (8 bytes).
    Removing bms.o(.text.CRC8), (72 bytes).
    Removing bms.o(.ARM.exidx.text.CRC8), (8 bytes).
    Removing bms.o(.text.I2C_WriteReg), (200 bytes).
    Removing bms.o(.ARM.exidx.text.I2C_WriteReg), (8 bytes).
    Removing bms.o(.text.I2C_ReadReg), (246 bytes).
    Removing bms.o(.ARM.exidx.text.I2C_ReadReg), (8 bytes).
    Removing bms.o(.text.delay_us_2ms), (22 bytes).
    Removing bms.o(.ARM.exidx.text.delay_us_2ms), (8 bytes).
    Removing bms.o(.text.BQ769x2_SetRegister), (374 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_SetRegister), (8 bytes).
    Removing bms.o(.text.BMS_FET_ENABLE), (94 bytes).
    Removing bms.o(.ARM.exidx.text.BMS_FET_ENABLE), (8 bytes).
    Removing bms.o(.text.Subcommands), (270 bytes).
    Removing bms.o(.ARM.exidx.text.Subcommands), (8 bytes).
    Removing bms.o(.text.CommandSubcommands), (48 bytes).
    Removing bms.o(.ARM.exidx.text.CommandSubcommands), (8 bytes).
    Removing bms.o(.text.bms_init), (376 bytes).
    Removing bms.o(.ARM.exidx.text.bms_init), (8 bytes).
    Removing bms.o(.text.BQ769x2_DSG_OFF), (16 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_DSG_OFF), (8 bytes).
    Removing bms.o(.text.BQ769x2_RESET_CHG_OFF), (14 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_RESET_CHG_OFF), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReleaseShutdownPin), (14 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReleaseShutdownPin), (8 bytes).
    Removing bms.o(.text.BQ769x2_Init), (154 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_Init), (8 bytes).
    Removing bms.o(.text.read_data_cmd_long), (60 bytes).
    Removing bms.o(.ARM.exidx.text.read_data_cmd_long), (8 bytes).
    Removing bms.o(.text.DirectCommands), (90 bytes).
    Removing bms.o(.ARM.exidx.text.DirectCommands), (8 bytes).
    Removing bms.o(.text.BSWBq769x2ReadBatteryStatus), (54 bytes).
    Removing bms.o(.ARM.exidx.text.BSWBq769x2ReadBatteryStatus), (8 bytes).
    Removing bms.o(.text.load_bms_init_array), (36 bytes).
    Removing bms.o(.ARM.exidx.text.load_bms_init_array), (8 bytes).
    Removing bms.o(.text.turn_to_CFGUPDATE), (224 bytes).
    Removing bms.o(.ARM.exidx.text.turn_to_CFGUPDATE), (8 bytes).
    Removing bms.o(.text.set_low_cell_predsg), (76 bytes).
    Removing bms.o(.ARM.exidx.text.set_low_cell_predsg), (8 bytes).
    Removing bms.o(.text.BQ769x2_RESET_DSG_OFF), (16 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_RESET_DSG_OFF), (8 bytes).
    Removing bms.o(.text.BQ769x2_CHG_OFF), (14 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_CHG_OFF), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadFETStatus), (110 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadFETStatus), (8 bytes).
    Removing bms.o(.text.BQ769x2_ShutdownPin), (14 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ShutdownPin), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadAlarmStatus), (44 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadAlarmStatus), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadAlarmRaw), (44 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadAlarmRaw), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadSafetyStatusA), (138 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusA), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadSafetyStatusB), (70 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusB), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadSafetyStatusC), (114 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusC), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadPFStatusA), (54 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusA), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadPFStatusB), (54 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusB), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadPFStatusC), (54 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusC), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadVoltage), (44 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadVoltage), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadAllVoltages), (212 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadAllVoltages), (8 bytes).
    Removing bms.o(.text.BQ769x2_Read_Vcells_123), (16 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_123), (8 bytes).
    Removing bms.o(.text.BQ769x2_Read_Vcells_5), (18 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_5), (8 bytes).
    Removing bms.o(.text.BQ769x2_Read_Vcells_7), (20 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_7), (8 bytes).
    Removing bms.o(.text.BQ769x2_Read_Vcells_9), (20 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_9), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadCurrent), (46 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadCurrent), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadTemperature), (44 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadTemperature), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadPassQ), (96 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadPassQ), (8 bytes).
    Removing bms.o(.text.bq76942_reset), (116 bytes).
    Removing bms.o(.ARM.exidx.text.bq76942_reset), (8 bytes).
    Removing bms.o(.bss.RX_data), (2 bytes).
    Removing bms.o(.bss.RX_32Byte), (32 bytes).
    Removing bms.o(.bss.CellVoltage), (32 bytes).
    Removing bms.o(.bss.Pack_Voltage), (2 bytes).
    Removing bms.o(.bss.LD_Voltage), (2 bytes).
    Removing bms.o(.bss.Pack_Current), (2 bytes).
    Removing bms.o(.bss.AlarmBits), (2 bytes).
    Removing bms.o(.bss.AlarmBits2), (2 bytes).
    Removing bms.o(.bss.UV_Fault), (1 bytes).
    Removing bms.o(.bss.OV_Fault), (1 bytes).
    Removing bms.o(.bss.SCD_Fault), (1 bytes).
    Removing bms.o(.bss.OCD_Fault), (1 bytes).
    Removing bms.o(.bss.OCC_Fault), (1 bytes).
    Removing bms.o(.bss.ProtectionsTriggered), (1 bytes).
    Removing bms.o(.bss.LD_ON), (1 bytes).
    Removing bms.o(.bss.error_long_flag), (2 bytes).
    Removing bms.o(.bss.bms_pro_flag), (16 bytes).
    Removing bms.o(.bss.write_nack), (2 bytes).
    Removing bms.o(.bss.RX_CRC_Fail), (2 bytes).
    Removing bms.o(.bss.u16_nack_flag), (2 bytes).
    Removing bms.o(.data.t_power_on_cnt_s), (1 bytes).
    Removing bms.o(.bss.write_res), (2 bytes).
    Removing bms.o(.data.bms_ccGain), (4 bytes).
    Removing bms.o(.data.bms_capGain), (4 bytes).
    Removing bms.o(.data.bms_init_array), (426 bytes).
    Removing bms.o(.bss.FET_Status), (1 bytes).
    Removing bms.o(.bss.value_SafetyStatusA), (1 bytes).
    Removing bms.o(.bss.value_SafetyStatusB), (1 bytes).
    Removing bms.o(.bss.value_SafetyStatusC), (1 bytes).
    Removing bms.o(.bss.value_PFStatusA), (1 bytes).
    Removing bms.o(.bss.value_PFStatusB), (1 bytes).
    Removing bms.o(.bss.value_PFStatusC), (1 bytes).
    Removing bms.o(.bss.V_cells), (12 bytes).
    Removing bms.o(.bss.AccumulatedCharge_Int), (4 bytes).
    Removing bms.o(.bss.AccumulatedCharge_Frac), (4 bytes).
    Removing bms.o(.bss.AccumulatedCharge_Time), (4 bytes).
    Removing bms.o(.bss.CB_ActiveCells), (2 bytes).
    Removing bms.o(.bss.pin_io_mode_cache), (4 bytes).
    Removing bms.o(.bss.shutdown_bms_flag), (2 bytes).
    Removing bms.o(.bss.shutdown_bms_cnt), (2 bytes).
    Removing communication.o(.text), (0 bytes).
    Removing communication.o(.ARM.exidx.text.task_com_rx), (8 bytes).
    Removing communication.o(.ARM.exidx.text.cmd_g020_write), (8 bytes).
    Removing communication.o(.ARM.exidx.text.cmd_g020_get), (8 bytes).
    Removing communication.o(.ARM.exidx.text.task_com_tx), (8 bytes).
    Removing communication.o(.text.transmit_data), (42 bytes).
    Removing communication.o(.ARM.exidx.text.transmit_data), (8 bytes).
    Removing communication.o(.text.data_printf), (60 bytes).
    Removing communication.o(.ARM.exidx.text.data_printf), (8 bytes).
    Removing communication.o(.bss.rx_cnt), (1 bytes).
    Removing communication.o(.bss.rx_buffer), (4 bytes).
    Removing debug.o(.text), (0 bytes).
    Removing debug.o(.ARM.exidx.text.task_debug), (8 bytes).
    Removing debug.o(.data.pg020), (16 bytes).
    Removing key.o(.text), (0 bytes).
    Removing key.o(.ARM.exidx.text.key_init), (8 bytes).
    Removing key.o(.ARM.exidx.text.task_key), (8 bytes).
    Removing led.o(.text), (0 bytes).
    Removing led.o(.ARM.exidx.text.f_led_show_battery), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_discharge), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_charge), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_health), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_alloff), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_warning), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_err), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_port_normal), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_port_warning), (8 bytes).
    Removing led.o(.text.ledBreath_init), (28 bytes).
    Removing led.o(.ARM.exidx.text.ledBreath_init), (8 bytes).
    Removing led.o(.ARM.exidx.text.led_init), (8 bytes).
    Removing led.o(.ARM.exidx.text.task_led), (8 bytes).
    Removing led.o(.ARM.exidx.text.led_bat_show), (8 bytes).
    Removing led.o(.ARM.exidx.text.led_port_show), (8 bytes).
    Removing led.o(.ARM.exidx.text.led_pwm_control), (8 bytes).
    Removing led.o(.text.swd_to_gpio), (2 bytes).
    Removing led.o(.ARM.exidx.text.swd_to_gpio), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.circ_buffer_init), (6 bytes).
    Removing queue.o(.ARM.exidx.text.circ_buffer_init), (8 bytes).
    Removing queue.o(.ARM.exidx.text.circ_buffer_push), (8 bytes).
    Removing queue.o(.text.circ_buffer_pop), (48 bytes).
    Removing queue.o(.ARM.exidx.text.circ_buffer_pop), (8 bytes).
    Removing queue.o(.text.output_buf), (48 bytes).
    Removing queue.o(.ARM.exidx.text.output_buf), (8 bytes).
    Removing queue.o(.text.ProcessPacket), (116 bytes).
    Removing queue.o(.ARM.exidx.text.ProcessPacket), (8 bytes).
    Removing queue.o(.text.ProcessData), (290 bytes).
    Removing queue.o(.ARM.exidx.text.ProcessData), (8 bytes).
    Removing queue.o(.ARM.exidx.text.ProcessData1), (8 bytes).
    Removing queue.o(.bss.ProcessData.packet), (50 bytes).
    Removing queue.o(.bss.ProcessData.packetIndex), (2 bytes).
    Removing queue.o(.bss.ProcessData.receiving), (1 bytes).
    Removing task.o(.text), (0 bytes).
    Removing task.o(.ARM.exidx.text.Task_Marks_Handler_Callback), (8 bytes).
    Removing task.o(.ARM.exidx.text.Task_Pro_Handler_Callback), (8 bytes).
    Removing iic.o(.text), (0 bytes).
    Removing iic.o(.text.i2c_init_), (120 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_init_), (8 bytes).
    Removing iic.o(.text.i2c_master_write), (192 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_master_write), (8 bytes).
    Removing iic.o(.text.i2c_master_read), (208 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_master_read), (8 bytes).
    Removing iic.o(.text.iic_test), (16 bytes).
    Removing iic.o(.ARM.exidx.text.iic_test), (8 bytes).
    Removing iic.o(.text.i2c_nop), (30 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_nop), (8 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_init_2), (8 bytes).
    Removing iic.o(.text.I2C_Start), (114 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_Start), (8 bytes).
    Removing iic.o(.text.I2C_Stop), (132 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_Stop), (8 bytes).
    Removing iic.o(.text.I2C_SendAck), (98 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_SendAck), (8 bytes).
    Removing iic.o(.text.I2C_WaitAck), (184 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_WaitAck), (8 bytes).
    Removing iic.o(.text.I2C_SendByte), (182 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_SendByte), (8 bytes).
    Removing iic.o(.text.I2C_ReceiveByte), (186 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_ReceiveByte), (8 bytes).
    Removing iic.o(.text.I2C_WriteData), (262 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_WriteData), (8 bytes).
    Removing iic.o(.text.I2C_ReadData), (548 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_ReadData), (8 bytes).
    Removing iic.o(.text.I2C_WriteMulti), (278 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_WriteMulti), (8 bytes).
    Removing iic.o(.text.I2C_ReadMulti), (650 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_ReadMulti), (8 bytes).
    Removing iic.o(.data.iic_test.data.0), (1 bytes).
    Removing bms_pro.o(.text), (0 bytes).
    Removing bms_pro.o(.text.find_max_min), (216 bytes).
    Removing bms_pro.o(.ARM.exidx.text.find_max_min), (8 bytes).
    Removing bms_pro.o(.text.protect_scan_flag), (1790 bytes).
    Removing bms_pro.o(.ARM.exidx.text.protect_scan_flag), (8 bytes).
    Removing bms_pro.o(.text.task_bms), (382 bytes).
    Removing bms_pro.o(.ARM.exidx.text.task_bms), (8 bytes).
    Removing bms_pro.o(.bss.bms_vbat_sum), (2 bytes).
    Removing bms_pro.o(.bss.max_cell_V), (2 bytes).
    Removing bms_pro.o(.bss.min_cell_V), (2 bytes).
    Removing bms_pro.o(.bss.bms_tmp_H), (2 bytes).
    Removing bms_pro.o(.bss.bms_tmp_L), (2 bytes).
    Removing bms_pro.o(.bss.i_bms_tmp_H), (2 bytes).
    Removing bms_pro.o(.bss.i_bms_tmp_L), (2 bytes).
    Removing bms_pro.o(.bss.err_0v5_cnt), (1 bytes).
    Removing bms_pro.o(.bss.err_3v8_cnt), (1 bytes).
    Removing bms_pro.o(.bss.err_1v8_cnt), (1 bytes).
    Removing bms_pro.o(.bss.t_bms_rst_flag), (2 bytes).
    Removing bms_pro.o(.bss.protect_scan_flag.pidx), (1 bytes).
    Removing bms_pro.o(.bss.bms_curr), (2 bytes).
    Removing bms_pro.o(.bss.bms_mos_err_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_cell_chg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_cell_chg_curr_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_cell_dsg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_t_mos_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_t_err_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_th_chg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_tl_chg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_th_dsg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_tl_dsg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_curr_chg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_curr_dsg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_battery_status), (2 bytes).
    Removing bms_pro.o(.bss.bms_rst_cnt), (1 bytes).
    Removing bms_pro.o(.bss.dc_reset_flag), (1 bytes).
    Removing bms_pro.o(.bss.bms_test_step), (2 bytes).
    Removing bms_pro.o(.bss.task_bms.idx), (1 bytes).
    Removing bms_pro.o(.bss.pack_pin_voltage), (2 bytes).
    Removing bms_pro.o(.bss.bms_bat_full_cnt), (1 bytes).
    Removing bms_pro.o(.bss.flag_chg_dsg), (1 bytes).
    Removing coulomp.o(.text), (0 bytes).
    Removing coulomp.o(.text.coulomp_init), (300 bytes).
    Removing coulomp.o(.ARM.exidx.text.coulomp_init), (8 bytes).
    Removing coulomp.o(.text.estimate_soc_from_voltage), (106 bytes).
    Removing coulomp.o(.ARM.exidx.text.estimate_soc_from_voltage), (8 bytes).
    Removing coulomp.o(.ARM.exidx.text.task_coulomp), (8 bytes).
    Removing coulomp.o(.ARM.exidx.text.coulomp_calc), (8 bytes).
    Removing bathealth.o(.text), (0 bytes).
    Removing bathealth.o(.ARM.exidx.text.health_init), (8 bytes).
    Removing bathealth.o(.ARM.exidx.text.task_health), (8 bytes).
    Removing bathealth.o(.text.health_calc), (54 bytes).
    Removing bathealth.o(.ARM.exidx.text.health_calc), (8 bytes).
    Removing cs32f10x_adc.o(.text), (0 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_init), (8 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_struct_init), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_disc_mode_channel_config), (20 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_disc_mode_channel_config), (8 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_regular_channel_config), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_inject_ext_trigger_config), (12 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_inject_ext_trigger_config), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_inject_channel_config), (82 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_inject_channel_config), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_inject_sequence_length_config), (22 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_inject_sequence_length_config), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_inject_offset_set), (8 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_inject_offset_set), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_inject_conv_value_get), (10 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_inject_conv_value_get), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_analog_wdt_threshold_set), (6 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_analog_wdt_threshold_set), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_analog_channel_config), (12 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_analog_channel_config), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_analog_wdt_config), (18 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_analog_wdt_config), (8 bytes).
    Removing cs32f10x_bkp.o(.text), (0 bytes).
    Removing cs32f10x_bkp.o(.text.bkp_tamper_active_level_config), (20 bytes).
    Removing cs32f10x_bkp.o(.ARM.exidx.text.bkp_tamper_active_level_config), (8 bytes).
    Removing cs32f10x_bkp.o(.text.bkp_rtc_output_config), (20 bytes).
    Removing cs32f10x_bkp.o(.ARM.exidx.text.bkp_rtc_output_config), (8 bytes).
    Removing cs32f10x_bkp.o(.text.bkp_rtc_cali_data_set), (20 bytes).
    Removing cs32f10x_bkp.o(.ARM.exidx.text.bkp_rtc_cali_data_set), (8 bytes).
    Removing cs32f10x_bkp.o(.text.bkp_backup_register_write), (14 bytes).
    Removing cs32f10x_bkp.o(.ARM.exidx.text.bkp_backup_register_write), (8 bytes).
    Removing cs32f10x_bkp.o(.text.bkp_backup_register_read), (16 bytes).
    Removing cs32f10x_bkp.o(.ARM.exidx.text.bkp_backup_register_read), (8 bytes).
    Removing cs32f10x_can.o(.text), (0 bytes).
    Removing cs32f10x_can.o(.text.can_init), (214 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_init), (8 bytes).
    Removing cs32f10x_can.o(.text.can_config_struct_init), (30 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_config_struct_init), (8 bytes).
    Removing cs32f10x_can.o(.text.can_work_mode_config), (86 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_work_mode_config), (8 bytes).
    Removing cs32f10x_can.o(.text.can_filter_init), (168 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_filter_init), (8 bytes).
    Removing cs32f10x_can.o(.text.can_time_trigger_enable_ctrl), (92 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_time_trigger_enable_ctrl), (8 bytes).
    Removing cs32f10x_can.o(.text.can_message_send), (136 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_message_send), (8 bytes).
    Removing cs32f10x_can.o(.text.can_tx_status_get), (128 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_tx_status_get), (8 bytes).
    Removing cs32f10x_can.o(.text.can_tx_abort_set), (28 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_tx_abort_set), (8 bytes).
    Removing cs32f10x_can.o(.text.can_message_receive), (160 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_message_receive), (8 bytes).
    Removing cs32f10x_can.o(.text.can_rx_fifo_release), (18 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_rx_fifo_release), (8 bytes).
    Removing cs32f10x_can.o(.text.can_fifo_msg_num_get), (16 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_fifo_msg_num_get), (8 bytes).
    Removing cs32f10x_can.o(.text.can_sleep_set), (44 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_sleep_set), (8 bytes).
    Removing cs32f10x_can.o(.text.can_wakeup_set), (38 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_wakeup_set), (8 bytes).
    Removing cs32f10x_can.o(.text.can_op_mode_switch_ctrl), (150 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_op_mode_switch_ctrl), (8 bytes).
    Removing cs32f10x_can.o(.text.can_flag_status_get), (60 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_flag_status_get), (8 bytes).
    Removing cs32f10x_can.o(.text.can_flag_clear), (76 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_flag_clear), (8 bytes).
    Removing cs32f10x_can.o(.text.can_int_status_get), (272 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_int_status_get), (8 bytes).
    Removing cs32f10x_can.o(.text.can_int_flag_clear), (172 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_int_flag_clear), (8 bytes).
    Removing cs32f10x_crc.o(.text), (0 bytes).
    Removing cs32f10x_crc.o(.text.crc_def_init), (18 bytes).
    Removing cs32f10x_crc.o(.ARM.exidx.text.crc_def_init), (8 bytes).
    Removing cs32f10x_crc.o(.text.crc_crc32_calc), (14 bytes).
    Removing cs32f10x_crc.o(.ARM.exidx.text.crc_crc32_calc), (8 bytes).
    Removing cs32f10x_crc.o(.text.crc_data_buffer_calc), (26 bytes).
    Removing cs32f10x_crc.o(.ARM.exidx.text.crc_data_buffer_calc), (8 bytes).
    Removing cs32f10x_debug.o(.text), (0 bytes).
    Removing cs32f10x_debug.o(.text.debug_revision_id_get), (14 bytes).
    Removing cs32f10x_debug.o(.ARM.exidx.text.debug_revision_id_get), (8 bytes).
    Removing cs32f10x_debug.o(.text.debug_dev_id_get), (16 bytes).
    Removing cs32f10x_debug.o(.ARM.exidx.text.debug_dev_id_get), (8 bytes).
    Removing cs32f10x_debug.o(.text.debug_low_power_config), (24 bytes).
    Removing cs32f10x_debug.o(.ARM.exidx.text.debug_low_power_config), (8 bytes).
    Removing cs32f10x_dma.o(.text), (0 bytes).
    Removing cs32f10x_dma.o(.text.dma_def_init), (64 bytes).
    Removing cs32f10x_dma.o(.ARM.exidx.text.dma_def_init), (8 bytes).
    Removing cs32f10x_dma.o(.text.dma_init), (108 bytes).
    Removing cs32f10x_dma.o(.ARM.exidx.text.dma_init), (8 bytes).
    Removing cs32f10x_dma.o(.text.dma_transfer_config), (56 bytes).
    Removing cs32f10x_dma.o(.ARM.exidx.text.dma_transfer_config), (8 bytes).
    Removing cs32f10x_dma.o(.text.dma_struct_config), (10 bytes).
    Removing cs32f10x_dma.o(.ARM.exidx.text.dma_struct_config), (8 bytes).
    Removing cs32f10x_exti.o(.text), (0 bytes).
    Removing cs32f10x_exti.o(.text.exti_def_init), (22 bytes).
    Removing cs32f10x_exti.o(.ARM.exidx.text.exti_def_init), (8 bytes).
    Removing cs32f10x_flash.o(.text), (0 bytes).
    Removing cs32f10x_flash.o(.text.flash_wait_counter_set), (20 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_wait_counter_set), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_unlock), (38 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_unlock), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_lock), (18 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_lock), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_page_erase), (146 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_page_erase), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_operation_wait), (48 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_operation_wait), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_all_pages_erase), (80 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_all_pages_erase), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_word_program), (148 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_word_program), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_half_word_program), (72 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_half_word_program), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_unlock), (38 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_unlock), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_lock), (18 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_lock), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_erase), (186 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_erase), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_user_set), (14 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_user_set), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_set), (294 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_set), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_write_protect_enable), (64 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_write_protect_enable), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_read_protect_config), (22 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_read_protect_config), (8 bytes).
    Removing cs32f10x_fwdt.o(.text), (0 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_write_access_enable_ctrl), (12 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_write_access_enable_ctrl), (8 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_prescaler_set), (12 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_prescaler_set), (8 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_reload_set), (12 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_reload_set), (8 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_reload_counter), (16 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_reload_counter), (8 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_enable), (16 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_enable), (8 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_flag_status_get), (18 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_flag_status_get), (8 bytes).
    Removing cs32f10x_gpio.o(.text), (0 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_mode_config), (8 bytes).
    Removing cs32f10x_gpio.o(.text.gpio_def_init), (108 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_def_init), (8 bytes).
    Removing cs32f10x_gpio.o(.text.gpio_af_deinit), (26 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_af_deinit), (8 bytes).
    Removing cs32f10x_gpio.o(.text.gpio_pin_lock_set), (36 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_pin_lock_set), (8 bytes).
    Removing cs32f10x_gpio.o(.text.gpio_event_config), (22 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_event_config), (8 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_pin_remap_config), (8 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_exti_pin_config), (8 bytes).
    Removing cs32f10x_i2c.o(.text), (0 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_deinit), (54 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_deinit), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_struct_init), (32 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_struct_init), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_init), (204 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_init), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_slave_address2_config), (14 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_slave_address2_config), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_interrupt_config), (16 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_config), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_master_send7bits_address), (18 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_master_send7bits_address), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_read_register), (18 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_read_register), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_get_pec), (6 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_get_pec), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_event_check), (22 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_event_check), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_last_event_get), (12 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_last_event_get), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_flag_status_check), (28 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_flag_status_check), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_flag_clear), (6 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_flag_clear), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_interrupt_status_get), (22 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_status_get), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_interrupt_clear), (6 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_clear), (8 bytes).
    Removing cs32f10x_misc.o(.text), (0 bytes).
    Removing cs32f10x_misc.o(.ARM.exidx.text.nvic_priority_group_config), (8 bytes).
    Removing cs32f10x_misc.o(.ARM.exidx.text.nvic_init), (8 bytes).
    Removing cs32f10x_misc.o(.text.nvic_vector_table_set), (24 bytes).
    Removing cs32f10x_misc.o(.ARM.exidx.text.nvic_vector_table_set), (8 bytes).
    Removing cs32f10x_misc.o(.text.nvic_sys_lowpwr_config), (24 bytes).
    Removing cs32f10x_misc.o(.ARM.exidx.text.nvic_sys_lowpwr_config), (8 bytes).
    Removing cs32f10x_misc.o(.text.systick_clk_src_config), (24 bytes).
    Removing cs32f10x_misc.o(.ARM.exidx.text.systick_clk_src_config), (8 bytes).
    Removing cs32f10x_pmu.o(.text), (0 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_deinit), (26 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_deinit), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_vbat_domain_write_config), (22 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_vbat_domain_write_config), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_lvd_voltage_select), (22 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_lvd_voltage_select), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_lvd_enable_config), (22 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_lvd_enable_config), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_wkup_pin_config), (22 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_wkup_pin_config), (8 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_stop_mode_enter), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_standby_enter), (44 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_standby_enter), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_flag_get), (18 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_flag_get), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_flag_clear), (16 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_flag_clear), (8 bytes).
    Removing cs32f10x_rcu.o(.text), (0 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_def_init), (66 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_def_init), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_hxt_stabilization_wait), (48 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_hxt_stabilization_wait), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_hxt_status_set), (50 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_hxt_status_set), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_hrc_calibration_adjust), (22 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_hrc_calibration_adjust), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_pll_config), (22 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_pll_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_clkout_config), (20 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_clkout_config), (8 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_sysclk_config), (8 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_sysclk_src_get), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_pclk1_config), (20 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_pclk1_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_pclk2_config), (22 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_pclk2_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_hclk_config), (20 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_hclk_config), (8 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_adcclk_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_usbclk_config), (20 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_usbclk_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_rtcclk_config), (20 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_rtcclk_config), (8 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_clkready_reset_flag_get), (8 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_clk_freq_get), (8 bytes).
    Removing cs32f10x_rtc.o(.text), (0 bytes).
    Removing cs32f10x_rtc.o(.text.rtc_counter_set), (34 bytes).
    Removing cs32f10x_rtc.o(.ARM.exidx.text.rtc_counter_set), (8 bytes).
    Removing cs32f10x_rtc.o(.text.rtc_prescaler_set), (34 bytes).
    Removing cs32f10x_rtc.o(.ARM.exidx.text.rtc_prescaler_set), (8 bytes).
    Removing cs32f10x_rtc.o(.text.rtc_alarm_set), (34 bytes).
    Removing cs32f10x_rtc.o(.ARM.exidx.text.rtc_alarm_set), (8 bytes).
    Removing cs32f10x_rtc.o(.text.rtc_wait_for_synchronize), (24 bytes).
    Removing cs32f10x_rtc.o(.ARM.exidx.text.rtc_wait_for_synchronize), (8 bytes).
    Removing cs32f10x_spi.o(.text), (0 bytes).
    Removing cs32f10x_spi.o(.text.spi_config_struct_init), (16 bytes).
    Removing cs32f10x_spi.o(.ARM.exidx.text.spi_config_struct_init), (8 bytes).
    Removing cs32f10x_spi.o(.text.spi_init), (62 bytes).
    Removing cs32f10x_spi.o(.ARM.exidx.text.spi_init), (8 bytes).
    Removing cs32f10x_spi.o(.text.spi_transmit_direct_set), (12 bytes).
    Removing cs32f10x_spi.o(.ARM.exidx.text.spi_transmit_direct_set), (8 bytes).
    Removing cs32f10x_spi.o(.text.spi_software_nss_config), (12 bytes).
    Removing cs32f10x_spi.o(.ARM.exidx.text.spi_software_nss_config), (8 bytes).
    Removing cs32f10x_tim.o(.text), (0 bytes).
    Removing cs32f10x_tim.o(.text.tim_def_init), (350 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_def_init), (8 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_base_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_base_struct_init), (14 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_base_struct_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_prescaler_set), (6 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_prescaler_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_count_pattern_set), (12 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_count_pattern_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_update_request_set), (12 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_update_request_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_clock_division_set), (12 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_clock_division_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_protect_config), (38 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_protect_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_protect_struct_init), (12 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_protect_struct_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_init), (168 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_struct_init), (22 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_struct_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_mode_set), (56 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_mode_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_preload_set), (42 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_preload_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_fast_set), (38 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_fast_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_clear_set), (38 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_clear_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chcc_polarity_set), (24 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chcc_polarity_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chncc_polarity_set), (24 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chncc_polarity_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chcc_enable_ctrl), (36 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chcc_enable_ctrl), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chncc_enable_ctrl), (36 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chncc_enable_ctrl), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chic_predivider_set), (38 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chic_predivider_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chic_init), (96 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chic_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chic_struct_init), (18 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chic_struct_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_pwmi_config), (238 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_pwmi_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_dma_access_config), (6 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_dma_access_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_internal_clock_config), (10 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_internal_clock_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_input_trigger_set), (12 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_input_trigger_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_internal_trigger_external_clock_config), (20 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_internal_trigger_external_clock_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_ti_external_clock_config), (102 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_ti_external_clock_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_external_trigger_config), (22 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_external_trigger_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_external_clock_mode1_config), (30 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_external_clock_mode1_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_external_clock_mode2_config), (30 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_external_clock_mode2_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_trigger_output_set), (12 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_trigger_output_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_slave_mode_config), (12 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_slave_mode_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_master_slave_set), (12 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_master_slave_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_encoder_interface_set), (48 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_encoder_interface_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_pulse_mode_set), (12 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_pulse_mode_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_forced_set), (38 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_forced_set), (8 bytes).
    Removing cs32f10x_usart.o(.text), (0 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_def_init), (8 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_init), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_config_struct_init), (22 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_config_struct_init), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_synchronous_clock_init), (44 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_synchronous_clock_init), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_synchronous_clock_struct_init), (10 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_synchronous_clock_struct_init), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_address_set), (12 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_address_set), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_recv_wakeup_config), (12 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_recv_wakeup_config), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_lin_break_detection_length_confiig), (12 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_lin_break_detection_length_confiig), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_break_frame_send), (10 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_break_frame_send), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_sc_guard_time_set), (14 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_sc_guard_time_set), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_prescaler_set), (12 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_prescaler_set), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_sc_nack_enable), (16 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_sc_nack_enable), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_half_duplex_enable), (16 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_half_duplex_enable), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_irda_low_power_enable), (16 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_irda_low_power_enable), (8 bytes).
    Removing cs32f10x_wwdt.o(.text), (0 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_def_init), (26 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_def_init), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_prescaler_set), (20 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_prescaler_set), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_window_value_set), (40 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_window_value_set), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_interrupt_enable), (18 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_interrupt_enable), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_counter_set), (16 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_counter_set), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_enable), (16 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_enable), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_status_flag_get), (18 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_status_flag_get), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_flag_clear), (14 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_flag_clear), (8 bytes).
    Removing startup_cs32f103xb.o(HEAP), (512 bytes).
    Removing system_cs32f10x.o(.text), (0 bytes).
    Removing system_cs32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_cs32f10x.o(.text.SystemCoreClockUpdate), (104 bytes).
    Removing system_cs32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing dfltui.o(.text), (26 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).

729 unused section(s) (total 23505 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/putchar.c         0x00000000   Number         0  putchar.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  fadd.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    RTE/Device/CS32F103VB/startup_cs32f103xb.s 0x00000000   Number         0  startup_cs32f103xb.o ABSOLUTE
    adc.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    app.c                                    0x00000000   Number         0  app.o ABSOLUTE
    bathealth.c                              0x00000000   Number         0  bathealth.o ABSOLUTE
    bms.c                                    0x00000000   Number         0  bms.o ABSOLUTE
    bms_pro.c                                0x00000000   Number         0  bms_pro.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    communication.c                          0x00000000   Number         0  communication.o ABSOLUTE
    coulomp.c                                0x00000000   Number         0  coulomp.o ABSOLUTE
    cs32f10x_adc.c                           0x00000000   Number         0  cs32f10x_adc.o ABSOLUTE
    cs32f10x_bkp.c                           0x00000000   Number         0  cs32f10x_bkp.o ABSOLUTE
    cs32f10x_can.c                           0x00000000   Number         0  cs32f10x_can.o ABSOLUTE
    cs32f10x_crc.c                           0x00000000   Number         0  cs32f10x_crc.o ABSOLUTE
    cs32f10x_debug.c                         0x00000000   Number         0  cs32f10x_debug.o ABSOLUTE
    cs32f10x_dma.c                           0x00000000   Number         0  cs32f10x_dma.o ABSOLUTE
    cs32f10x_exti.c                          0x00000000   Number         0  cs32f10x_exti.o ABSOLUTE
    cs32f10x_flash.c                         0x00000000   Number         0  cs32f10x_flash.o ABSOLUTE
    cs32f10x_fwdt.c                          0x00000000   Number         0  cs32f10x_fwdt.o ABSOLUTE
    cs32f10x_gpio.c                          0x00000000   Number         0  cs32f10x_gpio.o ABSOLUTE
    cs32f10x_i2c.c                           0x00000000   Number         0  cs32f10x_i2c.o ABSOLUTE
    cs32f10x_it.c                            0x00000000   Number         0  cs32f10x_it.o ABSOLUTE
    cs32f10x_misc.c                          0x00000000   Number         0  cs32f10x_misc.o ABSOLUTE
    cs32f10x_pmu.c                           0x00000000   Number         0  cs32f10x_pmu.o ABSOLUTE
    cs32f10x_rcu.c                           0x00000000   Number         0  cs32f10x_rcu.o ABSOLUTE
    cs32f10x_rtc.c                           0x00000000   Number         0  cs32f10x_rtc.o ABSOLUTE
    cs32f10x_spi.c                           0x00000000   Number         0  cs32f10x_spi.o ABSOLUTE
    cs32f10x_tim.c                           0x00000000   Number         0  cs32f10x_tim.o ABSOLUTE
    cs32f10x_usart.c                         0x00000000   Number         0  cs32f10x_usart.o ABSOLUTE
    cs32f10x_wwdt.c                          0x00000000   Number         0  cs32f10x_wwdt.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    debug.c                                  0x00000000   Number         0  debug.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    iic.c                                    0x00000000   Number         0  iic.o ABSOLUTE
    init.c                                   0x00000000   Number         0  init.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    key.c                                    0x00000000   Number         0  key.o ABSOLUTE
    led.c                                    0x00000000   Number         0  led.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_cs32f10x.c                        0x00000000   Number         0  system_cs32f10x.o ABSOLUTE
    task.c                                   0x00000000   Number         0  task.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_cs32f103xb.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000ec   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000ec   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000f0   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000f4   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000f4   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000f4   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080000fc   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080000fc   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000fc   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000fc   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x08000100   Section       36  startup_cs32f103xb.o(.text)
    .text                                    0x08000124   Section        0  uldiv.o(.text)
    .text                                    0x08000186   Section        0  fadd.o(.text)
    .text                                    0x08000236   Section        0  fmul.o(.text)
    .text                                    0x0800029a   Section        0  fdiv.o(.text)
    .text                                    0x08000316   Section        0  dmul.o(.text)
    .text                                    0x080003fa   Section        0  ddiv.o(.text)
    .text                                    0x080004d8   Section        0  fflti.o(.text)
    .text                                    0x080004ea   Section        0  dflti.o(.text)
    .text                                    0x0800050c   Section        0  ffixi.o(.text)
    .text                                    0x0800053e   Section        0  dfixi.o(.text)
    .text                                    0x0800057c   Section        0  llshl.o(.text)
    .text                                    0x0800059a   Section        0  llushr.o(.text)
    .text                                    0x080005ba   Section        0  iusefp.o(.text)
    .text                                    0x080005ba   Section        0  fepilogue.o(.text)
    .text                                    0x08000628   Section        0  depilogue.o(.text)
    .text                                    0x080006e4   Section       48  init.o(.text)
    .text                                    0x08000714   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x0800076c   Section        0  cs32f10x_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x08000770   Section        0  cs32f10x_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x08000774   Section        0  cs32f10x_it.o(.text.EXTI1_IRQHandler)
    [Anonymous Symbol]                       0x08000788   Section        0  cs32f10x_it.o(.text.EXTI4_IRQHandler)
    [Anonymous Symbol]                       0x080007b8   Section        0  cs32f10x_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x080007bc   Section        0  cs32f10x_it.o(.text.MemManage_Handler)
    [Anonymous Symbol]                       0x080007c0   Section        0  cs32f10x_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x080007c4   Section        0  cs32f10x_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080007c8   Section        0  queue.o(.text.ProcessData1)
    [Anonymous Symbol]                       0x080008e0   Section        0  cs32f10x_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x080008e4   Section        0  cs32f10x_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08000900   Section        0  system_cs32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000a14   Section        0  cs32f10x_it.o(.text.TIM1_UP_IRQHandler)
    [Anonymous Symbol]                       0x08000a38   Section        0  task.o(.text.Task_Marks_Handler_Callback)
    [Anonymous Symbol]                       0x08000a7c   Section        0  task.o(.text.Task_Pro_Handler_Callback)
    [Anonymous Symbol]                       0x08000ac4   Section        0  cs32f10x_it.o(.text.USART3_IRQHandler)
    [Anonymous Symbol]                       0x08000aec   Section        0  cs32f10x_it.o(.text.UsageFault_Handler)
    [Anonymous Symbol]                       0x08000af0   Section        0  cs32f10x_adc.o(.text.adc_init)
    [Anonymous Symbol]                       0x08000b40   Section        0  adc.o(.text.adc_init_)
    [Anonymous Symbol]                       0x08000c28   Section        0  cs32f10x_adc.o(.text.adc_regular_channel_config)
    [Anonymous Symbol]                       0x08000c88   Section        0  cs32f10x_adc.o(.text.adc_struct_init)
    [Anonymous Symbol]                       0x08000c9c   Section        0  app.o(.text.app_led_control)
    [Anonymous Symbol]                       0x08000de8   Section        0  app.o(.text.app_power_sw_contorl)
    [Anonymous Symbol]                       0x08000e60   Section        0  app.o(.text.app_temperature_protect)
    [Anonymous Symbol]                       0x08000fb4   Section        0  app.o(.text.app_usba_control_protect)
    [Anonymous Symbol]                       0x08001180   Section        0  queue.o(.text.circ_buffer_push)
    [Anonymous Symbol]                       0x080011b4   Section        0  communication.o(.text.cmd_g020_get)
    [Anonymous Symbol]                       0x080011c0   Section        0  communication.o(.text.cmd_g020_write)
    [Anonymous Symbol]                       0x080011cc   Section        0  coulomp.o(.text.coulomp_calc)
    [Anonymous Symbol]                       0x0800130c   Section        0  init.o(.text.deinit_befor_sleep)
    [Anonymous Symbol]                       0x08001338   Section        0  app.o(.text.eta_driver)
    [Anonymous Symbol]                       0x0800135c   Section        0  init.o(.text.exti_init)
    [Anonymous Symbol]                       0x080013c4   Section        0  led.o(.text.f_led_alloff)
    [Anonymous Symbol]                       0x08001418   Section        0  led.o(.text.f_led_charge)
    [Anonymous Symbol]                       0x08001484   Section        0  led.o(.text.f_led_discharge)
    [Anonymous Symbol]                       0x080014f0   Section        0  led.o(.text.f_led_err)
    [Anonymous Symbol]                       0x08001558   Section        0  led.o(.text.f_led_health)
    [Anonymous Symbol]                       0x080015b0   Section        0  led.o(.text.f_led_port_normal)
    [Anonymous Symbol]                       0x08001608   Section        0  led.o(.text.f_led_port_warning)
    [Anonymous Symbol]                       0x08001730   Section        0  led.o(.text.f_led_show_battery)
    [Anonymous Symbol]                       0x0800178c   Section        0  led.o(.text.f_led_warning)
    [Anonymous Symbol]                       0x080017e4   Section        0  app.o(.text.f_uaba_close)
    [Anonymous Symbol]                       0x08001844   Section        0  app.o(.text.f_uaba_fault_ov)
    [Anonymous Symbol]                       0x08001890   Section        0  app.o(.text.f_uaba_open)
    [Anonymous Symbol]                       0x080018ec   Section        0  init.o(.text.fputc)
    [Anonymous Symbol]                       0x08001904   Section        0  cs32f10x_gpio.o(.text.gpio_exti_pin_config)
    [Anonymous Symbol]                       0x0800193c   Section        0  cs32f10x_gpio.o(.text.gpio_mode_config)
    [Anonymous Symbol]                       0x080019fc   Section        0  cs32f10x_gpio.o(.text.gpio_pin_remap_config)
    [Anonymous Symbol]                       0x08001a14   Section        0  bathealth.o(.text.health_init)
    [Anonymous Symbol]                       0x08001a24   Section        0  iic.o(.text.i2c_init_2)
    [Anonymous Symbol]                       0x08001a5c   Section        0  init.o(.text.init_after_sleep)
    [Anonymous Symbol]                       0x08001b30   Section        0  init.o(.text.io_sleep_conf)
    [Anonymous Symbol]                       0x08001d90   Section        0  key.o(.text.key_init)
    [Anonymous Symbol]                       0x08001ddc   Section        0  led.o(.text.led_bat_show)
    [Anonymous Symbol]                       0x080021dc   Section        0  led.o(.text.led_init)
    [Anonymous Symbol]                       0x08002308   Section        0  led.o(.text.led_port_show)
    [Anonymous Symbol]                       0x0800242c   Section        0  led.o(.text.led_pwm_control)
    [Anonymous Symbol]                       0x080024dc   Section        0  init.o(.text.log_init)
    [Anonymous Symbol]                       0x08002544   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x080025dc   Section        0  init.o(.text.nvic_configuration)
    [Anonymous Symbol]                       0x08002628   Section        0  cs32f10x_misc.o(.text.nvic_init)
    [Anonymous Symbol]                       0x0800265c   Section        0  cs32f10x_misc.o(.text.nvic_priority_group_config)
    [Anonymous Symbol]                       0x08002670   Section        0  init.o(.text.other_io_init)
    [Anonymous Symbol]                       0x08002700   Section        0  cs32f10x_pmu.o(.text.pmu_stop_mode_enter)
    [Anonymous Symbol]                       0x08002740   Section        0  cs32f10x_rcu.o(.text.rcu_adcclk_config)
    [Anonymous Symbol]                       0x08002754   Section        0  cs32f10x_rcu.o(.text.rcu_clk_freq_get)
    [Anonymous Symbol]                       0x080027f4   Section        0  cs32f10x_rcu.o(.text.rcu_clkready_reset_flag_get)
    [Anonymous Symbol]                       0x08002838   Section        0  cs32f10x_rcu.o(.text.rcu_sysclk_config)
    [Anonymous Symbol]                       0x0800284c   Section        0  cs32f10x_rcu.o(.text.rcu_sysclk_src_get)
    [Anonymous Symbol]                       0x0800285c   Section        0  app.o(.text.sleep_control)
    [Anonymous Symbol]                       0x080028f8   Section        0  adc.o(.text.task_adc)
    [Anonymous Symbol]                       0x080029c8   Section        0  app.o(.text.task_app)
    [Anonymous Symbol]                       0x08002b88   Section        0  communication.o(.text.task_com_rx)
    [Anonymous Symbol]                       0x08002b94   Section        0  communication.o(.text.task_com_tx)
    [Anonymous Symbol]                       0x08002c60   Section        0  coulomp.o(.text.task_coulomp)
    [Anonymous Symbol]                       0x08002ca4   Section        0  debug.o(.text.task_debug)
    [Anonymous Symbol]                       0x08002ebc   Section        0  bathealth.o(.text.task_health)
    table                                    0x08002f24   Number         0  bathealth.o(.text.task_health)
    [Anonymous Symbol]                       0x08002f2c   Section        0  key.o(.text.task_key)
    [Anonymous Symbol]                       0x08002fe0   Section        0  led.o(.text.task_led)
    [Anonymous Symbol]                       0x08002ffc   Section        0  app.o(.text.tick_delay)
    [Anonymous Symbol]                       0x08003010   Section        0  init.o(.text.tick_init)
    [Anonymous Symbol]                       0x08003058   Section        0  cs32f10x_tim.o(.text.tim_base_init)
    [Anonymous Symbol]                       0x0800309c   Section        0  init.o(.text.tim_init)
    [Anonymous Symbol]                       0x080030f4   Section        0  init.o(.text.uart_init)
    [Anonymous Symbol]                       0x08003168   Section        0  cs32f10x_usart.o(.text.usart_def_init)
    [Anonymous Symbol]                       0x08003238   Section        0  cs32f10x_usart.o(.text.usart_init)
    i.__0printf$8                            0x080032ac   Section        0  printf8.o(i.__0printf$8)
    i.__scatterload_copy                     0x080032cc   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x080032da   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x080032dc   Section       14  handlers.o(i.__scatterload_zeroinit)
    _printf_core                             0x080032ed   Thumb Code   996  printf8.o(i._printf_core)
    i._printf_core                           0x080032ec   Section        0  printf8.o(i._printf_core)
    _printf_post_padding                     0x080036fd   Thumb Code    36  printf8.o(i._printf_post_padding)
    i._printf_post_padding                   0x080036fc   Section        0  printf8.o(i._printf_post_padding)
    _printf_pre_padding                      0x08003721   Thumb Code    46  printf8.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x08003720   Section        0  printf8.o(i._printf_pre_padding)
    i.puts                                   0x08003750   Section        0  puts.o(i.puts)
    ADC_pdiv_table                           0x08003774   Data           4  cs32f10x_rcu.o(.rodata.ADC_pdiv_table)
    [Anonymous Symbol]                       0x08003774   Section        0  cs32f10x_rcu.o(.rodata.ADC_pdiv_table)
    APBAHB_pdiv_table                        0x08003778   Data          16  cs32f10x_rcu.o(.rodata.APBAHB_pdiv_table)
    [Anonymous Symbol]                       0x08003778   Section        0  cs32f10x_rcu.o(.rodata.APBAHB_pdiv_table)
    .L.str                                   0x08003788   Data          19  app.o(.rodata.str1.1)
    .L.str.2                                 0x08003788   Data          19  app.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003788   Section        0  app.o(.rodata.str1.1)
    .L.str.5                                 0x0800379b   Data          16  app.o(.rodata.str1.1)
    .L.str.1                                 0x080037ab   Data          15  app.o(.rodata.str1.1)
    .L.str.3                                 0x080037ab   Data          15  app.o(.rodata.str1.1)
    .L.str.4                                 0x080037ba   Data          14  app.o(.rodata.str1.1)
    .L.str.23                                0x080037c8   Data          51  debug.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080037c8   Section        0  debug.o(.rodata.str1.1)
    .L.str.19                                0x080037fb   Data          18  debug.o(.rodata.str1.1)
    .L.str.21                                0x0800380d   Data          41  debug.o(.rodata.str1.1)
    .L.str.20                                0x08003836   Data          24  debug.o(.rodata.str1.1)
    .L.str.22                                0x0800384e   Data          25  debug.o(.rodata.str1.1)
    .L.str.18                                0x08003867   Data          24  debug.o(.rodata.str1.1)
    .L.str.2                                 0x0800396e   Data          14  led.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800396e   Section        0  led.o(.rodata.str1.1)
    .Lstr.4                                  0x0800397c   Data           9  queue.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800397c   Section        0  queue.o(.rodata.str1.1)
    .Lstr.5                                  0x08003985   Data           9  queue.o(.rodata.str1.1)
    table                                    0x0800398e   Data           9  coulomp.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800398e   Section        0  coulomp.o(.rodata.str1.1)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    Task_Comps                               0x20000008   Data         108  task.o(.data.Task_Comps)
    [Anonymous Symbol]                       0x20000008   Section        0  task.o(.data.Task_Comps)
    ProcessData1.packet                      0x200001dc   Data          50  queue.o(.bss.ProcessData1.packet)
    [Anonymous Symbol]                       0x200001dc   Section        0  queue.o(.bss.ProcessData1.packet)
    ProcessData1.packetIndex                 0x2000020e   Data           2  queue.o(.bss.ProcessData1.packetIndex)
    [Anonymous Symbol]                       0x2000020e   Section        0  queue.o(.bss.ProcessData1.packetIndex)
    ProcessData1.receive_status              0x20000210   Data           1  queue.o(.bss.ProcessData1.receive_status)
    [Anonymous Symbol]                       0x20000210   Section        0  queue.o(.bss.ProcessData1.receive_status)
    app_led_control.err_mode                 0x20000214   Data           1  app.o(.bss.app_led_control.err_mode)
    [Anonymous Symbol]                       0x20000214   Section        0  app.o(.bss.app_led_control.err_mode)
    app_power_rank_contorl.cnt               0x20000215   Data           1  app.o(.bss.app_power_rank_contorl.cnt)
    [Anonymous Symbol]                       0x20000215   Section        0  app.o(.bss.app_power_rank_contorl.cnt)
    app_temperature_protect.rep.0            0x20000216   Data           2  app.o(.bss.app_temperature_protect.rep.0)
    [Anonymous Symbol]                       0x20000216   Section        0  app.o(.bss.app_temperature_protect.rep.0)
    app_temperature_protect.rep.1            0x20000218   Data           2  app.o(.bss.app_temperature_protect.rep.1)
    [Anonymous Symbol]                       0x20000218   Section        0  app.o(.bss.app_temperature_protect.rep.1)
    app_temperature_protect.rep.2            0x2000021a   Data           2  app.o(.bss.app_temperature_protect.rep.2)
    [Anonymous Symbol]                       0x2000021a   Section        0  app.o(.bss.app_temperature_protect.rep.2)
    app_temperature_protect.rep.3            0x2000021c   Data           2  app.o(.bss.app_temperature_protect.rep.3)
    [Anonymous Symbol]                       0x2000021c   Section        0  app.o(.bss.app_temperature_protect.rep.3)
    app_usba_control_protect.oc_cnt          0x2000021e   Data           1  app.o(.bss.app_usba_control_protect.oc_cnt)
    [Anonymous Symbol]                       0x2000021e   Section        0  app.o(.bss.app_usba_control_protect.oc_cnt)
    app_usba_control_protect.recover_cnt     0x20000220   Data           4  app.o(.bss.app_usba_control_protect.recover_cnt)
    [Anonymous Symbol]                       0x20000220   Section        0  app.o(.bss.app_usba_control_protect.recover_cnt)
    app_usba_control_protect.small_cur_cnt   0x20000224   Data           4  app.o(.bss.app_usba_control_protect.small_cur_cnt)
    [Anonymous Symbol]                       0x20000224   Section        0  app.o(.bss.app_usba_control_protect.small_cur_cnt)
    key_fast_switch.last_level               0x20000260   Data           1  app.o(.bss.key_fast_switch.last_level)
    [Anonymous Symbol]                       0x20000260   Section        0  app.o(.bss.key_fast_switch.last_level)
    key_fast_switch.num                      0x20000261   Data           1  app.o(.bss.key_fast_switch.num)
    [Anonymous Symbol]                       0x20000261   Section        0  app.o(.bss.key_fast_switch.num)
    key_fast_switch.timer                    0x20000262   Data           2  app.o(.bss.key_fast_switch.timer)
    [Anonymous Symbol]                       0x20000262   Section        0  app.o(.bss.key_fast_switch.timer)
    portA_plug_check.cnt                     0x20000264   Data           1  app.o(.bss.portA_plug_check.cnt)
    [Anonymous Symbol]                       0x20000264   Section        0  app.o(.bss.portA_plug_check.cnt)
    sleep_control.delay                      0x200002b6   Data           2  app.o(.bss.sleep_control.delay)
    [Anonymous Symbol]                       0x200002b6   Section        0  app.o(.bss.sleep_control.delay)
    sys_switch_check.key2_high_cnt           0x200002b8   Data           1  app.o(.bss.sys_switch_check.key2_high_cnt)
    [Anonymous Symbol]                       0x200002b8   Section        0  app.o(.bss.sys_switch_check.key2_high_cnt)
    sys_switch_check.key2_low_cnt            0x200002b9   Data           1  app.o(.bss.sys_switch_check.key2_low_cnt)
    [Anonymous Symbol]                       0x200002b9   Section        0  app.o(.bss.sys_switch_check.key2_low_cnt)
    STACK                                    0x200002c0   Section     2048  startup_cs32f103xb.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_cs32f103xb.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_cs32f103xb.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_cs32f103xb.o(RESET)
    __main                                   0x080000ed   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000ed   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000f1   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000f5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000f5   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000f5   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000f5   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000fd   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000fd   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x08000101   Thumb Code     8  startup_cs32f103xb.o(.text)
    ADC1_2_IRQHandler                        0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    CAN1_RX1_IRQHandler                      0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    CAN1_SCE_IRQHandler                      0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel2_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel3_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel4_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel5_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel6_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel7_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    EXTI0_IRQHandler                         0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    EXTI15_10_IRQHandler                     0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    EXTI2_IRQHandler                         0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    EXTI3_IRQHandler                         0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    EXTI9_5_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    FLASH_IRQHandler                         0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    I2C1_ER_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    I2C1_EV_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    I2C2_ER_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    I2C2_EV_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    PVD_IRQHandler                           0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    RCU_IRQHandler                           0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    RTCAlarm_IRQHandler                      0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    RTC_IRQHandler                           0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    SPI1_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    SPI2_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TAMPER_IRQHandler                        0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM1_BRK_IRQHandler                      0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM1_CC_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM2_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM3_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM4_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    USART1_IRQHandler                        0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    USART2_IRQHandler                        0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    USBWakeUp_IRQHandler                     0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    WWDT_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    __aeabi_uldivmod                         0x08000125   Thumb Code    98  uldiv.o(.text)
    __aeabi_fadd                             0x08000187   Thumb Code   164  fadd.o(.text)
    __aeabi_fsub                             0x0800022b   Thumb Code     6  fadd.o(.text)
    __aeabi_frsub                            0x08000231   Thumb Code     6  fadd.o(.text)
    __aeabi_fmul                             0x08000237   Thumb Code   100  fmul.o(.text)
    __aeabi_fdiv                             0x0800029b   Thumb Code   124  fdiv.o(.text)
    __aeabi_dmul                             0x08000317   Thumb Code   228  dmul.o(.text)
    __aeabi_ddiv                             0x080003fb   Thumb Code   222  ddiv.o(.text)
    __aeabi_i2f                              0x080004d9   Thumb Code    18  fflti.o(.text)
    __aeabi_i2d                              0x080004eb   Thumb Code    34  dflti.o(.text)
    __aeabi_f2iz                             0x0800050d   Thumb Code    50  ffixi.o(.text)
    __aeabi_d2iz                             0x0800053f   Thumb Code    62  dfixi.o(.text)
    __aeabi_llsl                             0x0800057d   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x0800057d   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x0800059b   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x0800059b   Thumb Code     0  llushr.o(.text)
    __I$use$fp                               0x080005bb   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x080005bb   Thumb Code    18  fepilogue.o(.text)
    _float_epilogue                          0x080005cd   Thumb Code    92  fepilogue.o(.text)
    _double_round                            0x08000629   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x08000647   Thumb Code   156  depilogue.o(.text)
    __scatterload                            0x080006e5   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x080006e5   Thumb Code     0  init.o(.text)
    __decompress                             0x08000715   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x08000715   Thumb Code    86  __dczerorl2.o(.text)
    BusFault_Handler                         0x0800076d   Thumb Code     2  cs32f10x_it.o(.text.BusFault_Handler)
    DebugMon_Handler                         0x08000771   Thumb Code     2  cs32f10x_it.o(.text.DebugMon_Handler)
    EXTI1_IRQHandler                         0x08000775   Thumb Code    20  cs32f10x_it.o(.text.EXTI1_IRQHandler)
    EXTI4_IRQHandler                         0x08000789   Thumb Code    46  cs32f10x_it.o(.text.EXTI4_IRQHandler)
    HardFault_Handler                        0x080007b9   Thumb Code     2  cs32f10x_it.o(.text.HardFault_Handler)
    MemManage_Handler                        0x080007bd   Thumb Code     2  cs32f10x_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x080007c1   Thumb Code     2  cs32f10x_it.o(.text.NMI_Handler)
    PendSV_Handler                           0x080007c5   Thumb Code     2  cs32f10x_it.o(.text.PendSV_Handler)
    ProcessData1                             0x080007c9   Thumb Code   278  queue.o(.text.ProcessData1)
    SVC_Handler                              0x080008e1   Thumb Code     2  cs32f10x_it.o(.text.SVC_Handler)
    SysTick_Handler                          0x080008e5   Thumb Code    28  cs32f10x_it.o(.text.SysTick_Handler)
    SystemInit                               0x08000901   Thumb Code   274  system_cs32f10x.o(.text.SystemInit)
    TIM1_UP_IRQHandler                       0x08000a15   Thumb Code    34  cs32f10x_it.o(.text.TIM1_UP_IRQHandler)
    Task_Marks_Handler_Callback              0x08000a39   Thumb Code    66  task.o(.text.Task_Marks_Handler_Callback)
    Task_Pro_Handler_Callback                0x08000a7d   Thumb Code    70  task.o(.text.Task_Pro_Handler_Callback)
    USART3_IRQHandler                        0x08000ac5   Thumb Code    38  cs32f10x_it.o(.text.USART3_IRQHandler)
    UsageFault_Handler                       0x08000aed   Thumb Code     2  cs32f10x_it.o(.text.UsageFault_Handler)
    adc_init                                 0x08000af1   Thumb Code    80  cs32f10x_adc.o(.text.adc_init)
    adc_init_                                0x08000b41   Thumb Code   230  adc.o(.text.adc_init_)
    adc_regular_channel_config               0x08000c29   Thumb Code    96  cs32f10x_adc.o(.text.adc_regular_channel_config)
    adc_struct_init                          0x08000c89   Thumb Code    18  cs32f10x_adc.o(.text.adc_struct_init)
    app_led_control                          0x08000c9d   Thumb Code   316  app.o(.text.app_led_control)
    app_power_sw_contorl                     0x08000de9   Thumb Code   120  app.o(.text.app_power_sw_contorl)
    app_temperature_protect                  0x08000e61   Thumb Code   340  app.o(.text.app_temperature_protect)
    app_usba_control_protect                 0x08000fb5   Thumb Code   460  app.o(.text.app_usba_control_protect)
    circ_buffer_push                         0x08001181   Thumb Code    50  queue.o(.text.circ_buffer_push)
    cmd_g020_get                             0x080011b5   Thumb Code    12  communication.o(.text.cmd_g020_get)
    cmd_g020_write                           0x080011c1   Thumb Code    12  communication.o(.text.cmd_g020_write)
    coulomp_calc                             0x080011cd   Thumb Code   318  coulomp.o(.text.coulomp_calc)
    deinit_befor_sleep                       0x0800130d   Thumb Code    42  init.o(.text.deinit_befor_sleep)
    eta_driver                               0x08001339   Thumb Code    36  app.o(.text.eta_driver)
    exti_init                                0x0800135d   Thumb Code   104  init.o(.text.exti_init)
    f_led_alloff                             0x080013c5   Thumb Code    68  led.o(.text.f_led_alloff)
    f_led_charge                             0x08001419   Thumb Code    92  led.o(.text.f_led_charge)
    f_led_discharge                          0x08001485   Thumb Code    92  led.o(.text.f_led_discharge)
    f_led_err                                0x080014f1   Thumb Code    92  led.o(.text.f_led_err)
    f_led_health                             0x08001559   Thumb Code    72  led.o(.text.f_led_health)
    f_led_port_normal                        0x080015b1   Thumb Code    68  led.o(.text.f_led_port_normal)
    f_led_port_warning                       0x08001609   Thumb Code   180  led.o(.text.f_led_port_warning)
    f_led_show_battery                       0x08001731   Thumb Code    72  led.o(.text.f_led_show_battery)
    f_led_warning                            0x0800178d   Thumb Code    72  led.o(.text.f_led_warning)
    f_uaba_close                             0x080017e5   Thumb Code    80  app.o(.text.f_uaba_close)
    f_uaba_fault_ov                          0x08001845   Thumb Code    60  app.o(.text.f_uaba_fault_ov)
    f_uaba_open                              0x08001891   Thumb Code    80  app.o(.text.f_uaba_open)
    fputc                                    0x080018ed   Thumb Code    24  init.o(.text.fputc)
    gpio_exti_pin_config                     0x08001905   Thumb Code    54  cs32f10x_gpio.o(.text.gpio_exti_pin_config)
    gpio_mode_config                         0x0800193d   Thumb Code   190  cs32f10x_gpio.o(.text.gpio_mode_config)
    gpio_pin_remap_config                    0x080019fd   Thumb Code    24  cs32f10x_gpio.o(.text.gpio_pin_remap_config)
    health_init                              0x08001a15   Thumb Code    14  bathealth.o(.text.health_init)
    i2c_init_2                               0x08001a25   Thumb Code    56  iic.o(.text.i2c_init_2)
    init_after_sleep                         0x08001a5d   Thumb Code   210  init.o(.text.init_after_sleep)
    io_sleep_conf                            0x08001b31   Thumb Code   608  init.o(.text.io_sleep_conf)
    key_init                                 0x08001d91   Thumb Code    74  key.o(.text.key_init)
    led_bat_show                             0x08001ddd   Thumb Code  1022  led.o(.text.led_bat_show)
    led_init                                 0x080021dd   Thumb Code   300  led.o(.text.led_init)
    led_port_show                            0x08002309   Thumb Code   292  led.o(.text.led_port_show)
    led_pwm_control                          0x0800242d   Thumb Code   174  led.o(.text.led_pwm_control)
    log_init                                 0x080024dd   Thumb Code   104  init.o(.text.log_init)
    main                                     0x08002545   Thumb Code   140  main.o(.text.main)
    nvic_configuration                       0x080025dd   Thumb Code    74  init.o(.text.nvic_configuration)
    nvic_init                                0x08002629   Thumb Code    50  cs32f10x_misc.o(.text.nvic_init)
    nvic_priority_group_config               0x0800265d   Thumb Code    20  cs32f10x_misc.o(.text.nvic_priority_group_config)
    other_io_init                            0x08002671   Thumb Code   144  init.o(.text.other_io_init)
    pmu_stop_mode_enter                      0x08002701   Thumb Code    62  cs32f10x_pmu.o(.text.pmu_stop_mode_enter)
    rcu_adcclk_config                        0x08002741   Thumb Code    20  cs32f10x_rcu.o(.text.rcu_adcclk_config)
    rcu_clk_freq_get                         0x08002755   Thumb Code   158  cs32f10x_rcu.o(.text.rcu_clk_freq_get)
    rcu_clkready_reset_flag_get              0x080027f5   Thumb Code    66  cs32f10x_rcu.o(.text.rcu_clkready_reset_flag_get)
    rcu_sysclk_config                        0x08002839   Thumb Code    20  cs32f10x_rcu.o(.text.rcu_sysclk_config)
    rcu_sysclk_src_get                       0x0800284d   Thumb Code    16  cs32f10x_rcu.o(.text.rcu_sysclk_src_get)
    sleep_control                            0x0800285d   Thumb Code   140  app.o(.text.sleep_control)
    task_adc                                 0x080028f9   Thumb Code   208  adc.o(.text.task_adc)
    task_app                                 0x080029c9   Thumb Code   446  app.o(.text.task_app)
    task_com_rx                              0x08002b89   Thumb Code    12  communication.o(.text.task_com_rx)
    task_com_tx                              0x08002b95   Thumb Code   204  communication.o(.text.task_com_tx)
    task_coulomp                             0x08002c61   Thumb Code    66  coulomp.o(.text.task_coulomp)
    task_debug                               0x08002ca5   Thumb Code   396  debug.o(.text.task_debug)
    task_health                              0x08002ebd   Thumb Code   104  bathealth.o(.text.task_health)
    task_key                                 0x08002f2d   Thumb Code   178  key.o(.text.task_key)
    task_led                                 0x08002fe1   Thumb Code    26  led.o(.text.task_led)
    tick_delay                               0x08002ffd   Thumb Code    20  app.o(.text.tick_delay)
    tick_init                                0x08003011   Thumb Code    70  init.o(.text.tick_init)
    tim_base_init                            0x08003059   Thumb Code    66  cs32f10x_tim.o(.text.tim_base_init)
    tim_init                                 0x0800309d   Thumb Code    88  init.o(.text.tim_init)
    uart_init                                0x080030f5   Thumb Code   116  init.o(.text.uart_init)
    usart_def_init                           0x08003169   Thumb Code   206  cs32f10x_usart.o(.text.usart_def_init)
    usart_init                               0x08003239   Thumb Code   114  cs32f10x_usart.o(.text.usart_init)
    __0printf$8                              0x080032ad   Thumb Code    22  printf8.o(i.__0printf$8)
    __1printf$8                              0x080032ad   Thumb Code     0  printf8.o(i.__0printf$8)
    __2printf                                0x080032ad   Thumb Code     0  printf8.o(i.__0printf$8)
    __scatterload_copy                       0x080032cd   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x080032db   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x080032dd   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    puts                                     0x08003751   Thumb Code    30  puts.o(i.puts)
    Region$$Table$$Base                      0x08003998   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080039b8   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    SystemCoreClock                          0x20000004   Data           4  system_cs32f10x.o(.data.SystemCoreClock)
    Tasks_Max                                0x20000074   Data           1  task.o(.data.Tasks_Max)
    led                                      0x20000078   Data          72  led.o(.data.led)
    p                                        0x200000c0   Data           8  debug.o(.data.p)
    pAPort                                   0x200000c8   Data           8  debug.o(.data.pAPort)
    pCPort                                   0x200000d0   Data          12  debug.o(.data.pCPort)
    pGPort                                   0x200000dc   Data          12  debug.o(.data.pGPort)
    pled                                     0x200000e8   Data          28  debug.o(.data.pled)
    pled2                                    0x20000104   Data           8  debug.o(.data.pled2)
    sys                                      0x2000010c   Data          60  app.o(.data.sys)
    voltage_soc_ranges                       0x20000148   Data         144  coulomp.o(.data.voltage_soc_ranges)
    CHG                                      0x200001d8   Data           1  bms.o(.bss.CHG)
    DSG                                      0x200001d9   Data           1  bms.o(.bss.DSG)
    PCHG                                     0x200001da   Data           1  bms.o(.bss.PCHG)
    PDSG                                     0x200001db   Data           1  bms.o(.bss.PDSG)
    Stack_Voltage                            0x20000212   Data           2  bms.o(.bss.Stack_Voltage)
    bms_tmp1                                 0x20000228   Data           2  bms_pro.o(.bss.bms_tmp1)
    bms_tmp2                                 0x2000022a   Data           2  bms_pro.o(.bss.bms_tmp2)
    bms_tmp3                                 0x2000022c   Data           2  bms_pro.o(.bss.bms_tmp3)
    bms_tmp4                                 0x2000022e   Data           2  bms_pro.o(.bss.bms_tmp4)
    cmd_g020                                 0x20000230   Data           1  communication.o(.bss.cmd_g020)
    coulomp                                  0x20000234   Data          12  coulomp.o(.bss.coulomp)
    field_Transmit                           0x20000240   Data           5  communication.o(.bss.field_Transmit)
    field_receive                            0x20000245   Data           4  communication.o(.bss.field_receive)
    health                                   0x20000250   Data           8  bathealth.o(.bss.health)
    key_cb                                   0x20000258   Data           8  key.o(.bss.key_cb)
    receive_ok                               0x20000265   Data           1  communication.o(.bss.receive_ok)
    rxBuffer                                 0x20000266   Data          52  queue.o(.bss.rxBuffer)
    rx_CB                                    0x2000029a   Data          28  communication.o(.bss.rx_CB)
    __initial_sp                             0x20000ac0   Data           0  startup_cs32f103xb.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00003b90, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x00003ab0])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000039b8, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO         1102    RESET               startup_cs32f103xb.o
    0x080000ec   0x080000ec   0x00000000   Code   RO         1122  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x080000ec   0x080000ec   0x00000004   Code   RO         1420    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x080000f0   0x080000f0   0x00000004   Code   RO         1423    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x080000f4   0x080000f4   0x00000000   Code   RO         1425    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x080000f4   0x080000f4   0x00000000   Code   RO         1427    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x080000f4   0x080000f4   0x00000008   Code   RO         1428    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x080000fc   0x080000fc   0x00000000   Code   RO         1430    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x080000fc   0x080000fc   0x00000000   Code   RO         1432    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x080000fc   0x080000fc   0x00000004   Code   RO         1421    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x08000100   0x08000100   0x00000024   Code   RO         1103    .text               startup_cs32f103xb.o
    0x08000124   0x08000124   0x00000062   Code   RO         1131    .text               mc_w.l(uldiv.o)
    0x08000186   0x08000186   0x000000b0   Code   RO         1400    .text               mf_w.l(fadd.o)
    0x08000236   0x08000236   0x00000064   Code   RO         1402    .text               mf_w.l(fmul.o)
    0x0800029a   0x0800029a   0x0000007c   Code   RO         1404    .text               mf_w.l(fdiv.o)
    0x08000316   0x08000316   0x000000e4   Code   RO         1406    .text               mf_w.l(dmul.o)
    0x080003fa   0x080003fa   0x000000de   Code   RO         1408    .text               mf_w.l(ddiv.o)
    0x080004d8   0x080004d8   0x00000012   Code   RO         1410    .text               mf_w.l(fflti.o)
    0x080004ea   0x080004ea   0x00000022   Code   RO         1412    .text               mf_w.l(dflti.o)
    0x0800050c   0x0800050c   0x00000032   Code   RO         1416    .text               mf_w.l(ffixi.o)
    0x0800053e   0x0800053e   0x0000003e   Code   RO         1418    .text               mf_w.l(dfixi.o)
    0x0800057c   0x0800057c   0x0000001e   Code   RO         1446    .text               mc_w.l(llshl.o)
    0x0800059a   0x0800059a   0x00000020   Code   RO         1448    .text               mc_w.l(llushr.o)
    0x080005ba   0x080005ba   0x00000000   Code   RO         1450    .text               mc_w.l(iusefp.o)
    0x080005ba   0x080005ba   0x0000006e   Code   RO         1451    .text               mf_w.l(fepilogue.o)
    0x08000628   0x08000628   0x000000ba   Code   RO         1453    .text               mf_w.l(depilogue.o)
    0x080006e2   0x080006e2   0x00000002   PAD
    0x080006e4   0x080006e4   0x00000030   Code   RO         1461    .text               mc_w.l(init.o)
    0x08000714   0x08000714   0x00000056   Code   RO         1473    .text               mc_w.l(__dczerorl2.o)
    0x0800076a   0x0800076a   0x00000002   PAD
    0x0800076c   0x0800076c   0x00000002   Code   RO           24    .text.BusFault_Handler  cs32f10x_it.o
    0x0800076e   0x0800076e   0x00000002   PAD
    0x08000770   0x08000770   0x00000002   Code   RO           30    .text.DebugMon_Handler  cs32f10x_it.o
    0x08000772   0x08000772   0x00000002   PAD
    0x08000774   0x08000774   0x00000014   Code   RO           42    .text.EXTI1_IRQHandler  cs32f10x_it.o
    0x08000788   0x08000788   0x0000002e   Code   RO           40    .text.EXTI4_IRQHandler  cs32f10x_it.o
    0x080007b6   0x080007b6   0x00000002   PAD
    0x080007b8   0x080007b8   0x00000002   Code   RO           20    .text.HardFault_Handler  cs32f10x_it.o
    0x080007ba   0x080007ba   0x00000002   PAD
    0x080007bc   0x080007bc   0x00000002   Code   RO           22    .text.MemManage_Handler  cs32f10x_it.o
    0x080007be   0x080007be   0x00000002   PAD
    0x080007c0   0x080007c0   0x00000002   Code   RO           18    .text.NMI_Handler   cs32f10x_it.o
    0x080007c2   0x080007c2   0x00000002   PAD
    0x080007c4   0x080007c4   0x00000002   Code   RO           32    .text.PendSV_Handler  cs32f10x_it.o
    0x080007c6   0x080007c6   0x00000002   PAD
    0x080007c8   0x080007c8   0x00000116   Code   RO          421    .text.ProcessData1  queue.o
    0x080008de   0x080008de   0x00000002   PAD
    0x080008e0   0x080008e0   0x00000002   Code   RO           28    .text.SVC_Handler   cs32f10x_it.o
    0x080008e2   0x080008e2   0x00000002   PAD
    0x080008e4   0x080008e4   0x0000001c   Code   RO           34    .text.SysTick_Handler  cs32f10x_it.o
    0x08000900   0x08000900   0x00000112   Code   RO         1110    .text.SystemInit    system_cs32f10x.o
    0x08000a12   0x08000a12   0x00000002   PAD
    0x08000a14   0x08000a14   0x00000022   Code   RO           38    .text.TIM1_UP_IRQHandler  cs32f10x_it.o
    0x08000a36   0x08000a36   0x00000002   PAD
    0x08000a38   0x08000a38   0x00000042   Code   RO          439    .text.Task_Marks_Handler_Callback  task.o
    0x08000a7a   0x08000a7a   0x00000002   PAD
    0x08000a7c   0x08000a7c   0x00000046   Code   RO          441    .text.Task_Pro_Handler_Callback  task.o
    0x08000ac2   0x08000ac2   0x00000002   PAD
    0x08000ac4   0x08000ac4   0x00000026   Code   RO           36    .text.USART3_IRQHandler  cs32f10x_it.o
    0x08000aea   0x08000aea   0x00000002   PAD
    0x08000aec   0x08000aec   0x00000002   Code   RO           26    .text.UsageFault_Handler  cs32f10x_it.o
    0x08000aee   0x08000aee   0x00000002   PAD
    0x08000af0   0x08000af0   0x00000050   Code   RO          579    .text.adc_init      cs32f10x_adc.o
    0x08000b40   0x08000b40   0x000000e6   Code   RO           87    .text.adc_init_     adc.o
    0x08000c26   0x08000c26   0x00000002   PAD
    0x08000c28   0x08000c28   0x00000060   Code   RO          585    .text.adc_regular_channel_config  cs32f10x_adc.o
    0x08000c88   0x08000c88   0x00000012   Code   RO          581    .text.adc_struct_init  cs32f10x_adc.o
    0x08000c9a   0x08000c9a   0x00000002   PAD
    0x08000c9c   0x08000c9c   0x0000014c   Code   RO          115    .text.app_led_control  app.o
    0x08000de8   0x08000de8   0x00000078   Code   RO          121    .text.app_power_sw_contorl  app.o
    0x08000e60   0x08000e60   0x00000154   Code   RO          123    .text.app_temperature_protect  app.o
    0x08000fb4   0x08000fb4   0x000001cc   Code   RO          117    .text.app_usba_control_protect  app.o
    0x08001180   0x08001180   0x00000032   Code   RO          411    .text.circ_buffer_push  queue.o
    0x080011b2   0x080011b2   0x00000002   PAD
    0x080011b4   0x080011b4   0x0000000c   Code   RO          315    .text.cmd_g020_get  communication.o
    0x080011c0   0x080011c0   0x0000000c   Code   RO          313    .text.cmd_g020_write  communication.o
    0x080011cc   0x080011cc   0x0000013e   Code   RO          551    .text.coulomp_calc  coulomp.o
    0x0800130a   0x0800130a   0x00000002   PAD
    0x0800130c   0x0800130c   0x0000002a   Code   RO           75    .text.deinit_befor_sleep  init.o
    0x08001336   0x08001336   0x00000002   PAD
    0x08001338   0x08001338   0x00000024   Code   RO          131    .text.eta_driver    app.o
    0x0800135c   0x0800135c   0x00000068   Code   RO           69    .text.exti_init     init.o
    0x080013c4   0x080013c4   0x00000054   Code   RO          375    .text.f_led_alloff  led.o
    0x08001418   0x08001418   0x0000006c   Code   RO          371    .text.f_led_charge  led.o
    0x08001484   0x08001484   0x0000006c   Code   RO          369    .text.f_led_discharge  led.o
    0x080014f0   0x080014f0   0x00000068   Code   RO          379    .text.f_led_err     led.o
    0x08001558   0x08001558   0x00000058   Code   RO          373    .text.f_led_health  led.o
    0x080015b0   0x080015b0   0x00000058   Code   RO          381    .text.f_led_port_normal  led.o
    0x08001608   0x08001608   0x00000128   Code   RO          383    .text.f_led_port_warning  led.o
    0x08001730   0x08001730   0x0000005c   Code   RO          367    .text.f_led_show_battery  led.o
    0x0800178c   0x0800178c   0x00000058   Code   RO          377    .text.f_led_warning  led.o
    0x080017e4   0x080017e4   0x00000060   Code   RO          101    .text.f_uaba_close  app.o
    0x08001844   0x08001844   0x0000004c   Code   RO          103    .text.f_uaba_fault_ov  app.o
    0x08001890   0x08001890   0x0000005c   Code   RO           99    .text.f_uaba_open   app.o
    0x080018ec   0x080018ec   0x00000018   Code   RO           53    .text.fputc         init.o
    0x08001904   0x08001904   0x00000036   Code   RO          795    .text.gpio_exti_pin_config  cs32f10x_gpio.o
    0x0800193a   0x0800193a   0x00000002   PAD
    0x0800193c   0x0800193c   0x000000be   Code   RO          783    .text.gpio_mode_config  cs32f10x_gpio.o
    0x080019fa   0x080019fa   0x00000002   PAD
    0x080019fc   0x080019fc   0x00000018   Code   RO          793    .text.gpio_pin_remap_config  cs32f10x_gpio.o
    0x08001a14   0x08001a14   0x0000000e   Code   RO          564    .text.health_init   bathealth.o
    0x08001a22   0x08001a22   0x00000002   PAD
    0x08001a24   0x08001a24   0x00000038   Code   RO          463    .text.i2c_init_2    iic.o
    0x08001a5c   0x08001a5c   0x000000d2   Code   RO           77    .text.init_after_sleep  init.o
    0x08001b2e   0x08001b2e   0x00000002   PAD
    0x08001b30   0x08001b30   0x00000260   Code   RO           61    .text.io_sleep_conf  init.o
    0x08001d90   0x08001d90   0x0000004a   Code   RO          354    .text.key_init      key.o
    0x08001dda   0x08001dda   0x00000002   PAD
    0x08001ddc   0x08001ddc   0x000003fe   Code   RO          391    .text.led_bat_show  led.o
    0x080021da   0x080021da   0x00000002   PAD
    0x080021dc   0x080021dc   0x0000012c   Code   RO          387    .text.led_init      led.o
    0x08002308   0x08002308   0x00000124   Code   RO          393    .text.led_port_show  led.o
    0x0800242c   0x0800242c   0x000000ae   Code   RO          395    .text.led_pwm_control  led.o
    0x080024da   0x080024da   0x00000002   PAD
    0x080024dc   0x080024dc   0x00000068   Code   RO           51    .text.log_init      init.o
    0x08002544   0x08002544   0x00000098   Code   RO            2    .text.main          main.o
    0x080025dc   0x080025dc   0x0000004a   Code   RO           65    .text.nvic_configuration  init.o
    0x08002626   0x08002626   0x00000002   PAD
    0x08002628   0x08002628   0x00000032   Code   RO          843    .text.nvic_init     cs32f10x_misc.o
    0x0800265a   0x0800265a   0x00000002   PAD
    0x0800265c   0x0800265c   0x00000014   Code   RO          841    .text.nvic_priority_group_config  cs32f10x_misc.o
    0x08002670   0x08002670   0x00000090   Code   RO           59    .text.other_io_init  init.o
    0x08002700   0x08002700   0x0000003e   Code   RO          869    .text.pmu_stop_mode_enter  cs32f10x_pmu.o
    0x0800273e   0x0800273e   0x00000002   PAD
    0x08002740   0x08002740   0x00000014   Code   RO          907    .text.rcu_adcclk_config  cs32f10x_rcu.o
    0x08002754   0x08002754   0x0000009e   Code   RO          915    .text.rcu_clk_freq_get  cs32f10x_rcu.o
    0x080027f2   0x080027f2   0x00000002   PAD
    0x080027f4   0x080027f4   0x00000042   Code   RO          913    .text.rcu_clkready_reset_flag_get  cs32f10x_rcu.o
    0x08002836   0x08002836   0x00000002   PAD
    0x08002838   0x08002838   0x00000014   Code   RO          897    .text.rcu_sysclk_config  cs32f10x_rcu.o
    0x0800284c   0x0800284c   0x00000010   Code   RO          899    .text.rcu_sysclk_src_get  cs32f10x_rcu.o
    0x0800285c   0x0800285c   0x0000009c   Code   RO          127    .text.sleep_control  app.o
    0x080028f8   0x080028f8   0x000000d0   Code   RO           89    .text.task_adc      adc.o
    0x080029c8   0x080029c8   0x000001be   Code   RO          107    .text.task_app      app.o
    0x08002b86   0x08002b86   0x00000002   PAD
    0x08002b88   0x08002b88   0x0000000c   Code   RO          311    .text.task_com_rx   communication.o
    0x08002b94   0x08002b94   0x000000cc   Code   RO          317    .text.task_com_tx   communication.o
    0x08002c60   0x08002c60   0x00000042   Code   RO          549    .text.task_coulomp  coulomp.o
    0x08002ca2   0x08002ca2   0x00000002   PAD
    0x08002ca4   0x08002ca4   0x00000218   Code   RO          338    .text.task_debug    debug.o
    0x08002ebc   0x08002ebc   0x00000070   Code   RO          566    .text.task_health   bathealth.o
    0x08002f2c   0x08002f2c   0x000000b2   Code   RO          356    .text.task_key      key.o
    0x08002fde   0x08002fde   0x00000002   PAD
    0x08002fe0   0x08002fe0   0x0000001a   Code   RO          389    .text.task_led      led.o
    0x08002ffa   0x08002ffa   0x00000002   PAD
    0x08002ffc   0x08002ffc   0x00000014   Code   RO          135    .text.tick_delay    app.o
    0x08003010   0x08003010   0x00000046   Code   RO           63    .text.tick_init     init.o
    0x08003056   0x08003056   0x00000002   PAD
    0x08003058   0x08003058   0x00000042   Code   RO          961    .text.tim_base_init  cs32f10x_tim.o
    0x0800309a   0x0800309a   0x00000002   PAD
    0x0800309c   0x0800309c   0x00000058   Code   RO           67    .text.tim_init      init.o
    0x080030f4   0x080030f4   0x00000074   Code   RO           57    .text.uart_init     init.o
    0x08003168   0x08003168   0x000000ce   Code   RO         1041    .text.usart_def_init  cs32f10x_usart.o
    0x08003236   0x08003236   0x00000002   PAD
    0x08003238   0x08003238   0x00000072   Code   RO         1043    .text.usart_init    cs32f10x_usart.o
    0x080032aa   0x080032aa   0x00000002   PAD
    0x080032ac   0x080032ac   0x00000020   Code   RO         1346    i.__0printf$8       mc_w.l(printf8.o)
    0x080032cc   0x080032cc   0x0000000e   Code   RO         1467    i.__scatterload_copy  mc_w.l(handlers.o)
    0x080032da   0x080032da   0x00000002   Code   RO         1468    i.__scatterload_null  mc_w.l(handlers.o)
    0x080032dc   0x080032dc   0x0000000e   Code   RO         1469    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x080032ea   0x080032ea   0x00000002   PAD
    0x080032ec   0x080032ec   0x00000410   Code   RO         1353    i._printf_core      mc_w.l(printf8.o)
    0x080036fc   0x080036fc   0x00000024   Code   RO         1354    i._printf_post_padding  mc_w.l(printf8.o)
    0x08003720   0x08003720   0x0000002e   Code   RO         1355    i._printf_pre_padding  mc_w.l(printf8.o)
    0x0800374e   0x0800374e   0x00000002   PAD
    0x08003750   0x08003750   0x00000024   Code   RO         1125    i.puts              mc_w.l(puts.o)
    0x08003774   0x08003774   0x00000004   Data   RO          918    .rodata.ADC_pdiv_table  cs32f10x_rcu.o
    0x08003778   0x08003778   0x00000010   Data   RO          917    .rodata.APBAHB_pdiv_table  cs32f10x_rcu.o
    0x08003788   0x08003788   0x00000040   Data   RO          149    .rodata.str1.1      app.o
    0x080037c8   0x080037c8   0x000001a6   Data   RO          340    .rodata.str1.1      debug.o
    0x0800396e   0x0800396e   0x0000000e   Data   RO          400    .rodata.str1.1      led.o
    0x0800397c   0x0800397c   0x00000012   Data   RO          430    .rodata.str1.1      queue.o
    0x0800398e   0x0800398e   0x00000009   Data   RO          554    .rodata.str1.1      coulomp.o
    0x08003997   0x08003997   0x00000001   PAD
    0x08003998   0x08003998   0x00000020   Data   RO         1466    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x080039b8, Size: 0x00000ac0, Max: 0x00005000, ABSOLUTE, COMPRESSED[0x000000f8])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW         1434    .data               mc_w.l(stdout.o)
    0x20000004   COMPRESSED   0x00000004   Data   RW         1114    .data.SystemCoreClock  system_cs32f10x.o
    0x20000008   COMPRESSED   0x0000006c   Data   RW          444    .data.Task_Comps    task.o
    0x20000074   COMPRESSED   0x00000001   Data   RW          443    .data.Tasks_Max     task.o
    0x20000075   COMPRESSED   0x00000003   PAD
    0x20000078   COMPRESSED   0x00000048   Data   RW          399    .data.led           led.o
    0x200000c0   COMPRESSED   0x00000008   Data   RW          341    .data.p             debug.o
    0x200000c8   COMPRESSED   0x00000008   Data   RW          344    .data.pAPort        debug.o
    0x200000d0   COMPRESSED   0x0000000c   Data   RW          342    .data.pCPort        debug.o
    0x200000dc   COMPRESSED   0x0000000c   Data   RW          343    .data.pGPort        debug.o
    0x200000e8   COMPRESSED   0x0000001c   Data   RW          345    .data.pled          debug.o
    0x20000104   COMPRESSED   0x00000008   Data   RW          346    .data.pled2         debug.o
    0x2000010c   COMPRESSED   0x0000003c   Data   RW          139    .data.sys           app.o
    0x20000148   COMPRESSED   0x00000090   Data   RW          555    .data.voltage_soc_ranges  coulomp.o
    0x200001d8        -       0x00000001   Zero   RW          275    .bss.CHG            bms.o
    0x200001d9        -       0x00000001   Zero   RW          274    .bss.DSG            bms.o
    0x200001da        -       0x00000001   Zero   RW          276    .bss.PCHG           bms.o
    0x200001db        -       0x00000001   Zero   RW          277    .bss.PDSG           bms.o
    0x200001dc        -       0x00000032   Zero   RW          426    .bss.ProcessData1.packet  queue.o
    0x2000020e        -       0x00000002   Zero   RW          427    .bss.ProcessData1.packetIndex  queue.o
    0x20000210        -       0x00000001   Zero   RW          428    .bss.ProcessData1.receive_status  queue.o
    0x20000211   COMPRESSED   0x00000001   PAD
    0x20000212        -       0x00000002   Zero   RW          261    .bss.Stack_Voltage  bms.o
    0x20000214        -       0x00000001   Zero   RW          145    .bss.app_led_control.err_mode  app.o
    0x20000215        -       0x00000001   Zero   RW          150    .bss.app_power_rank_contorl.cnt  app.o
    0x20000216        -       0x00000002   Zero   RW          151    .bss.app_temperature_protect.rep.0  app.o
    0x20000218        -       0x00000002   Zero   RW          152    .bss.app_temperature_protect.rep.1  app.o
    0x2000021a        -       0x00000002   Zero   RW          153    .bss.app_temperature_protect.rep.2  app.o
    0x2000021c        -       0x00000002   Zero   RW          154    .bss.app_temperature_protect.rep.3  app.o
    0x2000021e        -       0x00000001   Zero   RW          147    .bss.app_usba_control_protect.oc_cnt  app.o
    0x2000021f   COMPRESSED   0x00000001   PAD
    0x20000220        -       0x00000004   Zero   RW          148    .bss.app_usba_control_protect.recover_cnt  app.o
    0x20000224        -       0x00000004   Zero   RW          146    .bss.app_usba_control_protect.small_cur_cnt  app.o
    0x20000228        -       0x00000002   Zero   RW          507    .bss.bms_tmp1       bms_pro.o
    0x2000022a        -       0x00000002   Zero   RW          503    .bss.bms_tmp2       bms_pro.o
    0x2000022c        -       0x00000002   Zero   RW          504    .bss.bms_tmp3       bms_pro.o
    0x2000022e        -       0x00000002   Zero   RW          520    .bss.bms_tmp4       bms_pro.o
    0x20000230        -       0x00000001   Zero   RW          325    .bss.cmd_g020       communication.o
    0x20000231   COMPRESSED   0x00000003   PAD
    0x20000234        -       0x0000000c   Zero   RW          553    .bss.coulomp        coulomp.o
    0x20000240        -       0x00000005   Zero   RW          326    .bss.field_Transmit  communication.o
    0x20000245        -       0x00000004   Zero   RW          329    .bss.field_receive  communication.o
    0x20000249   COMPRESSED   0x00000007   PAD
    0x20000250        -       0x00000008   Zero   RW          570    .bss.health         bathealth.o
    0x20000258        -       0x00000008   Zero   RW          358    .bss.key_cb         key.o
    0x20000260        -       0x00000001   Zero   RW          140    .bss.key_fast_switch.last_level  app.o
    0x20000261        -       0x00000001   Zero   RW          141    .bss.key_fast_switch.num  app.o
    0x20000262        -       0x00000002   Zero   RW          142    .bss.key_fast_switch.timer  app.o
    0x20000264        -       0x00000001   Zero   RW          159    .bss.portA_plug_check.cnt  app.o
    0x20000265        -       0x00000001   Zero   RW          324    .bss.receive_ok     communication.o
    0x20000266        -       0x00000034   Zero   RW          429    .bss.rxBuffer       queue.o
    0x2000029a        -       0x0000001c   Zero   RW          323    .bss.rx_CB          communication.o
    0x200002b6        -       0x00000002   Zero   RW          155    .bss.sleep_control.delay  app.o
    0x200002b8        -       0x00000001   Zero   RW          143    .bss.sys_switch_check.key2_high_cnt  app.o
    0x200002b9        -       0x00000001   Zero   RW          144    .bss.sys_switch_check.key2_low_cnt  app.o
    0x200002ba   COMPRESSED   0x00000006   PAD
    0x200002c0        -       0x00000800   Zero   RW         1100    STACK               startup_cs32f103xb.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       438          0          0          0          0       2247   adc.o
      2174         76         64         60         28       9397   app.o
       126          8          0          0          8       1469   bathealth.o
         0          0          0          0          6      19856   bms.o
         0          0          0          0          8       3912   bms_pro.o
       240          0          0          0         39       4103   communication.o
       384          0          9        144         12       3126   coulomp.o
       194          0          0          0          0       3975   cs32f10x_adc.o
       268          0          0          0          0       3526   cs32f10x_gpio.o
       182          0          0          0          0       3815   cs32f10x_it.o
        70          0          0          0          0       3603   cs32f10x_misc.o
        62          0          0          0          0       3619   cs32f10x_pmu.o
       280          0         20          0          0       4969   cs32f10x_rcu.o
        66          0          0          0          0      11855   cs32f10x_tim.o
       320          0          0          0          0       4717   cs32f10x_usart.o
       536        140        422         76          0       2239   debug.o
        56          0          0          0          0      11708   iic.o
      1584          0          0          0          0       8482   init.o
       252          0          0          0          8       2145   key.o
      2870        338         14         72          0       8196   led.o
       152         12          0          0          0       1744   main.o
       328          0         18          0        105       3692   queue.o
        36          8        236          0       2048        840   startup_cs32f103xb.o
       274          0          0          4          0       2961   system_cs32f10x.o
       136          0          0        109          0       1141   task.o

    ----------------------------------------------------------------------
     11108        582        816        468       2280     127337   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        80          0          1          3         18          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        86          0          0          0          0          0   __dczerorl2.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
      1154         54          0          0          0        352   printf8.o
        36          6          0          0          0         80   puts.o
         0          0          0          4          0          0   stdout.o
        98          0          0          0          0         92   uldiv.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        62          0          0          0          0         80   dfixi.o
        34          0          0          0          0         76   dflti.o
       228          0          0          0          0         96   dmul.o
       176          0          0          0          0        140   fadd.o
       124          0          0          0          0         88   fdiv.o
       110          0          0          0          0        168   fepilogue.o
        50          0          0          0          0         68   ffixi.o
        18          0          0          0          0         68   fflti.o
       100          0          0          0          0         76   fmul.o

    ----------------------------------------------------------------------
      2852         78          0          4          0       1864   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1534         78          0          4          0        728   mc_w.l
      1310          0          0          0          0       1136   mf_w.l

    ----------------------------------------------------------------------
      2852         78          0          4          0       1864   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     13960        660        816        472       2280     128129   Grand Totals
     13960        660        816        248       2280     128129   ELF Image Totals (compressed)
     13960        660        816        248          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                14776 (  14.43kB)
    Total RW  Size (RW Data + ZI Data)              2752 (   2.69kB)
    Total ROM Size (Code + RO Data + RW Data)      15024 (  14.67kB)

==============================================================================

