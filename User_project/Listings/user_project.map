Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    main.o(.text.main) refers to main.o(.text.delay) for delay
    main.o(.text.main) refers to init.o(.text.tick_init) for tick_init
    main.o(.text.main) refers to init.o(.text.uart_init) for uart_init
    main.o(.text.main) refers to init.o(.text.log_init) for log_init
    main.o(.text.main) refers to key.o(.text.key_init) for key_init
    main.o(.text.main) refers to adc.o(.text.adc_init_) for adc_init_
    main.o(.text.main) refers to init.o(.text.tim_init) for tim_init
    main.o(.text.main) refers to iic.o(.text.i2c_init_2) for i2c_init_2
    main.o(.text.main) refers to bms.o(.text.bms_init) for bms_init
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to printfa.o(i.__0printf) for printf
    main.o(.text.main) refers to init.o(.text.other_io_init) for other_io_init
    main.o(.text.main) refers to led.o(.text.led_init) for led_init
    main.o(.text.main) refers to init.o(.text.exti_init) for exti_init
    main.o(.text.main) refers to init.o(.text.nvic_configuration) for nvic_configuration
    main.o(.text.main) refers to cs32f10x_gpio.o(.text.gpio_pin_remap_config) for gpio_pin_remap_config
    main.o(.text.main) refers to app.o(.data.sys) for sys
    main.o(.text.main) refers to task.o(.text.Task_Pro_Handler_Callback) for Task_Pro_Handler_Callback
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.delay) refers to main.o(.text.delay) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.led1_toggle) refers to main.o(.text.led1_toggle) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.led2_toggle) refers to main.o(.text.led2_toggle) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.NMI_Handler) refers to cs32f10x_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.HardFault_Handler) refers to cs32f10x_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.MemManage_Handler) refers to cs32f10x_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.BusFault_Handler) refers to cs32f10x_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.UsageFault_Handler) refers to cs32f10x_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.SVC_Handler) refers to cs32f10x_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.DebugMon_Handler) refers to cs32f10x_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.ARM.exidx.text.PendSV_Handler) refers to cs32f10x_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.text.SysTick_Handler) refers to task.o(.text.Task_Marks_Handler_Callback) for Task_Marks_Handler_Callback
    cs32f10x_it.o(.ARM.exidx.text.SysTick_Handler) refers to cs32f10x_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cs32f10x_it.o(.text.USART3_IRQHandler) refers to queue.o(.bss.rxBuffer) for rxBuffer
    cs32f10x_it.o(.text.USART3_IRQHandler) refers to queue.o(.text.circ_buffer_push) for circ_buffer_push
    cs32f10x_it.o(.ARM.exidx.text.USART3_IRQHandler) refers to cs32f10x_it.o(.text.USART3_IRQHandler) for [Anonymous Symbol]
    cs32f10x_it.o(.text.TIM1_UP_IRQHandler) refers to led.o(.data.led) for led
    cs32f10x_it.o(.text.TIM1_UP_IRQHandler) refers to led.o(.text.led_pwm_control) for led_pwm_control
    cs32f10x_it.o(.ARM.exidx.text.TIM1_UP_IRQHandler) refers to cs32f10x_it.o(.text.TIM1_UP_IRQHandler) for [Anonymous Symbol]
    cs32f10x_it.o(.text.EXTI4_IRQHandler) refers to app.o(.data.sys) for sys
    cs32f10x_it.o(.ARM.exidx.text.EXTI4_IRQHandler) refers to cs32f10x_it.o(.text.EXTI4_IRQHandler) for [Anonymous Symbol]
    init.o(.text.log_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    init.o(.text.log_init) refers to cs32f10x_usart.o(.text.usart_init) for usart_init
    init.o(.ARM.exidx.text.log_init) refers to init.o(.text.log_init) for [Anonymous Symbol]
    init.o(.ARM.exidx.text.fputc) refers to init.o(.text.fputc) for [Anonymous Symbol]
    init.o(.ARM.exidx.text.fgetc) refers to init.o(.text.fgetc) for [Anonymous Symbol]
    init.o(.text.uart_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    init.o(.text.uart_init) refers to cs32f10x_usart.o(.text.usart_init) for usart_init
    init.o(.ARM.exidx.text.uart_init) refers to init.o(.text.uart_init) for [Anonymous Symbol]
    init.o(.text.other_io_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    init.o(.ARM.exidx.text.other_io_init) refers to init.o(.text.other_io_init) for [Anonymous Symbol]
    init.o(.text.tick_init) refers to system_cs32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    init.o(.text.tick_init) refers to init.o(.text.SysTick_Config) for SysTick_Config
    init.o(.ARM.exidx.text.tick_init) refers to init.o(.text.tick_init) for [Anonymous Symbol]
    init.o(.text.SysTick_Config) refers to init.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    init.o(.ARM.exidx.text.SysTick_Config) refers to init.o(.text.SysTick_Config) for [Anonymous Symbol]
    init.o(.text.nvic_configuration) refers to init.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    init.o(.text.nvic_configuration) refers to cs32f10x_misc.o(.text.nvic_init) for nvic_init
    init.o(.text.nvic_configuration) refers to cs32f10x_misc.o(.text.nvic_priority_group_config) for nvic_priority_group_config
    init.o(.ARM.exidx.text.nvic_configuration) refers to init.o(.text.nvic_configuration) for [Anonymous Symbol]
    init.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to init.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    init.o(.text.tim_init) refers to cs32f10x_tim.o(.text.tim_base_init) for tim_base_init
    init.o(.ARM.exidx.text.tim_init) refers to init.o(.text.tim_init) for [Anonymous Symbol]
    init.o(.text.exti_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    init.o(.text.exti_init) refers to cs32f10x_gpio.o(.text.gpio_exti_pin_config) for gpio_exti_pin_config
    init.o(.ARM.exidx.text.exti_init) refers to init.o(.text.exti_init) for [Anonymous Symbol]
    init.o(.ARM.exidx.text.__NVIC_SetPriority) refers to init.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    adc.o(.text.adc_init_) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    adc.o(.text.adc_init_) refers to cs32f10x_rcu.o(.text.rcu_adcclk_config) for rcu_adcclk_config
    adc.o(.text.adc_init_) refers to cs32f10x_adc.o(.text.adc_struct_init) for adc_struct_init
    adc.o(.text.adc_init_) refers to cs32f10x_adc.o(.text.adc_init) for adc_init
    adc.o(.text.adc_init_) refers to cs32f10x_adc.o(.text.adc_regular_channel_config) for adc_regular_channel_config
    adc.o(.ARM.exidx.text.adc_init_) refers to adc.o(.text.adc_init_) for [Anonymous Symbol]
    adc.o(.text.task_adc) refers to cs32f10x_adc.o(.text.adc_regular_channel_config) for adc_regular_channel_config
    adc.o(.text.task_adc) refers to app.o(.data.sys) for sys
    adc.o(.text.task_adc) refers to dflti.o(.text) for __aeabi_i2d
    adc.o(.text.task_adc) refers to ddiv.o(.text) for __aeabi_ddiv
    adc.o(.text.task_adc) refers to dmul.o(.text) for __aeabi_dmul
    adc.o(.text.task_adc) refers to dfixi.o(.text) for __aeabi_d2iz
    adc.o(.ARM.exidx.text.task_adc) refers to adc.o(.text.task_adc) for [Anonymous Symbol]
    app.o(.text.f_uaba_open) refers to app.o(.rodata.str1.1) for .L.str.1
    app.o(.text.f_uaba_open) refers to printfa.o(i.__0printf) for printf
    app.o(.text.f_uaba_open) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.f_uaba_open) refers to app.o(.text.f_uaba_open) for [Anonymous Symbol]
    app.o(.text.f_uaba_close) refers to app.o(.rodata.str1.1) for .L.str.1
    app.o(.text.f_uaba_close) refers to printfa.o(i.__0printf) for printf
    app.o(.text.f_uaba_close) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.f_uaba_close) refers to app.o(.text.f_uaba_close) for [Anonymous Symbol]
    app.o(.text.f_uaba_fault_ov) refers to app.o(.rodata.str1.1) for .L.str.1
    app.o(.text.f_uaba_fault_ov) refers to printfa.o(i.__0printf) for printf
    app.o(.text.f_uaba_fault_ov) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.f_uaba_fault_ov) refers to app.o(.text.f_uaba_fault_ov) for [Anonymous Symbol]
    app.o(.text.app_init) refers to app.o(.data.sys) for sys
    app.o(.text.app_init) refers to memseta.o(.text) for __aeabi_memclr4
    app.o(.ARM.exidx.text.app_init) refers to app.o(.text.app_init) for [Anonymous Symbol]
    app.o(.text.task_app) refers to app.o(.text.sys_switch_check) for sys_switch_check
    app.o(.text.task_app) refers to app.o(.text.sys_pow_on_off_deal) for sys_pow_on_off_deal
    app.o(.text.task_app) refers to app.o(.text.key_fast_switch) for key_fast_switch
    app.o(.text.task_app) refers to app.o(.text.led_app) for led_app
    app.o(.text.task_app) refers to app.o(.text.usba_app) for usba_app
    app.o(.ARM.exidx.text.task_app) refers to app.o(.text.task_app) for [Anonymous Symbol]
    app.o(.text.sys_switch_check) refers to app.o(.bss.sys_switch_check.key2_high_cnt) for sys_switch_check.key2_high_cnt
    app.o(.text.sys_switch_check) refers to app.o(.data.sys) for sys
    app.o(.text.sys_switch_check) refers to app.o(.bss.sys_switch_check.key2_low_cnt) for sys_switch_check.key2_low_cnt
    app.o(.ARM.exidx.text.sys_switch_check) refers to app.o(.text.sys_switch_check) for [Anonymous Symbol]
    app.o(.text.sys_pow_on_off_deal) refers to app.o(.data.sys) for sys
    app.o(.text.sys_pow_on_off_deal) refers to led.o(.data.led) for led
    app.o(.ARM.exidx.text.sys_pow_on_off_deal) refers to app.o(.text.sys_pow_on_off_deal) for [Anonymous Symbol]
    app.o(.text.key_fast_switch) refers to app.o(.bss.key_fast_switch.last_level) for key_fast_switch.last_level
    app.o(.text.key_fast_switch) refers to app.o(.bss.key_fast_switch.timer) for key_fast_switch.timer
    app.o(.text.key_fast_switch) refers to app.o(.bss.key_fast_switch.num) for key_fast_switch.num
    app.o(.text.key_fast_switch) refers to led.o(.data.led) for led
    app.o(.text.key_fast_switch) refers to app.o(.rodata.str1.1) for .L.str
    app.o(.text.key_fast_switch) refers to printfa.o(i.__0printf) for printf
    app.o(.ARM.exidx.text.key_fast_switch) refers to app.o(.text.key_fast_switch) for [Anonymous Symbol]
    app.o(.text.led_app) refers to app.o(.data.sys) for sys
    app.o(.text.led_app) refers to led.o(.data.led) for led
    app.o(.ARM.exidx.text.led_app) refers to app.o(.text.led_app) for [Anonymous Symbol]
    app.o(.text.usba_app) refers to app.o(.data.sys) for sys
    app.o(.text.usba_app) refers to app.o(.bss.usba_app.recover_cnt) for usba_app.recover_cnt
    app.o(.text.usba_app) refers to app.o(.text.portA_plug_check) for portA_plug_check
    app.o(.text.usba_app) refers to app.o(.bss.usba_app.oc_cnt) for usba_app.oc_cnt
    app.o(.text.usba_app) refers to app.o(.bss.usba_app.small_cur_cnt) for usba_app.small_cur_cnt
    app.o(.ARM.exidx.text.usba_app) refers to app.o(.text.usba_app) for [Anonymous Symbol]
    app.o(.text.portA_plug_check) refers to app.o(.bss.portA_plug_check.cnt) for portA_plug_check.cnt
    app.o(.ARM.exidx.text.portA_plug_check) refers to app.o(.text.portA_plug_check) for [Anonymous Symbol]
    app.o(.text.f_uaba_fault_oc) refers to app.o(.rodata.str1.1) for .L.str.1
    app.o(.text.f_uaba_fault_oc) refers to printfa.o(i.__0printf) for printf
    app.o(.text.f_uaba_fault_oc) refers to app.o(.data.sys) for sys
    app.o(.ARM.exidx.text.f_uaba_fault_oc) refers to app.o(.text.f_uaba_fault_oc) for [Anonymous Symbol]
    app.o(.data.sys) refers to app.o(.text.f_uaba_open) for f_uaba_open
    app.o(.data.sys) refers to app.o(.text.f_uaba_close) for f_uaba_close
    app.o(.data.sys) refers to app.o(.text.f_uaba_fault_ov) for f_uaba_fault_ov
    bms.o(.text.IIC_WriteData) refers to iic.o(.text.I2C_WriteMulti) for I2C_WriteMulti
    bms.o(.ARM.exidx.text.IIC_WriteData) refers to bms.o(.text.IIC_WriteData) for [Anonymous Symbol]
    bms.o(.text.IIC_ReadData) refers to iic.o(.text.I2C_ReadMulti) for I2C_ReadMulti
    bms.o(.ARM.exidx.text.IIC_ReadData) refers to bms.o(.text.IIC_ReadData) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.CopyArray) refers to bms.o(.text.CopyArray) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.Checksum) refers to bms.o(.text.Checksum) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.CRC8) refers to bms.o(.text.CRC8) for [Anonymous Symbol]
    bms.o(.text.I2C_WriteReg) refers to bms.o(.text.CRC8) for CRC8
    bms.o(.text.I2C_WriteReg) refers to bms.o(.text.IIC_WriteData) for IIC_WriteData
    bms.o(.ARM.exidx.text.I2C_WriteReg) refers to bms.o(.text.I2C_WriteReg) for [Anonymous Symbol]
    bms.o(.text.I2C_ReadReg) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms.o(.text.I2C_ReadReg) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.text.I2C_ReadReg) refers to bms.o(.text.IIC_ReadData) for IIC_ReadData
    bms.o(.text.I2C_ReadReg) refers to bms.o(.text.CRC8) for CRC8
    bms.o(.ARM.exidx.text.I2C_ReadReg) refers to bms.o(.text.I2C_ReadReg) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.delay_us_2ms) refers to bms.o(.text.delay_us_2ms) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_SetRegister) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.BQ769x2_SetRegister) refers to bms.o(.bss.u16_nack_flag) for u16_nack_flag
    bms.o(.text.BQ769x2_SetRegister) refers to bms.o(.text.delay_us_2ms) for delay_us_2ms
    bms.o(.text.BQ769x2_SetRegister) refers to bms.o(.text.Checksum) for Checksum
    bms.o(.ARM.exidx.text.BQ769x2_SetRegister) refers to bms.o(.text.BQ769x2_SetRegister) for [Anonymous Symbol]
    bms.o(.text.BMS_FET_ENABLE) refers to bms.o(.text.Subcommands) for Subcommands
    bms.o(.text.BMS_FET_ENABLE) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.text.BMS_FET_ENABLE) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.ARM.exidx.text.BMS_FET_ENABLE) refers to bms.o(.text.BMS_FET_ENABLE) for [Anonymous Symbol]
    bms.o(.text.Subcommands) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.Subcommands) refers to bms.o(.text.delay_us_2ms) for delay_us_2ms
    bms.o(.text.Subcommands) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.text.Subcommands) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.Subcommands) refers to bms.o(.text.Checksum) for Checksum
    bms.o(.ARM.exidx.text.Subcommands) refers to bms.o(.text.Subcommands) for [Anonymous Symbol]
    bms.o(.text.CommandSubcommands) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.ARM.exidx.text.CommandSubcommands) refers to bms.o(.text.CommandSubcommands) for [Anonymous Symbol]
    bms.o(.text.bms_init) refers to bms.o(.text.CommandSubcommands) for CommandSubcommands
    bms.o(.text.bms_init) refers to bms.o(.text.delay_us_2ms) for delay_us_2ms
    bms.o(.text.bms_init) refers to bms.o(.text.BQ769x2_Init) for BQ769x2_Init
    bms.o(.text.bms_init) refers to bms.o(.rodata.str1.1) for .L.str
    bms.o(.text.bms_init) refers to printfa.o(i.__0printf) for printf
    bms.o(.text.bms_init) refers to bms.o(.text.BMS_FET_ENABLE) for BMS_FET_ENABLE
    bms.o(.text.bms_init) refers to bms.o(.text.Subcommands) for Subcommands
    bms.o(.text.bms_init) refers to bms.o(.bss.write_nack) for write_nack
    bms.o(.text.bms_init) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.ARM.exidx.text.bms_init) refers to bms.o(.text.bms_init) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_Init) refers to bms.o(.text.turn_to_CFGUPDATE) for turn_to_CFGUPDATE
    bms.o(.text.BQ769x2_Init) refers to bms.o(.text.load_bms_init_array) for load_bms_init_array
    bms.o(.text.BQ769x2_Init) refers to bms.o(.data.bms_ccGain) for bms_ccGain
    bms.o(.text.BQ769x2_Init) refers to bms.o(.text.BQ769x2_SetRegister) for BQ769x2_SetRegister
    bms.o(.text.BQ769x2_Init) refers to bms.o(.data.bms_capGain) for bms_capGain
    bms.o(.text.BQ769x2_Init) refers to bms.o(.text.CommandSubcommands) for CommandSubcommands
    bms.o(.ARM.exidx.text.BQ769x2_Init) refers to bms.o(.text.BQ769x2_Init) for [Anonymous Symbol]
    bms.o(.text.read_data_cmd_long) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.text.read_data_cmd_long) refers to bms.o(.text.delay_us_2ms) for delay_us_2ms
    bms.o(.text.read_data_cmd_long) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.text.read_data_cmd_long) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.read_data_cmd_long) refers to bms.o(.text.read_data_cmd_long) for [Anonymous Symbol]
    bms.o(.text.DirectCommands) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.DirectCommands) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.text.DirectCommands) refers to bms.o(.text.delay_us_2ms) for delay_us_2ms
    bms.o(.text.DirectCommands) refers to bms.o(.text.I2C_WriteReg) for I2C_WriteReg
    bms.o(.ARM.exidx.text.DirectCommands) refers to bms.o(.text.DirectCommands) for [Anonymous Symbol]
    bms.o(.text.BSWBq769x2ReadBatteryStatus) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BSWBq769x2ReadBatteryStatus) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BSWBq769x2ReadBatteryStatus) refers to bms.o(.bss.write_res) for write_res
    bms.o(.ARM.exidx.text.BSWBq769x2ReadBatteryStatus) refers to bms.o(.text.BSWBq769x2ReadBatteryStatus) for [Anonymous Symbol]
    bms.o(.text.load_bms_init_array) refers to bms.o(.data.bms_init_array) for bms_init_array
    bms.o(.text.load_bms_init_array) refers to bms.o(.text.BQ769x2_SetRegister) for BQ769x2_SetRegister
    bms.o(.text.load_bms_init_array) refers to bms.o(.bss.u16_nack_flag) for u16_nack_flag
    bms.o(.ARM.exidx.text.load_bms_init_array) refers to bms.o(.text.load_bms_init_array) for [Anonymous Symbol]
    bms.o(.text.turn_to_CFGUPDATE) refers to bms.o(.text.CommandSubcommands) for CommandSubcommands
    bms.o(.text.turn_to_CFGUPDATE) refers to bms.o(.text.BSWBq769x2ReadBatteryStatus) for BSWBq769x2ReadBatteryStatus
    bms.o(.text.turn_to_CFGUPDATE) refers to bms.o(.bss.write_res) for write_res
    bms.o(.ARM.exidx.text.turn_to_CFGUPDATE) refers to bms.o(.text.turn_to_CFGUPDATE) for [Anonymous Symbol]
    bms.o(.text.set_low_cell_predsg) refers to bms.o(.text.turn_to_CFGUPDATE) for turn_to_CFGUPDATE
    bms.o(.text.set_low_cell_predsg) refers to bms.o(.text.BQ769x2_SetRegister) for BQ769x2_SetRegister
    bms.o(.text.set_low_cell_predsg) refers to bms.o(.text.CommandSubcommands) for CommandSubcommands
    bms.o(.ARM.exidx.text.set_low_cell_predsg) refers to bms.o(.text.set_low_cell_predsg) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.BQ769x2_DSG_OFF) refers to bms.o(.text.BQ769x2_DSG_OFF) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.BQ769x2_RESET_DSG_OFF) refers to bms.o(.text.BQ769x2_RESET_DSG_OFF) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.BQ769x2_CHG_OFF) refers to bms.o(.text.BQ769x2_CHG_OFF) for [Anonymous Symbol]
    bms.o(.ARM.exidx.text.BQ769x2_RESET_CHG_OFF) refers to bms.o(.text.BQ769x2_RESET_CHG_OFF) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.FET_Status) for FET_Status
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.DSG) for DSG
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.CHG) for CHG
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.PCHG) for PCHG
    bms.o(.text.BQ769x2_ReadFETStatus) refers to bms.o(.bss.PDSG) for PDSG
    bms.o(.ARM.exidx.text.BQ769x2_ReadFETStatus) refers to bms.o(.text.BQ769x2_ReadFETStatus) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadAlarmStatus) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadAlarmStatus) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.ARM.exidx.text.BQ769x2_ReadAlarmStatus) refers to bms.o(.text.BQ769x2_ReadAlarmStatus) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadAlarmRaw) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadAlarmRaw) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.ARM.exidx.text.BQ769x2_ReadAlarmRaw) refers to bms.o(.text.BQ769x2_ReadAlarmRaw) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.value_SafetyStatusA) for value_SafetyStatusA
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.UV_Fault) for UV_Fault
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.OV_Fault) for OV_Fault
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.SCD_Fault) for SCD_Fault
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.OCD_Fault) for OCD_Fault
    bms.o(.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.bss.OCC_Fault) for OCC_Fault
    bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusA) refers to bms.o(.text.BQ769x2_ReadSafetyStatusA) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadSafetyStatusB) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadSafetyStatusB) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms.o(.text.BQ769x2_ReadSafetyStatusB) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadSafetyStatusB) refers to bms.o(.bss.value_SafetyStatusB) for value_SafetyStatusB
    bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusB) refers to bms.o(.text.BQ769x2_ReadSafetyStatusB) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.value_SafetyStatusC) for value_SafetyStatusC
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.value_SafetyStatusA) for value_SafetyStatusA
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.value_SafetyStatusB) for value_SafetyStatusB
    bms.o(.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.bss.ProtectionsTriggered) for ProtectionsTriggered
    bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusC) refers to bms.o(.text.BQ769x2_ReadSafetyStatusC) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadPFStatusA) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadPFStatusA) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadPFStatusA) refers to bms.o(.bss.value_PFStatusA) for value_PFStatusA
    bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusA) refers to bms.o(.text.BQ769x2_ReadPFStatusA) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadPFStatusB) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadPFStatusB) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadPFStatusB) refers to bms.o(.bss.value_PFStatusB) for value_PFStatusB
    bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusB) refers to bms.o(.text.BQ769x2_ReadPFStatusB) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadPFStatusC) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadPFStatusC) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.text.BQ769x2_ReadPFStatusC) refers to bms.o(.bss.value_PFStatusC) for value_PFStatusC
    bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusC) refers to bms.o(.text.BQ769x2_ReadPFStatusC) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadVoltage) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadVoltage) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.ARM.exidx.text.BQ769x2_ReadVoltage) refers to bms.o(.text.BQ769x2_ReadVoltage) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to bms.o(.text.BQ769x2_ReadVoltage) for BQ769x2_ReadVoltage
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to bms.o(.bss.CellVoltage) for CellVoltage
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to bms.o(.bss.Stack_Voltage) for Stack_Voltage
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to bms.o(.bss.Pack_Voltage) for Pack_Voltage
    bms.o(.text.BQ769x2_ReadAllVoltages) refers to bms.o(.bss.LD_Voltage) for LD_Voltage
    bms.o(.ARM.exidx.text.BQ769x2_ReadAllVoltages) refers to bms.o(.text.BQ769x2_ReadAllVoltages) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_Read_Vcells_123) refers to bms.o(.bss.V_cells) for V_cells
    bms.o(.text.BQ769x2_Read_Vcells_123) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_123) refers to bms.o(.text.BQ769x2_Read_Vcells_123) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_Read_Vcells_5) refers to bms.o(.bss.V_cells) for V_cells
    bms.o(.text.BQ769x2_Read_Vcells_5) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_5) refers to bms.o(.text.BQ769x2_Read_Vcells_5) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_Read_Vcells_7) refers to bms.o(.bss.V_cells) for V_cells
    bms.o(.text.BQ769x2_Read_Vcells_7) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_7) refers to bms.o(.text.BQ769x2_Read_Vcells_7) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_Read_Vcells_9) refers to bms.o(.bss.V_cells) for V_cells
    bms.o(.text.BQ769x2_Read_Vcells_9) refers to bms.o(.text.I2C_ReadReg) for I2C_ReadReg
    bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_9) refers to bms.o(.text.BQ769x2_Read_Vcells_9) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadCurrent) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadCurrent) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.ARM.exidx.text.BQ769x2_ReadCurrent) refers to bms.o(.text.BQ769x2_ReadCurrent) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadTemperature) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms.o(.text.BQ769x2_ReadTemperature) refers to bms.o(.bss.RX_data) for RX_data
    bms.o(.ARM.exidx.text.BQ769x2_ReadTemperature) refers to bms.o(.text.BQ769x2_ReadTemperature) for [Anonymous Symbol]
    bms.o(.text.BQ769x2_ReadPassQ) refers to bms.o(.text.read_data_cmd_long) for read_data_cmd_long
    bms.o(.text.BQ769x2_ReadPassQ) refers to bms.o(.bss.RX_32Byte) for RX_32Byte
    bms.o(.text.BQ769x2_ReadPassQ) refers to bms.o(.bss.AccumulatedCharge_Int) for AccumulatedCharge_Int
    bms.o(.text.BQ769x2_ReadPassQ) refers to bms.o(.bss.AccumulatedCharge_Frac) for AccumulatedCharge_Frac
    bms.o(.text.BQ769x2_ReadPassQ) refers to bms.o(.bss.AccumulatedCharge_Time) for AccumulatedCharge_Time
    bms.o(.ARM.exidx.text.BQ769x2_ReadPassQ) refers to bms.o(.text.BQ769x2_ReadPassQ) for [Anonymous Symbol]
    communication.o(.text.task_com_rx) refers to queue.o(.bss.rxBuffer) for rxBuffer
    communication.o(.text.task_com_rx) refers to queue.o(.text.ProcessData1) for ProcessData1
    communication.o(.ARM.exidx.text.task_com_rx) refers to communication.o(.text.task_com_rx) for [Anonymous Symbol]
    communication.o(.text.task_com_tx) refers to communication.o(.bss.rx_CB) for rx_CB
    communication.o(.text.task_com_tx) refers to communication.o(.bss.field_Transmit) for field_Transmit
    communication.o(.text.task_com_tx) refers to app.o(.data.sys) for sys
    communication.o(.text.task_com_tx) refers to communication.o(.bss.receive_ok) for receive_ok
    communication.o(.text.task_com_tx) refers to communication.o(.text.transmit_data) for transmit_data
    communication.o(.ARM.exidx.text.task_com_tx) refers to communication.o(.text.task_com_tx) for [Anonymous Symbol]
    communication.o(.ARM.exidx.text.transmit_data) refers to communication.o(.text.transmit_data) for [Anonymous Symbol]
    communication.o(.text.data_printf) refers to communication.o(.rodata.str1.1) for .L.str
    communication.o(.text.data_printf) refers to printfa.o(i.__0printf) for printf
    communication.o(.ARM.exidx.text.data_printf) refers to communication.o(.text.data_printf) for [Anonymous Symbol]
    debug.o(.text.task_debug) refers to debug.o(.bss.task_debug.i) for task_debug.i
    debug.o(.text.task_debug) refers to debug.o(.rodata.str1.1) for .L.str.13
    debug.o(.text.task_debug) refers to printfa.o(i.__0printf) for printf
    debug.o(.text.task_debug) refers to bms.o(.text.BQ769x2_DSG_OFF) for BQ769x2_DSG_OFF
    debug.o(.text.task_debug) refers to bms.o(.text.BQ769x2_CHG_OFF) for BQ769x2_CHG_OFF
    debug.o(.text.task_debug) refers to bms.o(.text.CommandSubcommands) for CommandSubcommands
    debug.o(.text.task_debug) refers to bms.o(.bss.DSG) for DSG
    debug.o(.text.task_debug) refers to bms.o(.bss.CHG) for CHG
    debug.o(.text.task_debug) refers to app.o(.data.sys) for sys
    debug.o(.text.task_debug) refers to debug.o(.data.p) for p
    debug.o(.text.task_debug) refers to debug.o(.data.pCPort) for pCPort
    debug.o(.text.task_debug) refers to debug.o(.data.pGPort) for pGPort
    debug.o(.text.task_debug) refers to debug.o(.data.pAPort) for pAPort
    debug.o(.text.task_debug) refers to led.o(.data.led) for led
    debug.o(.text.task_debug) refers to debug.o(.data.pled) for pled
    debug.o(.text.task_debug) refers to debug.o(.data.pled2) for pled2
    debug.o(.text.task_debug) refers to bms.o(.bss.V_cells) for V_cells
    debug.o(.text.task_debug) refers to app.o(.bss.xbms) for xbms
    debug.o(.text.task_debug) refers to bms_pro.o(.bss.bms_curr) for bms_curr
    debug.o(.text.task_debug) refers to bms.o(.bss.PCHG) for PCHG
    debug.o(.text.task_debug) refers to bms.o(.bss.PDSG) for PDSG
    debug.o(.text.task_debug) refers to bms.o(.bss.UV_Fault) for UV_Fault
    debug.o(.text.task_debug) refers to bms.o(.bss.OV_Fault) for OV_Fault
    debug.o(.text.task_debug) refers to bms.o(.bss.SCD_Fault) for SCD_Fault
    debug.o(.text.task_debug) refers to bms.o(.bss.OCD_Fault) for OCD_Fault
    debug.o(.text.task_debug) refers to bms.o(.bss.OCC_Fault) for OCC_Fault
    debug.o(.text.task_debug) refers to bms.o(.bss.AlarmBits) for AlarmBits
    debug.o(.text.task_debug) refers to bms.o(.bss.Stack_Voltage) for Stack_Voltage
    debug.o(.text.task_debug) refers to bms.o(.bss.Pack_Voltage) for Pack_Voltage
    debug.o(.text.task_debug) refers to bms.o(.bss.LD_Voltage) for LD_Voltage
    debug.o(.text.task_debug) refers to bms.o(.bss.Pack_Current) for Pack_Current
    debug.o(.text.task_debug) refers to bms.o(.bss.value_SafetyStatusA) for value_SafetyStatusA
    debug.o(.text.task_debug) refers to bms.o(.bss.value_SafetyStatusB) for value_SafetyStatusB
    debug.o(.text.task_debug) refers to bms.o(.bss.value_SafetyStatusC) for value_SafetyStatusC
    debug.o(.text.task_debug) refers to bms.o(.bss.value_PFStatusA) for value_PFStatusA
    debug.o(.text.task_debug) refers to bms.o(.bss.value_PFStatusB) for value_PFStatusB
    debug.o(.text.task_debug) refers to bms.o(.bss.value_PFStatusC) for value_PFStatusC
    debug.o(.text.task_debug) refers to bms.o(.bss.FET_Status) for FET_Status
    debug.o(.text.task_debug) refers to bms.o(.bss.CB_ActiveCells) for CB_ActiveCells
    debug.o(.text.task_debug) refers to bms_pro.o(.bss.bms_tmp1) for bms_tmp1
    debug.o(.text.task_debug) refers to bms_pro.o(.bss.bms_tmp2) for bms_tmp2
    debug.o(.text.task_debug) refers to bms_pro.o(.bss.bms_tmp3) for bms_tmp3
    debug.o(.text.task_debug) refers to bms_pro.o(.bss.bms_tmp4) for bms_tmp4
    debug.o(.ARM.exidx.text.task_debug) refers to debug.o(.text.task_debug) for [Anonymous Symbol]
    debug.o(.data.p) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    debug.o(.data.pCPort) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    debug.o(.data.pGPort) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    debug.o(.data.pAPort) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    debug.o(.data.pled) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    debug.o(.data.pled2) refers to debug.o(.rodata.str1.1) for [Anonymous Symbol]
    key.o(.text.key_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    key.o(.text.key_init) refers to key.o(.bss.key_cb) for key_cb
    key.o(.ARM.exidx.text.key_init) refers to key.o(.text.key_init) for [Anonymous Symbol]
    key.o(.text.task_key) refers to key.o(.bss.key_cb) for key_cb
    key.o(.ARM.exidx.text.task_key) refers to key.o(.text.task_key) for [Anonymous Symbol]
    led.o(.text.f_led_show_battery) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_show_battery) refers to printfa.o(i.__0printf) for printf
    led.o(.text.f_led_show_battery) refers to led.o(.data.led) for led
    led.o(.ARM.exidx.text.f_led_show_battery) refers to led.o(.text.f_led_show_battery) for [Anonymous Symbol]
    led.o(.text.f_led_discharge) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_discharge) refers to printfa.o(i.__0printf) for printf
    led.o(.text.f_led_discharge) refers to led.o(.data.led) for led
    led.o(.ARM.exidx.text.f_led_discharge) refers to led.o(.text.f_led_discharge) for [Anonymous Symbol]
    led.o(.text.f_led_charge) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_charge) refers to printfa.o(i.__0printf) for printf
    led.o(.text.f_led_charge) refers to led.o(.data.led) for led
    led.o(.ARM.exidx.text.f_led_charge) refers to led.o(.text.f_led_charge) for [Anonymous Symbol]
    led.o(.text.f_led_health) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_health) refers to printfa.o(i.__0printf) for printf
    led.o(.text.f_led_health) refers to led.o(.data.led) for led
    led.o(.ARM.exidx.text.f_led_health) refers to led.o(.text.f_led_health) for [Anonymous Symbol]
    led.o(.text.f_led_alloff) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_alloff) refers to printfa.o(i.__0printf) for printf
    led.o(.text.f_led_alloff) refers to led.o(.data.led) for led
    led.o(.ARM.exidx.text.f_led_alloff) refers to led.o(.text.f_led_alloff) for [Anonymous Symbol]
    led.o(.text.f_led_port_normal) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_port_normal) refers to printfa.o(i.__0printf) for printf
    led.o(.text.f_led_port_normal) refers to led.o(.data.led) for led
    led.o(.ARM.exidx.text.f_led_port_normal) refers to led.o(.text.f_led_port_normal) for [Anonymous Symbol]
    led.o(.text.f_led_port_warning) refers to led.o(.rodata.str1.1) for .L.str
    led.o(.text.f_led_port_warning) refers to printfa.o(i.__0printf) for printf
    led.o(.text.f_led_port_warning) refers to led.o(.data.led) for led
    led.o(.ARM.exidx.text.f_led_port_warning) refers to led.o(.text.f_led_port_warning) for [Anonymous Symbol]
    led.o(.text.led_init) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    led.o(.text.led_init) refers to led.o(.data.led) for led
    led.o(.ARM.exidx.text.led_init) refers to led.o(.text.led_init) for [Anonymous Symbol]
    led.o(.text.task_led) refers to led.o(.data.led) for led
    led.o(.text.task_led) refers to led.o(.text.led_bat_show) for led_bat_show
    led.o(.text.task_led) refers to led.o(.text.led_port_show) for led_port_show
    led.o(.ARM.exidx.text.task_led) refers to led.o(.text.task_led) for [Anonymous Symbol]
    led.o(.text.led_bat_show) refers to app.o(.data.sys) for sys
    led.o(.ARM.exidx.text.led_bat_show) refers to led.o(.text.led_bat_show) for [Anonymous Symbol]
    led.o(.text.led_port_show) refers to app.o(.data.sys) for sys
    led.o(.ARM.exidx.text.led_port_show) refers to led.o(.text.led_port_show) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.led_pwm_control) refers to led.o(.text.led_pwm_control) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.swd_to_gpio) refers to led.o(.text.swd_to_gpio) for [Anonymous Symbol]
    led.o(.data.led) refers to led.o(.text.f_led_show_battery) for f_led_show_battery
    led.o(.data.led) refers to led.o(.text.f_led_discharge) for f_led_discharge
    led.o(.data.led) refers to led.o(.text.f_led_charge) for f_led_charge
    led.o(.data.led) refers to led.o(.text.f_led_health) for f_led_health
    led.o(.data.led) refers to led.o(.text.f_led_alloff) for f_led_alloff
    led.o(.data.led) refers to led.o(.text.f_led_port_normal) for f_led_port_normal
    led.o(.data.led) refers to led.o(.text.f_led_port_warning) for f_led_port_warning
    queue.o(.ARM.exidx.text.circ_buffer_init) refers to queue.o(.text.circ_buffer_init) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.circ_buffer_push) refers to queue.o(.text.circ_buffer_push) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.circ_buffer_pop) refers to queue.o(.text.circ_buffer_pop) for [Anonymous Symbol]
    queue.o(.text.output_buf) refers to queue.o(.rodata.str1.1) for .L.str
    queue.o(.text.output_buf) refers to printfa.o(i.__0printf) for printf
    queue.o(.ARM.exidx.text.output_buf) refers to queue.o(.text.output_buf) for [Anonymous Symbol]
    queue.o(.text.ProcessPacket) refers to communication.o(.bss.field_receive) for field_receive
    queue.o(.text.ProcessPacket) refers to communication.o(.bss.receive_ok) for receive_ok
    queue.o(.text.ProcessPacket) refers to app.o(.data.sys) for sys
    queue.o(.text.ProcessPacket) refers to queue.o(.rodata.str1.1) for .L.str.2
    queue.o(.text.ProcessPacket) refers to printfa.o(i.__0printf) for printf
    queue.o(.ARM.exidx.text.ProcessPacket) refers to queue.o(.text.ProcessPacket) for [Anonymous Symbol]
    queue.o(.text.ProcessData) refers to queue.o(.text.circ_buffer_pop) for circ_buffer_pop
    queue.o(.text.ProcessData) refers to queue.o(.bss.ProcessData.packetIndex) for ProcessData.packetIndex
    queue.o(.text.ProcessData) refers to queue.o(.bss.ProcessData.receiving) for ProcessData.receiving
    queue.o(.text.ProcessData) refers to queue.o(.bss.ProcessData.packet) for ProcessData.packet
    queue.o(.text.ProcessData) refers to queue.o(.text.ProcessPacket) for ProcessPacket
    queue.o(.ARM.exidx.text.ProcessData) refers to queue.o(.text.ProcessData) for [Anonymous Symbol]
    queue.o(.text.ProcessData1) refers to queue.o(.text.circ_buffer_pop) for circ_buffer_pop
    queue.o(.text.ProcessData1) refers to queue.o(.bss.ProcessData1.receive_status) for ProcessData1.receive_status
    queue.o(.text.ProcessData1) refers to queue.o(.bss.ProcessData1.packetIndex) for ProcessData1.packetIndex
    queue.o(.text.ProcessData1) refers to queue.o(.bss.ProcessData1.packet) for ProcessData1.packet
    queue.o(.text.ProcessData1) refers to queue.o(.text.ProcessPacket) for ProcessPacket
    queue.o(.ARM.exidx.text.ProcessData1) refers to queue.o(.text.ProcessData1) for [Anonymous Symbol]
    task.o(.text.Task_Marks_Handler_Callback) refers to task.o(.data.Tasks_Max) for Tasks_Max
    task.o(.text.Task_Marks_Handler_Callback) refers to task.o(.data.Task_Comps) for Task_Comps
    task.o(.ARM.exidx.text.Task_Marks_Handler_Callback) refers to task.o(.text.Task_Marks_Handler_Callback) for [Anonymous Symbol]
    task.o(.text.Task_Pro_Handler_Callback) refers to task.o(.data.Tasks_Max) for Tasks_Max
    task.o(.text.Task_Pro_Handler_Callback) refers to task.o(.data.Task_Comps) for Task_Comps
    task.o(.ARM.exidx.text.Task_Pro_Handler_Callback) refers to task.o(.text.Task_Pro_Handler_Callback) for [Anonymous Symbol]
    task.o(.data.Task_Comps) refers to adc.o(.text.task_adc) for task_adc
    task.o(.data.Task_Comps) refers to key.o(.text.task_key) for task_key
    task.o(.data.Task_Comps) refers to debug.o(.text.task_debug) for task_debug
    task.o(.data.Task_Comps) refers to app.o(.text.task_app) for task_app
    task.o(.data.Task_Comps) refers to communication.o(.text.task_com_rx) for task_com_rx
    task.o(.data.Task_Comps) refers to communication.o(.text.task_com_tx) for task_com_tx
    task.o(.data.Task_Comps) refers to led.o(.text.task_led) for task_led
    task.o(.data.Task_Comps) refers to bms_pro.o(.text.task_bms) for task_bms
    iic.o(.text.i2c_init_) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    iic.o(.text.i2c_init_) refers to cs32f10x_i2c.o(.text.i2c_init) for i2c_init
    iic.o(.ARM.exidx.text.i2c_init_) refers to iic.o(.text.i2c_init_) for [Anonymous Symbol]
    iic.o(.text.i2c_master_write) refers to memseta.o(.text) for __aeabi_memclr
    iic.o(.text.i2c_master_write) refers to memcpya.o(.text) for __aeabi_memcpy
    iic.o(.text.i2c_master_write) refers to cs32f10x_i2c.o(.text.i2c_flag_status_check) for i2c_flag_status_check
    iic.o(.text.i2c_master_write) refers to cs32f10x_i2c.o(.text.i2c_master_send7bits_address) for i2c_master_send7bits_address
    iic.o(.text.i2c_master_write) refers to cs32f10x_i2c.o(.text.i2c_event_check) for i2c_event_check
    iic.o(.text.i2c_master_write) refers to iic.o(.rodata.str1.1) for .L.str
    iic.o(.text.i2c_master_write) refers to printfa.o(i.__0printf) for printf
    iic.o(.ARM.exidx.text.i2c_master_write) refers to iic.o(.text.i2c_master_write) for [Anonymous Symbol]
    iic.o(.text.i2c_master_read) refers to memseta.o(.text) for __aeabi_memclr
    iic.o(.text.i2c_master_read) refers to cs32f10x_i2c.o(.text.i2c_flag_status_check) for i2c_flag_status_check
    iic.o(.text.i2c_master_read) refers to cs32f10x_i2c.o(.text.i2c_master_send7bits_address) for i2c_master_send7bits_address
    iic.o(.text.i2c_master_read) refers to cs32f10x_i2c.o(.text.i2c_event_check) for i2c_event_check
    iic.o(.text.i2c_master_read) refers to memcpya.o(.text) for __aeabi_memcpy
    iic.o(.ARM.exidx.text.i2c_master_read) refers to iic.o(.text.i2c_master_read) for [Anonymous Symbol]
    iic.o(.text.iic_test) refers to iic.o(.data.iic_test.data) for iic_test.data
    iic.o(.ARM.exidx.text.iic_test) refers to iic.o(.text.iic_test) for [Anonymous Symbol]
    iic.o(.text.i2c_init_2) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for gpio_mode_config
    iic.o(.ARM.exidx.text.i2c_init_2) refers to iic.o(.text.i2c_init_2) for [Anonymous Symbol]
    iic.o(.ARM.exidx.text.I2C_Start) refers to iic.o(.text.I2C_Start) for [Anonymous Symbol]
    iic.o(.ARM.exidx.text.I2C_Stop) refers to iic.o(.text.I2C_Stop) for [Anonymous Symbol]
    iic.o(.ARM.exidx.text.I2C_SendAck) refers to iic.o(.text.I2C_SendAck) for [Anonymous Symbol]
    iic.o(.text.I2C_WaitAck) refers to app.o(.bss.xbms) for xbms
    iic.o(.ARM.exidx.text.I2C_WaitAck) refers to iic.o(.text.I2C_WaitAck) for [Anonymous Symbol]
    iic.o(.ARM.exidx.text.I2C_SendByte) refers to iic.o(.text.I2C_SendByte) for [Anonymous Symbol]
    iic.o(.ARM.exidx.text.I2C_ReceiveByte) refers to iic.o(.text.I2C_ReceiveByte) for [Anonymous Symbol]
    iic.o(.text.I2C_WriteData) refers to iic.o(.text.I2C_Start) for I2C_Start
    iic.o(.text.I2C_WriteData) refers to iic.o(.text.I2C_SendByte) for I2C_SendByte
    iic.o(.text.I2C_WriteData) refers to iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    iic.o(.text.I2C_WriteData) refers to iic.o(.text.I2C_Stop) for I2C_Stop
    iic.o(.ARM.exidx.text.I2C_WriteData) refers to iic.o(.text.I2C_WriteData) for [Anonymous Symbol]
    iic.o(.text.I2C_ReadData) refers to iic.o(.text.I2C_Start) for I2C_Start
    iic.o(.text.I2C_ReadData) refers to iic.o(.text.I2C_SendByte) for I2C_SendByte
    iic.o(.text.I2C_ReadData) refers to iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    iic.o(.text.I2C_ReadData) refers to iic.o(.text.I2C_ReceiveByte) for I2C_ReceiveByte
    iic.o(.text.I2C_ReadData) refers to iic.o(.text.I2C_SendAck) for I2C_SendAck
    iic.o(.text.I2C_ReadData) refers to iic.o(.text.I2C_Stop) for I2C_Stop
    iic.o(.ARM.exidx.text.I2C_ReadData) refers to iic.o(.text.I2C_ReadData) for [Anonymous Symbol]
    iic.o(.text.I2C_WriteMulti) refers to iic.o(.text.I2C_Start) for I2C_Start
    iic.o(.text.I2C_WriteMulti) refers to iic.o(.text.I2C_SendByte) for I2C_SendByte
    iic.o(.text.I2C_WriteMulti) refers to iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    iic.o(.text.I2C_WriteMulti) refers to iic.o(.text.I2C_Stop) for I2C_Stop
    iic.o(.ARM.exidx.text.I2C_WriteMulti) refers to iic.o(.text.I2C_WriteMulti) for [Anonymous Symbol]
    iic.o(.text.I2C_ReadMulti) refers to iic.o(.text.I2C_Start) for I2C_Start
    iic.o(.text.I2C_ReadMulti) refers to iic.o(.text.I2C_SendByte) for I2C_SendByte
    iic.o(.text.I2C_ReadMulti) refers to iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    iic.o(.text.I2C_ReadMulti) refers to iic.o(.text.I2C_ReceiveByte) for I2C_ReceiveByte
    iic.o(.text.I2C_ReadMulti) refers to iic.o(.text.I2C_SendAck) for I2C_SendAck
    iic.o(.text.I2C_ReadMulti) refers to iic.o(.text.I2C_Stop) for I2C_Stop
    iic.o(.ARM.exidx.text.I2C_ReadMulti) refers to iic.o(.text.I2C_ReadMulti) for [Anonymous Symbol]
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_vbat_sum) for bms_vbat_sum
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.max_cell_V) for max_cell_V
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.min_cell_V) for min_cell_V
    bms_pro.o(.text.find_max_min) refers to bms.o(.bss.V_cells) for V_cells
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_tmp2) for bms_tmp2
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_tmp3) for bms_tmp3
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_tmp_H) for bms_tmp_H
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_tmp_L) for bms_tmp_L
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.bms_tmp1) for bms_tmp1
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.i_bms_tmp_H) for i_bms_tmp_H
    bms_pro.o(.text.find_max_min) refers to bms_pro.o(.bss.i_bms_tmp_L) for i_bms_tmp_L
    bms_pro.o(.ARM.exidx.text.find_max_min) refers to bms_pro.o(.text.find_max_min) for [Anonymous Symbol]
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.write_nack) for write_nack
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.bms_pro_flag) for bms_pro_flag
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.u16_nack_flag) for u16_nack_flag
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.protect_scan_flag.pidx) for protect_scan_flag.pidx
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.text.find_max_min) for find_max_min
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.max_cell_V) for max_cell_V
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.min_cell_V) for min_cell_V
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_curr) for bms_curr
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.err_0v5_cnt) for err_0v5_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.err_3v8_cnt) for err_3v8_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.err_1v8_cnt) for err_1v8_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.DSG) for DSG
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.bss.CHG) for CHG
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_mos_err_cnt) for bms_mos_err_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_cell_chg_cnt) for bms_cell_chg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_cell_chg_curr_cnt) for bms_cell_chg_curr_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_cell_dsg_cnt) for bms_cell_dsg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tmp4) for bms_tmp4
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_t_mos_cnt) for bms_t_mos_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tmp_H) for bms_tmp_H
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tmp_L) for bms_tmp_L
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_t_err_cnt) for bms_t_err_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_th_chg_cnt) for bms_th_chg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tl_chg_cnt) for bms_tl_chg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_th_dsg_cnt) for bms_th_dsg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_tl_dsg_cnt) for bms_tl_dsg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_curr_chg_cnt) for bms_curr_chg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_curr_dsg_cnt) for bms_curr_dsg_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_battery_status) for bms_battery_status
    bms_pro.o(.text.protect_scan_flag) refers to bms_pro.o(.bss.bms_rst_cnt) for bms_rst_cnt
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.data.t_power_on_cnt_s) for t_power_on_cnt_s
    bms_pro.o(.text.protect_scan_flag) refers to bms.o(.text.CommandSubcommands) for CommandSubcommands
    bms_pro.o(.ARM.exidx.text.protect_scan_flag) refers to bms_pro.o(.text.protect_scan_flag) for [Anonymous Symbol]
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.task_bms.idx) for task_bms.idx
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadAlarmStatus) for BQ769x2_ReadAlarmStatus
    bms_pro.o(.text.task_bms) refers to bms.o(.bss.AlarmBits) for AlarmBits
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadAllVoltages) for BQ769x2_ReadAllVoltages
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadFETStatus) for BQ769x2_ReadFETStatus
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadSafetyStatusA) for BQ769x2_ReadSafetyStatusA
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadSafetyStatusB) for BQ769x2_ReadSafetyStatusB
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadSafetyStatusC) for BQ769x2_ReadSafetyStatusC
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadCurrent) for BQ769x2_ReadCurrent
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_curr) for bms_curr
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_Read_Vcells_123) for BQ769x2_Read_Vcells_123
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_Read_Vcells_5) for BQ769x2_Read_Vcells_5
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_Read_Vcells_7) for BQ769x2_Read_Vcells_7
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_Read_Vcells_9) for BQ769x2_Read_Vcells_9
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadTemperature) for BQ769x2_ReadTemperature
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_tmp3) for bms_tmp3
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_tmp1) for bms_tmp1
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_tmp2) for bms_tmp2
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_tmp4) for bms_tmp4
    bms_pro.o(.text.task_bms) refers to bms.o(.text.BQ769x2_ReadVoltage) for BQ769x2_ReadVoltage
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.pack_pin_voltage) for pack_pin_voltage
    bms_pro.o(.text.task_bms) refers to bms.o(.text.DirectCommands) for DirectCommands
    bms_pro.o(.text.task_bms) refers to bms.o(.bss.RX_data) for RX_data
    bms_pro.o(.text.task_bms) refers to bms_pro.o(.bss.bms_battery_status) for bms_battery_status
    bms_pro.o(.text.task_bms) refers to bms.o(.bss.u16_nack_flag) for u16_nack_flag
    bms_pro.o(.text.task_bms) refers to bms.o(.bss.RX_CRC_Fail) for RX_CRC_Fail
    bms_pro.o(.text.task_bms) refers to bms.o(.data.t_power_on_cnt_s) for t_power_on_cnt_s
    bms_pro.o(.text.task_bms) refers to bms.o(.bss.write_nack) for write_nack
    bms_pro.o(.ARM.exidx.text.task_bms) refers to bms_pro.o(.text.task_bms) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_init) refers to cs32f10x_adc.o(.text.adc_init) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_struct_init) refers to cs32f10x_adc.o(.text.adc_struct_init) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_disc_mode_channel_config) refers to cs32f10x_adc.o(.text.adc_disc_mode_channel_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_regular_channel_config) refers to cs32f10x_adc.o(.text.adc_regular_channel_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_inject_ext_trigger_config) refers to cs32f10x_adc.o(.text.adc_inject_ext_trigger_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_inject_channel_config) refers to cs32f10x_adc.o(.text.adc_inject_channel_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_inject_sequence_length_config) refers to cs32f10x_adc.o(.text.adc_inject_sequence_length_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_inject_offset_set) refers to cs32f10x_adc.o(.text.adc_inject_offset_set) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_inject_conv_value_get) refers to cs32f10x_adc.o(.text.adc_inject_conv_value_get) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_analog_wdt_threshold_set) refers to cs32f10x_adc.o(.text.adc_analog_wdt_threshold_set) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_analog_channel_config) refers to cs32f10x_adc.o(.text.adc_analog_channel_config) for [Anonymous Symbol]
    cs32f10x_adc.o(.ARM.exidx.text.adc_analog_wdt_config) refers to cs32f10x_adc.o(.text.adc_analog_wdt_config) for [Anonymous Symbol]
    cs32f10x_bkp.o(.ARM.exidx.text.bkp_tamper_active_level_config) refers to cs32f10x_bkp.o(.text.bkp_tamper_active_level_config) for [Anonymous Symbol]
    cs32f10x_bkp.o(.ARM.exidx.text.bkp_rtc_output_config) refers to cs32f10x_bkp.o(.text.bkp_rtc_output_config) for [Anonymous Symbol]
    cs32f10x_bkp.o(.ARM.exidx.text.bkp_rtc_cali_data_set) refers to cs32f10x_bkp.o(.text.bkp_rtc_cali_data_set) for [Anonymous Symbol]
    cs32f10x_bkp.o(.ARM.exidx.text.bkp_backup_register_write) refers to cs32f10x_bkp.o(.text.bkp_backup_register_write) for [Anonymous Symbol]
    cs32f10x_bkp.o(.ARM.exidx.text.bkp_backup_register_read) refers to cs32f10x_bkp.o(.text.bkp_backup_register_read) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_init) refers to cs32f10x_can.o(.text.can_init) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_config_struct_init) refers to cs32f10x_can.o(.text.can_config_struct_init) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_work_mode_config) refers to cs32f10x_can.o(.text.can_work_mode_config) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_filter_init) refers to cs32f10x_can.o(.text.can_filter_init) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_time_trigger_enable_ctrl) refers to cs32f10x_can.o(.text.can_time_trigger_enable_ctrl) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_message_send) refers to cs32f10x_can.o(.text.can_message_send) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_tx_status_get) refers to cs32f10x_can.o(.text.can_tx_status_get) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_tx_abort_set) refers to cs32f10x_can.o(.text.can_tx_abort_set) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_message_receive) refers to cs32f10x_can.o(.text.can_message_receive) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_rx_fifo_release) refers to cs32f10x_can.o(.text.can_rx_fifo_release) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_fifo_msg_num_get) refers to cs32f10x_can.o(.text.can_fifo_msg_num_get) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_sleep_set) refers to cs32f10x_can.o(.text.can_sleep_set) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_wakeup_set) refers to cs32f10x_can.o(.text.can_wakeup_set) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_op_mode_switch_ctrl) refers to cs32f10x_can.o(.text.can_op_mode_switch_ctrl) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_flag_status_get) refers to cs32f10x_can.o(.text.can_flag_status_get) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_flag_clear) refers to cs32f10x_can.o(.text.can_flag_clear) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_int_status_get) refers to cs32f10x_can.o(.text.can_int_status_get) for [Anonymous Symbol]
    cs32f10x_can.o(.ARM.exidx.text.can_int_flag_clear) refers to cs32f10x_can.o(.text.can_int_flag_clear) for [Anonymous Symbol]
    cs32f10x_crc.o(.ARM.exidx.text.crc_def_init) refers to cs32f10x_crc.o(.text.crc_def_init) for [Anonymous Symbol]
    cs32f10x_crc.o(.ARM.exidx.text.crc_crc32_calc) refers to cs32f10x_crc.o(.text.crc_crc32_calc) for [Anonymous Symbol]
    cs32f10x_crc.o(.ARM.exidx.text.crc_data_buffer_calc) refers to cs32f10x_crc.o(.text.crc_data_buffer_calc) for [Anonymous Symbol]
    cs32f10x_debug.o(.ARM.exidx.text.debug_revision_id_get) refers to cs32f10x_debug.o(.text.debug_revision_id_get) for [Anonymous Symbol]
    cs32f10x_debug.o(.ARM.exidx.text.debug_dev_id_get) refers to cs32f10x_debug.o(.text.debug_dev_id_get) for [Anonymous Symbol]
    cs32f10x_debug.o(.ARM.exidx.text.debug_low_power_config) refers to cs32f10x_debug.o(.text.debug_low_power_config) for [Anonymous Symbol]
    cs32f10x_dma.o(.ARM.exidx.text.dma_def_init) refers to cs32f10x_dma.o(.text.dma_def_init) for [Anonymous Symbol]
    cs32f10x_dma.o(.ARM.exidx.text.dma_init) refers to cs32f10x_dma.o(.text.dma_init) for [Anonymous Symbol]
    cs32f10x_dma.o(.ARM.exidx.text.dma_transfer_config) refers to cs32f10x_dma.o(.text.dma_transfer_config) for [Anonymous Symbol]
    cs32f10x_dma.o(.ARM.exidx.text.dma_struct_config) refers to cs32f10x_dma.o(.text.dma_struct_config) for [Anonymous Symbol]
    cs32f10x_exti.o(.ARM.exidx.text.exti_def_init) refers to cs32f10x_exti.o(.text.exti_def_init) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_wait_counter_set) refers to cs32f10x_flash.o(.text.flash_wait_counter_set) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_unlock) refers to cs32f10x_flash.o(.text.flash_unlock) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_lock) refers to cs32f10x_flash.o(.text.flash_lock) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_page_erase) refers to cs32f10x_flash.o(.text.flash_operation_wait) for flash_operation_wait
    cs32f10x_flash.o(.ARM.exidx.text.flash_page_erase) refers to cs32f10x_flash.o(.text.flash_page_erase) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_operation_wait) refers to cs32f10x_flash.o(.text.flash_operation_wait) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_all_pages_erase) refers to cs32f10x_flash.o(.text.flash_operation_wait) for flash_operation_wait
    cs32f10x_flash.o(.ARM.exidx.text.flash_all_pages_erase) refers to cs32f10x_flash.o(.text.flash_all_pages_erase) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_word_program) refers to cs32f10x_flash.o(.text.flash_operation_wait) for flash_operation_wait
    cs32f10x_flash.o(.ARM.exidx.text.flash_word_program) refers to cs32f10x_flash.o(.text.flash_word_program) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_half_word_program) refers to cs32f10x_flash.o(.text.flash_operation_wait) for flash_operation_wait
    cs32f10x_flash.o(.ARM.exidx.text.flash_half_word_program) refers to cs32f10x_flash.o(.text.flash_half_word_program) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_unlock) refers to cs32f10x_flash.o(.text.flash_option_bytes_unlock) for [Anonymous Symbol]
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_lock) refers to cs32f10x_flash.o(.text.flash_option_bytes_lock) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_option_bytes_erase) refers to cs32f10x_flash.o(.text.flash_operation_wait) for flash_operation_wait
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_erase) refers to cs32f10x_flash.o(.text.flash_option_bytes_erase) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_option_bytes_user_set) refers to cs32f10x_flash.o(.text.flash_option_bytes_set) for flash_option_bytes_set
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_user_set) refers to cs32f10x_flash.o(.text.flash_option_bytes_user_set) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_option_bytes_set) refers to cs32f10x_flash.o(.text.flash_operation_wait) for flash_operation_wait
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_set) refers to cs32f10x_flash.o(.text.flash_option_bytes_set) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_option_bytes_write_protect_enable) refers to cs32f10x_flash.o(.text.flash_option_bytes_set) for flash_option_bytes_set
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_write_protect_enable) refers to cs32f10x_flash.o(.text.flash_option_bytes_write_protect_enable) for [Anonymous Symbol]
    cs32f10x_flash.o(.text.flash_option_bytes_read_protect_config) refers to cs32f10x_flash.o(.text.flash_option_bytes_set) for flash_option_bytes_set
    cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_read_protect_config) refers to cs32f10x_flash.o(.text.flash_option_bytes_read_protect_config) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_write_access_enable_ctrl) refers to cs32f10x_fwdt.o(.text.fwdt_write_access_enable_ctrl) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_prescaler_set) refers to cs32f10x_fwdt.o(.text.fwdt_prescaler_set) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_reload_set) refers to cs32f10x_fwdt.o(.text.fwdt_reload_set) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_reload_counter) refers to cs32f10x_fwdt.o(.text.fwdt_reload_counter) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_enable) refers to cs32f10x_fwdt.o(.text.fwdt_enable) for [Anonymous Symbol]
    cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_flag_status_get) refers to cs32f10x_fwdt.o(.text.fwdt_flag_status_get) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_mode_config) refers to cs32f10x_gpio.o(.text.gpio_mode_config) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_def_init) refers to cs32f10x_gpio.o(.text.gpio_def_init) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_af_deinit) refers to cs32f10x_gpio.o(.text.gpio_af_deinit) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_pin_lock_set) refers to cs32f10x_gpio.o(.text.gpio_pin_lock_set) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_event_config) refers to cs32f10x_gpio.o(.text.gpio_event_config) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_pin_remap_config) refers to cs32f10x_gpio.o(.text.gpio_pin_remap_config) for [Anonymous Symbol]
    cs32f10x_gpio.o(.ARM.exidx.text.gpio_exti_pin_config) refers to cs32f10x_gpio.o(.text.gpio_exti_pin_config) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_deinit) refers to cs32f10x_i2c.o(.text.i2c_deinit) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_struct_init) refers to cs32f10x_i2c.o(.text.i2c_struct_init) for [Anonymous Symbol]
    cs32f10x_i2c.o(.text.i2c_init) refers to cs32f10x_rcu.o(.text.rcu_clk_freq_get) for rcu_clk_freq_get
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_init) refers to cs32f10x_i2c.o(.text.i2c_init) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_slave_address2_config) refers to cs32f10x_i2c.o(.text.i2c_slave_address2_config) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_config) refers to cs32f10x_i2c.o(.text.i2c_interrupt_config) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_master_send7bits_address) refers to cs32f10x_i2c.o(.text.i2c_master_send7bits_address) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_read_register) refers to cs32f10x_i2c.o(.text.i2c_read_register) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_get_pec) refers to cs32f10x_i2c.o(.text.i2c_get_pec) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_event_check) refers to cs32f10x_i2c.o(.text.i2c_event_check) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_last_event_get) refers to cs32f10x_i2c.o(.text.i2c_last_event_get) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_flag_status_check) refers to cs32f10x_i2c.o(.text.i2c_flag_status_check) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_flag_clear) refers to cs32f10x_i2c.o(.text.i2c_flag_clear) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_status_get) refers to cs32f10x_i2c.o(.text.i2c_interrupt_status_get) for [Anonymous Symbol]
    cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_clear) refers to cs32f10x_i2c.o(.text.i2c_interrupt_clear) for [Anonymous Symbol]
    cs32f10x_misc.o(.ARM.exidx.text.nvic_priority_group_config) refers to cs32f10x_misc.o(.text.nvic_priority_group_config) for [Anonymous Symbol]
    cs32f10x_misc.o(.ARM.exidx.text.nvic_init) refers to cs32f10x_misc.o(.text.nvic_init) for [Anonymous Symbol]
    cs32f10x_misc.o(.ARM.exidx.text.nvic_vector_table_set) refers to cs32f10x_misc.o(.text.nvic_vector_table_set) for [Anonymous Symbol]
    cs32f10x_misc.o(.ARM.exidx.text.nvic_sys_lowpwr_config) refers to cs32f10x_misc.o(.text.nvic_sys_lowpwr_config) for [Anonymous Symbol]
    cs32f10x_misc.o(.ARM.exidx.text.systick_clk_src_config) refers to cs32f10x_misc.o(.text.systick_clk_src_config) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_deinit) refers to cs32f10x_pmu.o(.text.pmu_deinit) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_vbat_domain_write_config) refers to cs32f10x_pmu.o(.text.pmu_vbat_domain_write_config) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_lvd_voltage_select) refers to cs32f10x_pmu.o(.text.pmu_lvd_voltage_select) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_lvd_enable_config) refers to cs32f10x_pmu.o(.text.pmu_lvd_enable_config) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_wkup_pin_config) refers to cs32f10x_pmu.o(.text.pmu_wkup_pin_config) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_stop_mode_enter) refers to cs32f10x_pmu.o(.text.pmu_stop_mode_enter) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_standby_enter) refers to cs32f10x_pmu.o(.text.pmu_standby_enter) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_flag_get) refers to cs32f10x_pmu.o(.text.pmu_flag_get) for [Anonymous Symbol]
    cs32f10x_pmu.o(.ARM.exidx.text.pmu_flag_clear) refers to cs32f10x_pmu.o(.text.pmu_flag_clear) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_def_init) refers to cs32f10x_rcu.o(.text.rcu_def_init) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_hxt_stabilization_wait) refers to cs32f10x_rcu.o(.text.rcu_hxt_stabilization_wait) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_hxt_status_set) refers to cs32f10x_rcu.o(.text.rcu_hxt_status_set) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_hrc_calibration_adjust) refers to cs32f10x_rcu.o(.text.rcu_hrc_calibration_adjust) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_pll_config) refers to cs32f10x_rcu.o(.text.rcu_pll_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_clkout_config) refers to cs32f10x_rcu.o(.text.rcu_clkout_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_sysclk_config) refers to cs32f10x_rcu.o(.text.rcu_sysclk_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_sysclk_src_get) refers to cs32f10x_rcu.o(.text.rcu_sysclk_src_get) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_pclk1_config) refers to cs32f10x_rcu.o(.text.rcu_pclk1_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_pclk2_config) refers to cs32f10x_rcu.o(.text.rcu_pclk2_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_hclk_config) refers to cs32f10x_rcu.o(.text.rcu_hclk_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_adcclk_config) refers to cs32f10x_rcu.o(.text.rcu_adcclk_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_usbclk_config) refers to cs32f10x_rcu.o(.text.rcu_usbclk_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_rtcclk_config) refers to cs32f10x_rcu.o(.text.rcu_rtcclk_config) for [Anonymous Symbol]
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_clkready_reset_flag_get) refers to cs32f10x_rcu.o(.text.rcu_clkready_reset_flag_get) for [Anonymous Symbol]
    cs32f10x_rcu.o(.text.rcu_clk_freq_get) refers to cs32f10x_rcu.o(.rodata.APBAHB_pdiv_table) for APBAHB_pdiv_table
    cs32f10x_rcu.o(.text.rcu_clk_freq_get) refers to cs32f10x_rcu.o(.rodata.ADC_pdiv_table) for ADC_pdiv_table
    cs32f10x_rcu.o(.ARM.exidx.text.rcu_clk_freq_get) refers to cs32f10x_rcu.o(.text.rcu_clk_freq_get) for [Anonymous Symbol]
    cs32f10x_rtc.o(.ARM.exidx.text.rtc_counter_set) refers to cs32f10x_rtc.o(.text.rtc_counter_set) for [Anonymous Symbol]
    cs32f10x_rtc.o(.ARM.exidx.text.rtc_prescaler_set) refers to cs32f10x_rtc.o(.text.rtc_prescaler_set) for [Anonymous Symbol]
    cs32f10x_rtc.o(.ARM.exidx.text.rtc_alarm_set) refers to cs32f10x_rtc.o(.text.rtc_alarm_set) for [Anonymous Symbol]
    cs32f10x_rtc.o(.ARM.exidx.text.rtc_wait_for_synchronize) refers to cs32f10x_rtc.o(.text.rtc_wait_for_synchronize) for [Anonymous Symbol]
    cs32f10x_spi.o(.ARM.exidx.text.spi_config_struct_init) refers to cs32f10x_spi.o(.text.spi_config_struct_init) for [Anonymous Symbol]
    cs32f10x_spi.o(.ARM.exidx.text.spi_init) refers to cs32f10x_spi.o(.text.spi_init) for [Anonymous Symbol]
    cs32f10x_spi.o(.ARM.exidx.text.spi_transmit_direct_set) refers to cs32f10x_spi.o(.text.spi_transmit_direct_set) for [Anonymous Symbol]
    cs32f10x_spi.o(.ARM.exidx.text.spi_software_nss_config) refers to cs32f10x_spi.o(.text.spi_software_nss_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_def_init) refers to cs32f10x_tim.o(.text.tim_def_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_base_init) refers to cs32f10x_tim.o(.text.tim_base_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_base_struct_init) refers to cs32f10x_tim.o(.text.tim_base_struct_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_prescaler_set) refers to cs32f10x_tim.o(.text.tim_prescaler_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_count_pattern_set) refers to cs32f10x_tim.o(.text.tim_count_pattern_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_update_request_set) refers to cs32f10x_tim.o(.text.tim_update_request_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_clock_division_set) refers to cs32f10x_tim.o(.text.tim_clock_division_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_protect_config) refers to cs32f10x_tim.o(.text.tim_protect_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_protect_struct_init) refers to cs32f10x_tim.o(.text.tim_protect_struct_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_init) refers to cs32f10x_tim.o(.text.tim_choc_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_struct_init) refers to cs32f10x_tim.o(.text.tim_choc_struct_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_mode_set) refers to cs32f10x_tim.o(.text.tim_choc_mode_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_preload_set) refers to cs32f10x_tim.o(.text.tim_choc_preload_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_fast_set) refers to cs32f10x_tim.o(.text.tim_choc_fast_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_clear_set) refers to cs32f10x_tim.o(.text.tim_choc_clear_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chcc_polarity_set) refers to cs32f10x_tim.o(.text.tim_chcc_polarity_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chncc_polarity_set) refers to cs32f10x_tim.o(.text.tim_chncc_polarity_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chcc_enable_ctrl) refers to cs32f10x_tim.o(.text.tim_chcc_enable_ctrl) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chncc_enable_ctrl) refers to cs32f10x_tim.o(.text.tim_chncc_enable_ctrl) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chic_predivider_set) refers to cs32f10x_tim.o(.text.tim_chic_predivider_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.text.tim_chic_init) refers to cs32f10x_tim.o(.text.tim_chic_config) for tim_chic_config
    cs32f10x_tim.o(.text.tim_chic_init) refers to cs32f10x_tim.o(.text.tim_chic_predivider_set) for tim_chic_predivider_set
    cs32f10x_tim.o(.ARM.exidx.text.tim_chic_init) refers to cs32f10x_tim.o(.text.tim_chic_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chic_config) refers to cs32f10x_tim.o(.text.tim_chic_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_chic_struct_init) refers to cs32f10x_tim.o(.text.tim_chic_struct_init) for [Anonymous Symbol]
    cs32f10x_tim.o(.text.tim_pwmi_config) refers to cs32f10x_tim.o(.text.tim_chic_config) for tim_chic_config
    cs32f10x_tim.o(.text.tim_pwmi_config) refers to cs32f10x_tim.o(.text.tim_chic_predivider_set) for tim_chic_predivider_set
    cs32f10x_tim.o(.ARM.exidx.text.tim_pwmi_config) refers to cs32f10x_tim.o(.text.tim_pwmi_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_dma_access_config) refers to cs32f10x_tim.o(.text.tim_dma_access_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_internal_clock_config) refers to cs32f10x_tim.o(.text.tim_internal_clock_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_input_trigger_set) refers to cs32f10x_tim.o(.text.tim_input_trigger_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.text.tim_internal_trigger_external_clock_config) refers to cs32f10x_tim.o(.text.tim_input_trigger_set) for tim_input_trigger_set
    cs32f10x_tim.o(.ARM.exidx.text.tim_internal_trigger_external_clock_config) refers to cs32f10x_tim.o(.text.tim_internal_trigger_external_clock_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.text.tim_ti_external_clock_config) refers to cs32f10x_tim.o(.text.tim_chic_config) for tim_chic_config
    cs32f10x_tim.o(.text.tim_ti_external_clock_config) refers to cs32f10x_tim.o(.text.tim_input_trigger_set) for tim_input_trigger_set
    cs32f10x_tim.o(.ARM.exidx.text.tim_ti_external_clock_config) refers to cs32f10x_tim.o(.text.tim_ti_external_clock_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_external_trigger_config) refers to cs32f10x_tim.o(.text.tim_external_trigger_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.text.tim_external_clock_mode1_config) refers to cs32f10x_tim.o(.text.tim_external_trigger_config) for tim_external_trigger_config
    cs32f10x_tim.o(.ARM.exidx.text.tim_external_clock_mode1_config) refers to cs32f10x_tim.o(.text.tim_external_clock_mode1_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.text.tim_external_clock_mode2_config) refers to cs32f10x_tim.o(.text.tim_external_trigger_config) for tim_external_trigger_config
    cs32f10x_tim.o(.ARM.exidx.text.tim_external_clock_mode2_config) refers to cs32f10x_tim.o(.text.tim_external_clock_mode2_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_trigger_output_set) refers to cs32f10x_tim.o(.text.tim_trigger_output_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_slave_mode_config) refers to cs32f10x_tim.o(.text.tim_slave_mode_config) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_master_slave_set) refers to cs32f10x_tim.o(.text.tim_master_slave_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_encoder_interface_set) refers to cs32f10x_tim.o(.text.tim_encoder_interface_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_pulse_mode_set) refers to cs32f10x_tim.o(.text.tim_pulse_mode_set) for [Anonymous Symbol]
    cs32f10x_tim.o(.ARM.exidx.text.tim_choc_forced_set) refers to cs32f10x_tim.o(.text.tim_choc_forced_set) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_def_init) refers to cs32f10x_usart.o(.text.usart_def_init) for [Anonymous Symbol]
    cs32f10x_usart.o(.text.usart_init) refers to cs32f10x_rcu.o(.text.rcu_clk_freq_get) for rcu_clk_freq_get
    cs32f10x_usart.o(.ARM.exidx.text.usart_init) refers to cs32f10x_usart.o(.text.usart_init) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_config_struct_init) refers to cs32f10x_usart.o(.text.usart_config_struct_init) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_synchronous_clock_init) refers to cs32f10x_usart.o(.text.usart_synchronous_clock_init) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_synchronous_clock_struct_init) refers to cs32f10x_usart.o(.text.usart_synchronous_clock_struct_init) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_address_set) refers to cs32f10x_usart.o(.text.usart_address_set) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_recv_wakeup_config) refers to cs32f10x_usart.o(.text.usart_recv_wakeup_config) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_lin_break_detection_length_confiig) refers to cs32f10x_usart.o(.text.usart_lin_break_detection_length_confiig) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_break_frame_send) refers to cs32f10x_usart.o(.text.usart_break_frame_send) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_sc_guard_time_set) refers to cs32f10x_usart.o(.text.usart_sc_guard_time_set) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_prescaler_set) refers to cs32f10x_usart.o(.text.usart_prescaler_set) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_sc_nack_enable) refers to cs32f10x_usart.o(.text.usart_sc_nack_enable) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_half_duplex_enable) refers to cs32f10x_usart.o(.text.usart_half_duplex_enable) for [Anonymous Symbol]
    cs32f10x_usart.o(.ARM.exidx.text.usart_irda_low_power_enable) refers to cs32f10x_usart.o(.text.usart_irda_low_power_enable) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_def_init) refers to cs32f10x_wwdt.o(.text.wwdt_def_init) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_prescaler_set) refers to cs32f10x_wwdt.o(.text.wwdt_prescaler_set) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_window_value_set) refers to cs32f10x_wwdt.o(.text.wwdt_window_value_set) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_interrupt_enable) refers to cs32f10x_wwdt.o(.text.wwdt_interrupt_enable) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_counter_set) refers to cs32f10x_wwdt.o(.text.wwdt_counter_set) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_enable) refers to cs32f10x_wwdt.o(.text.wwdt_enable) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_status_flag_get) refers to cs32f10x_wwdt.o(.text.wwdt_status_flag_get) for [Anonymous Symbol]
    cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_flag_clear) refers to cs32f10x_wwdt.o(.text.wwdt_flag_clear) for [Anonymous Symbol]
    startup_cs32f103xb.o(RESET) refers to startup_cs32f103xb.o(STACK) for __initial_sp
    startup_cs32f103xb.o(RESET) refers to startup_cs32f103xb.o(.text) for Reset_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.NMI_Handler) for NMI_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.SVC_Handler) for SVC_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.EXTI4_IRQHandler) for EXTI4_IRQHandler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.TIM1_UP_IRQHandler) for TIM1_UP_IRQHandler
    startup_cs32f103xb.o(RESET) refers to cs32f10x_it.o(.text.USART3_IRQHandler) for USART3_IRQHandler
    startup_cs32f103xb.o(.text) refers to system_cs32f10x.o(.text.SystemInit) for SystemInit
    startup_cs32f103xb.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_cs32f10x.o(.text.SystemInit) refers to system_cs32f10x.o(.text.SetSysClock) for SetSysClock
    system_cs32f10x.o(.ARM.exidx.text.SystemInit) refers to system_cs32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_cs32f10x.o(.text.SetSysClock) refers to system_cs32f10x.o(.text.set_sysclk_freq_72M) for set_sysclk_freq_72M
    system_cs32f10x.o(.ARM.exidx.text.SetSysClock) refers to system_cs32f10x.o(.text.SetSysClock) for [Anonymous Symbol]
    system_cs32f10x.o(.text.SystemCoreClockUpdate) refers to system_cs32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_cs32f10x.o(.text.SystemCoreClockUpdate) refers to system_cs32f10x.o(.data.AHBPrescTable) for AHBPrescTable
    system_cs32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_cs32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_cs32f10x.o(.ARM.exidx.text.set_sysclk_freq_72M) refers to system_cs32f10x.o(.text.set_sysclk_freq_72M) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to init.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to init.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to init.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to init.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_cs32f103xb.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_cs32f103xb.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.delay), (8 bytes).
    Removing main.o(.text.led1_toggle), (18 bytes).
    Removing main.o(.ARM.exidx.text.led1_toggle), (8 bytes).
    Removing main.o(.text.led2_toggle), (18 bytes).
    Removing main.o(.ARM.exidx.text.led2_toggle), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing cs32f10x_it.o(.text), (0 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.USART3_IRQHandler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.TIM1_UP_IRQHandler), (8 bytes).
    Removing cs32f10x_it.o(.ARM.exidx.text.EXTI4_IRQHandler), (8 bytes).
    Removing init.o(.text), (0 bytes).
    Removing init.o(.ARM.exidx.text.log_init), (8 bytes).
    Removing init.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing init.o(.text.fgetc), (58 bytes).
    Removing init.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing init.o(.ARM.exidx.text.uart_init), (8 bytes).
    Removing init.o(.ARM.exidx.text.other_io_init), (8 bytes).
    Removing init.o(.ARM.exidx.text.tick_init), (8 bytes).
    Removing init.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing init.o(.ARM.exidx.text.nvic_configuration), (8 bytes).
    Removing init.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing init.o(.ARM.exidx.text.tim_init), (8 bytes).
    Removing init.o(.ARM.exidx.text.exti_init), (8 bytes).
    Removing init.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing adc.o(.text), (0 bytes).
    Removing adc.o(.ARM.exidx.text.adc_init_), (8 bytes).
    Removing adc.o(.ARM.exidx.text.task_adc), (8 bytes).
    Removing app.o(.text), (0 bytes).
    Removing app.o(.ARM.exidx.text.f_uaba_open), (8 bytes).
    Removing app.o(.ARM.exidx.text.f_uaba_close), (8 bytes).
    Removing app.o(.ARM.exidx.text.f_uaba_fault_ov), (8 bytes).
    Removing app.o(.text.app_init), (18 bytes).
    Removing app.o(.ARM.exidx.text.app_init), (8 bytes).
    Removing app.o(.ARM.exidx.text.task_app), (8 bytes).
    Removing app.o(.ARM.exidx.text.sys_switch_check), (8 bytes).
    Removing app.o(.ARM.exidx.text.sys_pow_on_off_deal), (8 bytes).
    Removing app.o(.ARM.exidx.text.key_fast_switch), (8 bytes).
    Removing app.o(.ARM.exidx.text.led_app), (8 bytes).
    Removing app.o(.ARM.exidx.text.usba_app), (8 bytes).
    Removing app.o(.ARM.exidx.text.portA_plug_check), (8 bytes).
    Removing app.o(.text.f_uaba_fault_oc), (56 bytes).
    Removing app.o(.ARM.exidx.text.f_uaba_fault_oc), (8 bytes).
    Removing app.o(.bss.sys_switch_check.off_cnt), (1 bytes).
    Removing app.o(.bss.usba_app.oc_cnt2), (1 bytes).
    Removing bms.o(.text), (0 bytes).
    Removing bms.o(.ARM.exidx.text.IIC_WriteData), (8 bytes).
    Removing bms.o(.ARM.exidx.text.IIC_ReadData), (8 bytes).
    Removing bms.o(.text.CopyArray), (66 bytes).
    Removing bms.o(.ARM.exidx.text.CopyArray), (8 bytes).
    Removing bms.o(.ARM.exidx.text.Checksum), (8 bytes).
    Removing bms.o(.ARM.exidx.text.CRC8), (8 bytes).
    Removing bms.o(.ARM.exidx.text.I2C_WriteReg), (8 bytes).
    Removing bms.o(.ARM.exidx.text.I2C_ReadReg), (8 bytes).
    Removing bms.o(.ARM.exidx.text.delay_us_2ms), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_SetRegister), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BMS_FET_ENABLE), (8 bytes).
    Removing bms.o(.ARM.exidx.text.Subcommands), (8 bytes).
    Removing bms.o(.ARM.exidx.text.CommandSubcommands), (8 bytes).
    Removing bms.o(.ARM.exidx.text.bms_init), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_Init), (8 bytes).
    Removing bms.o(.text.read_data_cmd_long), (66 bytes).
    Removing bms.o(.ARM.exidx.text.read_data_cmd_long), (8 bytes).
    Removing bms.o(.ARM.exidx.text.DirectCommands), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BSWBq769x2ReadBatteryStatus), (8 bytes).
    Removing bms.o(.ARM.exidx.text.load_bms_init_array), (8 bytes).
    Removing bms.o(.ARM.exidx.text.turn_to_CFGUPDATE), (8 bytes).
    Removing bms.o(.text.set_low_cell_predsg), (76 bytes).
    Removing bms.o(.ARM.exidx.text.set_low_cell_predsg), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_DSG_OFF), (8 bytes).
    Removing bms.o(.text.BQ769x2_RESET_DSG_OFF), (16 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_RESET_DSG_OFF), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_CHG_OFF), (8 bytes).
    Removing bms.o(.text.BQ769x2_RESET_CHG_OFF), (14 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_RESET_CHG_OFF), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadFETStatus), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadAlarmStatus), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadAlarmRaw), (24 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadAlarmRaw), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusA), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusB), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadSafetyStatusC), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadPFStatusA), (34 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusA), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadPFStatusB), (34 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusB), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadPFStatusC), (34 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadPFStatusC), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadVoltage), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadAllVoltages), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_123), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_5), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_7), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_Read_Vcells_9), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadCurrent), (8 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadTemperature), (8 bytes).
    Removing bms.o(.text.BQ769x2_ReadPassQ), (56 bytes).
    Removing bms.o(.ARM.exidx.text.BQ769x2_ReadPassQ), (8 bytes).
    Removing bms.o(.bss.LD_ON), (1 bytes).
    Removing bms.o(.bss.error_long_flag), (2 bytes).
    Removing bms.o(.bss.bms_pro_flag), (16 bytes).
    Removing bms.o(.bss.AccumulatedCharge_Int), (4 bytes).
    Removing bms.o(.bss.AccumulatedCharge_Frac), (4 bytes).
    Removing bms.o(.bss.AccumulatedCharge_Time), (4 bytes).
    Removing bms.o(.bss.pin_io_mode_cache), (4 bytes).
    Removing communication.o(.text), (0 bytes).
    Removing communication.o(.ARM.exidx.text.task_com_rx), (8 bytes).
    Removing communication.o(.ARM.exidx.text.task_com_tx), (8 bytes).
    Removing communication.o(.ARM.exidx.text.transmit_data), (8 bytes).
    Removing communication.o(.text.data_printf), (106 bytes).
    Removing communication.o(.ARM.exidx.text.data_printf), (8 bytes).
    Removing communication.o(.rodata.str1.1), (17 bytes).
    Removing communication.o(.bss.rx_cnt), (1 bytes).
    Removing communication.o(.bss.rx_buffer), (4 bytes).
    Removing debug.o(.text), (0 bytes).
    Removing debug.o(.ARM.exidx.text.task_debug), (8 bytes).
    Removing key.o(.text), (0 bytes).
    Removing key.o(.ARM.exidx.text.key_init), (8 bytes).
    Removing key.o(.ARM.exidx.text.task_key), (8 bytes).
    Removing led.o(.text), (0 bytes).
    Removing led.o(.ARM.exidx.text.f_led_show_battery), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_discharge), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_charge), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_health), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_alloff), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_port_normal), (8 bytes).
    Removing led.o(.ARM.exidx.text.f_led_port_warning), (8 bytes).
    Removing led.o(.ARM.exidx.text.led_init), (8 bytes).
    Removing led.o(.ARM.exidx.text.task_led), (8 bytes).
    Removing led.o(.ARM.exidx.text.led_bat_show), (8 bytes).
    Removing led.o(.ARM.exidx.text.led_port_show), (8 bytes).
    Removing led.o(.ARM.exidx.text.led_pwm_control), (8 bytes).
    Removing led.o(.text.swd_to_gpio), (2 bytes).
    Removing led.o(.ARM.exidx.text.swd_to_gpio), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.circ_buffer_init), (22 bytes).
    Removing queue.o(.ARM.exidx.text.circ_buffer_init), (8 bytes).
    Removing queue.o(.ARM.exidx.text.circ_buffer_push), (8 bytes).
    Removing queue.o(.ARM.exidx.text.circ_buffer_pop), (8 bytes).
    Removing queue.o(.text.output_buf), (72 bytes).
    Removing queue.o(.ARM.exidx.text.output_buf), (8 bytes).
    Removing queue.o(.ARM.exidx.text.ProcessPacket), (8 bytes).
    Removing queue.o(.text.ProcessData), (198 bytes).
    Removing queue.o(.ARM.exidx.text.ProcessData), (8 bytes).
    Removing queue.o(.ARM.exidx.text.ProcessData1), (8 bytes).
    Removing queue.o(.bss.ProcessData.packet), (50 bytes).
    Removing queue.o(.bss.ProcessData.packetIndex), (2 bytes).
    Removing queue.o(.bss.ProcessData.receiving), (1 bytes).
    Removing task.o(.text), (0 bytes).
    Removing task.o(.ARM.exidx.text.Task_Marks_Handler_Callback), (8 bytes).
    Removing task.o(.ARM.exidx.text.Task_Pro_Handler_Callback), (8 bytes).
    Removing iic.o(.text), (0 bytes).
    Removing iic.o(.text.i2c_init_), (142 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_init_), (8 bytes).
    Removing iic.o(.text.i2c_master_write), (368 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_master_write), (8 bytes).
    Removing iic.o(.text.i2c_master_read), (342 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_master_read), (8 bytes).
    Removing iic.o(.text.iic_test), (16 bytes).
    Removing iic.o(.ARM.exidx.text.iic_test), (8 bytes).
    Removing iic.o(.ARM.exidx.text.i2c_init_2), (8 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_Start), (8 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_Stop), (8 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_SendAck), (8 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_WaitAck), (8 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_SendByte), (8 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_ReceiveByte), (8 bytes).
    Removing iic.o(.text.I2C_WriteData), (68 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_WriteData), (8 bytes).
    Removing iic.o(.text.I2C_ReadData), (92 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_ReadData), (8 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_WriteMulti), (8 bytes).
    Removing iic.o(.ARM.exidx.text.I2C_ReadMulti), (8 bytes).
    Removing iic.o(.rodata.str1.1), (10 bytes).
    Removing iic.o(.data.iic_test.data), (4 bytes).
    Removing iic.o(.bss.iic_test.readBuf), (4 bytes).
    Removing bms_pro.o(.text), (0 bytes).
    Removing bms_pro.o(.text.find_max_min), (478 bytes).
    Removing bms_pro.o(.ARM.exidx.text.find_max_min), (8 bytes).
    Removing bms_pro.o(.text.protect_scan_flag), (2918 bytes).
    Removing bms_pro.o(.ARM.exidx.text.protect_scan_flag), (8 bytes).
    Removing bms_pro.o(.ARM.exidx.text.task_bms), (8 bytes).
    Removing bms_pro.o(.bss.bms_vbat_sum), (2 bytes).
    Removing bms_pro.o(.bss.max_cell_V), (2 bytes).
    Removing bms_pro.o(.bss.min_cell_V), (2 bytes).
    Removing bms_pro.o(.bss.bms_tmp_H), (2 bytes).
    Removing bms_pro.o(.bss.bms_tmp_L), (2 bytes).
    Removing bms_pro.o(.bss.i_bms_tmp_H), (2 bytes).
    Removing bms_pro.o(.bss.i_bms_tmp_L), (2 bytes).
    Removing bms_pro.o(.bss.err_0v5_cnt), (1 bytes).
    Removing bms_pro.o(.bss.err_3v8_cnt), (1 bytes).
    Removing bms_pro.o(.bss.err_1v8_cnt), (1 bytes).
    Removing bms_pro.o(.bss.t_bms_rst_flag), (2 bytes).
    Removing bms_pro.o(.bss.protect_scan_flag.pidx), (1 bytes).
    Removing bms_pro.o(.bss.bms_mos_err_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_cell_chg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_cell_chg_curr_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_cell_dsg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_t_mos_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_t_err_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_th_chg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_tl_chg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_th_dsg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_tl_dsg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_curr_chg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_curr_dsg_cnt), (1 bytes).
    Removing bms_pro.o(.bss.bms_rst_cnt), (1 bytes).
    Removing bms_pro.o(.bss.dc_reset_flag), (1 bytes).
    Removing bms_pro.o(.bss.bms_test_step), (2 bytes).
    Removing bms_pro.o(.bss.bms_bat_full_cnt), (1 bytes).
    Removing bms_pro.o(.bss.flag_chg_dsg), (1 bytes).
    Removing cs32f10x_adc.o(.text), (0 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_init), (8 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_struct_init), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_disc_mode_channel_config), (38 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_disc_mode_channel_config), (8 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_regular_channel_config), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_inject_ext_trigger_config), (26 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_inject_ext_trigger_config), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_inject_channel_config), (152 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_inject_channel_config), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_inject_sequence_length_config), (40 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_inject_sequence_length_config), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_inject_offset_set), (32 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_inject_offset_set), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_inject_conv_value_get), (26 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_inject_conv_value_get), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_analog_wdt_threshold_set), (32 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_analog_wdt_threshold_set), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_analog_channel_config), (30 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_analog_channel_config), (8 bytes).
    Removing cs32f10x_adc.o(.text.adc_analog_wdt_config), (32 bytes).
    Removing cs32f10x_adc.o(.ARM.exidx.text.adc_analog_wdt_config), (8 bytes).
    Removing cs32f10x_bkp.o(.text), (0 bytes).
    Removing cs32f10x_bkp.o(.text.bkp_tamper_active_level_config), (28 bytes).
    Removing cs32f10x_bkp.o(.ARM.exidx.text.bkp_tamper_active_level_config), (8 bytes).
    Removing cs32f10x_bkp.o(.text.bkp_rtc_output_config), (28 bytes).
    Removing cs32f10x_bkp.o(.ARM.exidx.text.bkp_rtc_output_config), (8 bytes).
    Removing cs32f10x_bkp.o(.text.bkp_rtc_cali_data_set), (32 bytes).
    Removing cs32f10x_bkp.o(.ARM.exidx.text.bkp_rtc_cali_data_set), (8 bytes).
    Removing cs32f10x_bkp.o(.text.bkp_backup_register_write), (34 bytes).
    Removing cs32f10x_bkp.o(.ARM.exidx.text.bkp_backup_register_write), (8 bytes).
    Removing cs32f10x_bkp.o(.text.bkp_backup_register_read), (28 bytes).
    Removing cs32f10x_bkp.o(.ARM.exidx.text.bkp_backup_register_read), (8 bytes).
    Removing cs32f10x_can.o(.text), (0 bytes).
    Removing cs32f10x_can.o(.text.can_init), (452 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_init), (8 bytes).
    Removing cs32f10x_can.o(.text.can_config_struct_init), (64 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_config_struct_init), (8 bytes).
    Removing cs32f10x_can.o(.text.can_work_mode_config), (224 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_work_mode_config), (8 bytes).
    Removing cs32f10x_can.o(.text.can_filter_init), (338 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_filter_init), (8 bytes).
    Removing cs32f10x_can.o(.text.can_time_trigger_enable_ctrl), (128 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_time_trigger_enable_ctrl), (8 bytes).
    Removing cs32f10x_can.o(.text.can_message_send), (302 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_message_send), (8 bytes).
    Removing cs32f10x_can.o(.text.can_tx_status_get), (246 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_tx_status_get), (8 bytes).
    Removing cs32f10x_can.o(.text.can_tx_abort_set), (68 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_tx_abort_set), (8 bytes).
    Removing cs32f10x_can.o(.text.can_message_receive), (340 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_message_receive), (8 bytes).
    Removing cs32f10x_can.o(.text.can_rx_fifo_release), (44 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_rx_fifo_release), (8 bytes).
    Removing cs32f10x_can.o(.text.can_fifo_msg_num_get), (58 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_fifo_msg_num_get), (8 bytes).
    Removing cs32f10x_can.o(.text.can_sleep_set), (112 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_sleep_set), (8 bytes).
    Removing cs32f10x_can.o(.text.can_wakeup_set), (106 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_wakeup_set), (8 bytes).
    Removing cs32f10x_can.o(.text.can_op_mode_switch_ctrl), (332 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_op_mode_switch_ctrl), (8 bytes).
    Removing cs32f10x_can.o(.text.can_flag_status_get), (246 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_flag_status_get), (8 bytes).
    Removing cs32f10x_can.o(.text.can_flag_clear), (134 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_flag_clear), (8 bytes).
    Removing cs32f10x_can.o(.text.can_int_status_get), (406 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_int_status_get), (8 bytes).
    Removing cs32f10x_can.o(.text.can_int_flag_clear), (238 bytes).
    Removing cs32f10x_can.o(.ARM.exidx.text.can_int_flag_clear), (8 bytes).
    Removing cs32f10x_crc.o(.text), (0 bytes).
    Removing cs32f10x_crc.o(.text.crc_def_init), (26 bytes).
    Removing cs32f10x_crc.o(.ARM.exidx.text.crc_def_init), (8 bytes).
    Removing cs32f10x_crc.o(.text.crc_crc32_calc), (22 bytes).
    Removing cs32f10x_crc.o(.ARM.exidx.text.crc_crc32_calc), (8 bytes).
    Removing cs32f10x_crc.o(.text.crc_data_buffer_calc), (66 bytes).
    Removing cs32f10x_crc.o(.ARM.exidx.text.crc_data_buffer_calc), (8 bytes).
    Removing cs32f10x_debug.o(.text), (0 bytes).
    Removing cs32f10x_debug.o(.text.debug_revision_id_get), (14 bytes).
    Removing cs32f10x_debug.o(.ARM.exidx.text.debug_revision_id_get), (8 bytes).
    Removing cs32f10x_debug.o(.text.debug_dev_id_get), (16 bytes).
    Removing cs32f10x_debug.o(.ARM.exidx.text.debug_dev_id_get), (8 bytes).
    Removing cs32f10x_debug.o(.text.debug_low_power_config), (56 bytes).
    Removing cs32f10x_debug.o(.ARM.exidx.text.debug_low_power_config), (8 bytes).
    Removing cs32f10x_dma.o(.text), (0 bytes).
    Removing cs32f10x_dma.o(.text.dma_def_init), (82 bytes).
    Removing cs32f10x_dma.o(.ARM.exidx.text.dma_def_init), (8 bytes).
    Removing cs32f10x_dma.o(.text.dma_init), (154 bytes).
    Removing cs32f10x_dma.o(.ARM.exidx.text.dma_init), (8 bytes).
    Removing cs32f10x_dma.o(.text.dma_transfer_config), (76 bytes).
    Removing cs32f10x_dma.o(.ARM.exidx.text.dma_transfer_config), (8 bytes).
    Removing cs32f10x_dma.o(.text.dma_struct_config), (54 bytes).
    Removing cs32f10x_dma.o(.ARM.exidx.text.dma_struct_config), (8 bytes).
    Removing cs32f10x_exti.o(.text), (0 bytes).
    Removing cs32f10x_exti.o(.text.exti_def_init), (54 bytes).
    Removing cs32f10x_exti.o(.ARM.exidx.text.exti_def_init), (8 bytes).
    Removing cs32f10x_flash.o(.text), (0 bytes).
    Removing cs32f10x_flash.o(.text.flash_wait_counter_set), (28 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_wait_counter_set), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_unlock), (50 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_unlock), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_lock), (18 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_lock), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_page_erase), (104 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_page_erase), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_operation_wait), (110 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_operation_wait), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_all_pages_erase), (66 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_all_pages_erase), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_word_program), (104 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_word_program), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_half_word_program), (72 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_half_word_program), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_unlock), (50 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_unlock), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_lock), (18 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_lock), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_erase), (212 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_erase), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_user_set), (42 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_user_set), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_set), (342 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_set), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_write_protect_enable), (190 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_write_protect_enable), (8 bytes).
    Removing cs32f10x_flash.o(.text.flash_option_bytes_read_protect_config), (72 bytes).
    Removing cs32f10x_flash.o(.ARM.exidx.text.flash_option_bytes_read_protect_config), (8 bytes).
    Removing cs32f10x_fwdt.o(.text), (0 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_write_access_enable_ctrl), (24 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_write_access_enable_ctrl), (8 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_prescaler_set), (24 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_prescaler_set), (8 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_reload_set), (24 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_reload_set), (8 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_reload_counter), (16 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_reload_counter), (8 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_enable), (16 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_enable), (8 bytes).
    Removing cs32f10x_fwdt.o(.text.fwdt_flag_status_get), (56 bytes).
    Removing cs32f10x_fwdt.o(.ARM.exidx.text.fwdt_flag_status_get), (8 bytes).
    Removing cs32f10x_gpio.o(.text), (0 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_mode_config), (8 bytes).
    Removing cs32f10x_gpio.o(.text.gpio_def_init), (314 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_def_init), (8 bytes).
    Removing cs32f10x_gpio.o(.text.gpio_af_deinit), (26 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_af_deinit), (8 bytes).
    Removing cs32f10x_gpio.o(.text.gpio_pin_lock_set), (60 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_pin_lock_set), (8 bytes).
    Removing cs32f10x_gpio.o(.text.gpio_event_config), (42 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_event_config), (8 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_pin_remap_config), (8 bytes).
    Removing cs32f10x_gpio.o(.ARM.exidx.text.gpio_exti_pin_config), (8 bytes).
    Removing cs32f10x_i2c.o(.text), (0 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_deinit), (76 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_deinit), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_struct_init), (54 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_struct_init), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_init), (372 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_init), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_slave_address2_config), (32 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_slave_address2_config), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_interrupt_config), (54 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_config), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_master_send7bits_address), (62 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_master_send7bits_address), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_read_register), (30 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_read_register), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_get_pec), (14 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_get_pec), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_event_check), (80 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_event_check), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_last_event_get), (32 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_last_event_get), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_flag_status_check), (94 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_flag_status_check), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_flag_clear), (18 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_flag_clear), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_interrupt_status_get), (68 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_status_get), (8 bytes).
    Removing cs32f10x_i2c.o(.text.i2c_interrupt_clear), (18 bytes).
    Removing cs32f10x_i2c.o(.ARM.exidx.text.i2c_interrupt_clear), (8 bytes).
    Removing cs32f10x_misc.o(.text), (0 bytes).
    Removing cs32f10x_misc.o(.ARM.exidx.text.nvic_priority_group_config), (8 bytes).
    Removing cs32f10x_misc.o(.ARM.exidx.text.nvic_init), (8 bytes).
    Removing cs32f10x_misc.o(.text.nvic_vector_table_set), (36 bytes).
    Removing cs32f10x_misc.o(.ARM.exidx.text.nvic_vector_table_set), (8 bytes).
    Removing cs32f10x_misc.o(.text.nvic_sys_lowpwr_config), (62 bytes).
    Removing cs32f10x_misc.o(.ARM.exidx.text.nvic_sys_lowpwr_config), (8 bytes).
    Removing cs32f10x_misc.o(.text.systick_clk_src_config), (52 bytes).
    Removing cs32f10x_misc.o(.ARM.exidx.text.systick_clk_src_config), (8 bytes).
    Removing cs32f10x_pmu.o(.text), (0 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_deinit), (26 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_deinit), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_vbat_domain_write_config), (34 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_vbat_domain_write_config), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_lvd_voltage_select), (34 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_lvd_voltage_select), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_lvd_enable_config), (34 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_lvd_enable_config), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_wkup_pin_config), (34 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_wkup_pin_config), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_stop_mode_enter), (94 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_stop_mode_enter), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_standby_enter), (44 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_standby_enter), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_flag_get), (46 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_flag_get), (8 bytes).
    Removing cs32f10x_pmu.o(.text.pmu_flag_clear), (24 bytes).
    Removing cs32f10x_pmu.o(.ARM.exidx.text.pmu_flag_clear), (8 bytes).
    Removing cs32f10x_rcu.o(.text), (0 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_def_init), (82 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_def_init), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_hxt_stabilization_wait), (116 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_hxt_stabilization_wait), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_hxt_status_set), (102 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_hxt_status_set), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_hrc_calibration_adjust), (34 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_hrc_calibration_adjust), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_pll_config), (34 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_pll_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_clkout_config), (28 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_clkout_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_sysclk_config), (28 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_sysclk_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_sysclk_src_get), (16 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_sysclk_src_get), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_pclk1_config), (28 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_pclk1_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_pclk2_config), (30 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_pclk2_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_hclk_config), (28 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_hclk_config), (8 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_adcclk_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_usbclk_config), (28 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_usbclk_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_rtcclk_config), (28 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_rtcclk_config), (8 bytes).
    Removing cs32f10x_rcu.o(.text.rcu_clkready_reset_flag_get), (136 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_clkready_reset_flag_get), (8 bytes).
    Removing cs32f10x_rcu.o(.ARM.exidx.text.rcu_clk_freq_get), (8 bytes).
    Removing cs32f10x_rtc.o(.text), (0 bytes).
    Removing cs32f10x_rtc.o(.text.rtc_counter_set), (60 bytes).
    Removing cs32f10x_rtc.o(.ARM.exidx.text.rtc_counter_set), (8 bytes).
    Removing cs32f10x_rtc.o(.text.rtc_prescaler_set), (60 bytes).
    Removing cs32f10x_rtc.o(.ARM.exidx.text.rtc_prescaler_set), (8 bytes).
    Removing cs32f10x_rtc.o(.text.rtc_alarm_set), (60 bytes).
    Removing cs32f10x_rtc.o(.ARM.exidx.text.rtc_alarm_set), (8 bytes).
    Removing cs32f10x_rtc.o(.text.rtc_wait_for_synchronize), (46 bytes).
    Removing cs32f10x_rtc.o(.ARM.exidx.text.rtc_wait_for_synchronize), (8 bytes).
    Removing cs32f10x_spi.o(.text), (0 bytes).
    Removing cs32f10x_spi.o(.text.spi_config_struct_init), (48 bytes).
    Removing cs32f10x_spi.o(.ARM.exidx.text.spi_config_struct_init), (8 bytes).
    Removing cs32f10x_spi.o(.text.spi_init), (78 bytes).
    Removing cs32f10x_spi.o(.ARM.exidx.text.spi_init), (8 bytes).
    Removing cs32f10x_spi.o(.text.spi_transmit_direct_set), (30 bytes).
    Removing cs32f10x_spi.o(.ARM.exidx.text.spi_transmit_direct_set), (8 bytes).
    Removing cs32f10x_spi.o(.text.spi_software_nss_config), (30 bytes).
    Removing cs32f10x_spi.o(.ARM.exidx.text.spi_software_nss_config), (8 bytes).
    Removing cs32f10x_tim.o(.text), (0 bytes).
    Removing cs32f10x_tim.o(.text.tim_def_init), (352 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_def_init), (8 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_base_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_base_struct_init), (34 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_base_struct_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_prescaler_set), (32 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_prescaler_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_count_pattern_set), (30 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_count_pattern_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_update_request_set), (30 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_update_request_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_clock_division_set), (30 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_clock_division_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_protect_config), (42 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_protect_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_protect_struct_init), (38 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_protect_struct_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_init), (244 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_struct_init), (46 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_struct_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_mode_set), (96 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_mode_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_preload_set), (70 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_preload_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_fast_set), (70 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_fast_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_clear_set), (70 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_clear_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chcc_polarity_set), (44 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chcc_polarity_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chncc_polarity_set), (44 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chncc_polarity_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chcc_enable_ctrl), (68 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chcc_enable_ctrl), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chncc_enable_ctrl), (68 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chncc_enable_ctrl), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chic_predivider_set), (70 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chic_predivider_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chic_init), (56 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chic_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chic_config), (168 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chic_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_chic_struct_init), (32 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_chic_struct_init), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_pwmi_config), (238 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_pwmi_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_dma_access_config), (30 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_dma_access_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_internal_clock_config), (18 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_internal_clock_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_input_trigger_set), (30 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_input_trigger_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_internal_trigger_external_clock_config), (34 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_internal_trigger_external_clock_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_ti_external_clock_config), (100 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_ti_external_clock_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_external_trigger_config), (52 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_external_trigger_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_external_clock_mode1_config), (52 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_external_clock_mode1_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_external_clock_mode2_config), (50 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_external_clock_mode2_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_trigger_output_set), (30 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_trigger_output_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_slave_mode_config), (30 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_slave_mode_config), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_master_slave_set), (30 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_master_slave_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_encoder_interface_set), (82 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_encoder_interface_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_pulse_mode_set), (30 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_pulse_mode_set), (8 bytes).
    Removing cs32f10x_tim.o(.text.tim_choc_forced_set), (70 bytes).
    Removing cs32f10x_tim.o(.ARM.exidx.text.tim_choc_forced_set), (8 bytes).
    Removing cs32f10x_usart.o(.text), (0 bytes).
    Removing cs32f10x_usart.o(.text.usart_def_init), (226 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_def_init), (8 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_init), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_config_struct_init), (40 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_config_struct_init), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_synchronous_clock_init), (80 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_synchronous_clock_init), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_synchronous_clock_struct_init), (26 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_synchronous_clock_struct_init), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_address_set), (30 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_address_set), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_recv_wakeup_config), (26 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_recv_wakeup_config), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_lin_break_detection_length_confiig), (26 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_lin_break_detection_length_confiig), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_break_frame_send), (18 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_break_frame_send), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_sc_guard_time_set), (32 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_sc_guard_time_set), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_prescaler_set), (30 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_prescaler_set), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_sc_nack_enable), (46 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_sc_nack_enable), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_half_duplex_enable), (46 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_half_duplex_enable), (8 bytes).
    Removing cs32f10x_usart.o(.text.usart_irda_low_power_enable), (46 bytes).
    Removing cs32f10x_usart.o(.ARM.exidx.text.usart_irda_low_power_enable), (8 bytes).
    Removing cs32f10x_wwdt.o(.text), (0 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_def_init), (26 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_def_init), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_prescaler_set), (36 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_prescaler_set), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_window_value_set), (48 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_window_value_set), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_interrupt_enable), (18 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_interrupt_enable), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_counter_set), (28 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_counter_set), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_enable), (28 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_enable), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_status_flag_get), (46 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_status_flag_get), (8 bytes).
    Removing cs32f10x_wwdt.o(.text.wwdt_flag_clear), (14 bytes).
    Removing cs32f10x_wwdt.o(.ARM.exidx.text.wwdt_flag_clear), (8 bytes).
    Removing startup_cs32f103xb.o(HEAP), (512 bytes).
    Removing system_cs32f10x.o(.text), (0 bytes).
    Removing system_cs32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_cs32f10x.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_cs32f10x.o(.text.SystemCoreClockUpdate), (290 bytes).
    Removing system_cs32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_cs32f10x.o(.ARM.exidx.text.set_sysclk_freq_72M), (8 bytes).
    Removing system_cs32f10x.o(.data.AHBPrescTable), (16 bytes).

608 unused section(s) (total 22246 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    RTE/Device/CS32F103VB/startup_cs32f103xb.s 0x00000000   Number         0  startup_cs32f103xb.o ABSOLUTE
    adc.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    app.c                                    0x00000000   Number         0  app.o ABSOLUTE
    bms.c                                    0x00000000   Number         0  bms.o ABSOLUTE
    bms_pro.c                                0x00000000   Number         0  bms_pro.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    communication.c                          0x00000000   Number         0  communication.o ABSOLUTE
    cs32f10x_adc.c                           0x00000000   Number         0  cs32f10x_adc.o ABSOLUTE
    cs32f10x_bkp.c                           0x00000000   Number         0  cs32f10x_bkp.o ABSOLUTE
    cs32f10x_can.c                           0x00000000   Number         0  cs32f10x_can.o ABSOLUTE
    cs32f10x_crc.c                           0x00000000   Number         0  cs32f10x_crc.o ABSOLUTE
    cs32f10x_debug.c                         0x00000000   Number         0  cs32f10x_debug.o ABSOLUTE
    cs32f10x_dma.c                           0x00000000   Number         0  cs32f10x_dma.o ABSOLUTE
    cs32f10x_exti.c                          0x00000000   Number         0  cs32f10x_exti.o ABSOLUTE
    cs32f10x_flash.c                         0x00000000   Number         0  cs32f10x_flash.o ABSOLUTE
    cs32f10x_fwdt.c                          0x00000000   Number         0  cs32f10x_fwdt.o ABSOLUTE
    cs32f10x_gpio.c                          0x00000000   Number         0  cs32f10x_gpio.o ABSOLUTE
    cs32f10x_i2c.c                           0x00000000   Number         0  cs32f10x_i2c.o ABSOLUTE
    cs32f10x_it.c                            0x00000000   Number         0  cs32f10x_it.o ABSOLUTE
    cs32f10x_misc.c                          0x00000000   Number         0  cs32f10x_misc.o ABSOLUTE
    cs32f10x_pmu.c                           0x00000000   Number         0  cs32f10x_pmu.o ABSOLUTE
    cs32f10x_rcu.c                           0x00000000   Number         0  cs32f10x_rcu.o ABSOLUTE
    cs32f10x_rtc.c                           0x00000000   Number         0  cs32f10x_rtc.o ABSOLUTE
    cs32f10x_spi.c                           0x00000000   Number         0  cs32f10x_spi.o ABSOLUTE
    cs32f10x_tim.c                           0x00000000   Number         0  cs32f10x_tim.o ABSOLUTE
    cs32f10x_usart.c                         0x00000000   Number         0  cs32f10x_usart.o ABSOLUTE
    cs32f10x_wwdt.c                          0x00000000   Number         0  cs32f10x_wwdt.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    debug.c                                  0x00000000   Number         0  debug.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    iic.c                                    0x00000000   Number         0  iic.o ABSOLUTE
    init.c                                   0x00000000   Number         0  init.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    key.c                                    0x00000000   Number         0  key.o ABSOLUTE
    led.c                                    0x00000000   Number         0  led.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_cs32f10x.c                        0x00000000   Number         0  system_cs32f10x.o ABSOLUTE
    task.c                                   0x00000000   Number         0  task.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_cs32f103xb.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000ec   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000ec   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000f0   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000f4   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000f4   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000f4   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080000fc   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080000fc   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000fc   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000fc   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x08000100   Section       36  startup_cs32f103xb.o(.text)
    .text                                    0x08000124   Section        0  dmul.o(.text)
    .text                                    0x08000208   Section        0  ddiv.o(.text)
    .text                                    0x080002e6   Section        0  dflti.o(.text)
    .text                                    0x08000308   Section        0  dfixi.o(.text)
    .text                                    0x08000346   Section        0  uidiv.o(.text)
    .text                                    0x08000372   Section        0  uldiv.o(.text)
    .text                                    0x080003d4   Section        0  llushr.o(.text)
    .text                                    0x080003f4   Section        0  iusefp.o(.text)
    .text                                    0x080003f4   Section        0  depilogue.o(.text)
    .text                                    0x080004ae   Section        0  dadd.o(.text)
    .text                                    0x080005fc   Section        0  dfixul.o(.text)
    .text                                    0x0800062c   Section       48  cdrcmple.o(.text)
    .text                                    0x0800065c   Section       48  init.o(.text)
    .text                                    0x0800068c   Section        0  llshl.o(.text)
    .text                                    0x080006aa   Section        0  llsshr.o(.text)
    .text                                    0x080006ce   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x08000724   Section        0  bms.o(.text.BMS_FET_ENABLE)
    [Anonymous Symbol]                       0x0800076c   Section        0  bms.o(.text.BQ769x2_CHG_OFF)
    [Anonymous Symbol]                       0x0800077c   Section        0  bms.o(.text.BQ769x2_DSG_OFF)
    [Anonymous Symbol]                       0x0800078c   Section        0  bms.o(.text.BQ769x2_Init)
    [Anonymous Symbol]                       0x080007f8   Section        0  bms.o(.text.BQ769x2_ReadAlarmStatus)
    [Anonymous Symbol]                       0x08000810   Section        0  bms.o(.text.BQ769x2_ReadAllVoltages)
    [Anonymous Symbol]                       0x08000880   Section        0  bms.o(.text.BQ769x2_ReadCurrent)
    [Anonymous Symbol]                       0x0800089c   Section        0  bms.o(.text.BQ769x2_ReadFETStatus)
    [Anonymous Symbol]                       0x08000908   Section        0  bms.o(.text.BQ769x2_ReadSafetyStatusA)
    [Anonymous Symbol]                       0x0800098c   Section        0  bms.o(.text.BQ769x2_ReadSafetyStatusB)
    [Anonymous Symbol]                       0x080009c0   Section        0  bms.o(.text.BQ769x2_ReadSafetyStatusC)
    [Anonymous Symbol]                       0x08000a30   Section        0  bms.o(.text.BQ769x2_ReadTemperature)
    [Anonymous Symbol]                       0x08000a54   Section        0  bms.o(.text.BQ769x2_ReadVoltage)
    [Anonymous Symbol]                       0x08000aa4   Section        0  bms.o(.text.BQ769x2_Read_Vcells_123)
    [Anonymous Symbol]                       0x08000ab8   Section        0  bms.o(.text.BQ769x2_Read_Vcells_5)
    [Anonymous Symbol]                       0x08000ad0   Section        0  bms.o(.text.BQ769x2_Read_Vcells_7)
    [Anonymous Symbol]                       0x08000ae8   Section        0  bms.o(.text.BQ769x2_Read_Vcells_9)
    [Anonymous Symbol]                       0x08000b00   Section        0  bms.o(.text.BQ769x2_SetRegister)
    [Anonymous Symbol]                       0x08000c34   Section        0  bms.o(.text.BSWBq769x2ReadBatteryStatus)
    [Anonymous Symbol]                       0x08000c5c   Section        0  cs32f10x_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x08000c60   Section        0  bms.o(.text.CRC8)
    [Anonymous Symbol]                       0x08000cf8   Section        0  bms.o(.text.Checksum)
    [Anonymous Symbol]                       0x08000d4c   Section        0  bms.o(.text.CommandSubcommands)
    [Anonymous Symbol]                       0x08000d78   Section        0  cs32f10x_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x08000d7c   Section        0  bms.o(.text.DirectCommands)
    [Anonymous Symbol]                       0x08000de4   Section        0  cs32f10x_it.o(.text.EXTI4_IRQHandler)
    [Anonymous Symbol]                       0x08000e30   Section        0  cs32f10x_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08000e34   Section        0  iic.o(.text.I2C_ReadMulti)
    [Anonymous Symbol]                       0x08000ed4   Section        0  bms.o(.text.I2C_ReadReg)
    [Anonymous Symbol]                       0x08000fcc   Section        0  iic.o(.text.I2C_ReceiveByte)
    [Anonymous Symbol]                       0x08001084   Section        0  iic.o(.text.I2C_SendAck)
    [Anonymous Symbol]                       0x080010d0   Section        0  iic.o(.text.I2C_SendByte)
    [Anonymous Symbol]                       0x08001184   Section        0  iic.o(.text.I2C_Start)
    [Anonymous Symbol]                       0x080011b8   Section        0  iic.o(.text.I2C_Stop)
    [Anonymous Symbol]                       0x08001208   Section        0  iic.o(.text.I2C_WaitAck)
    [Anonymous Symbol]                       0x080012a0   Section        0  iic.o(.text.I2C_WriteMulti)
    [Anonymous Symbol]                       0x08001310   Section        0  bms.o(.text.I2C_WriteReg)
    [Anonymous Symbol]                       0x080013fc   Section        0  bms.o(.text.IIC_ReadData)
    [Anonymous Symbol]                       0x08001424   Section        0  bms.o(.text.IIC_WriteData)
    [Anonymous Symbol]                       0x0800144c   Section        0  cs32f10x_it.o(.text.MemManage_Handler)
    [Anonymous Symbol]                       0x08001450   Section        0  cs32f10x_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08001454   Section        0  cs32f10x_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08001458   Section        0  queue.o(.text.ProcessData1)
    [Anonymous Symbol]                       0x08001520   Section        0  queue.o(.text.ProcessPacket)
    [Anonymous Symbol]                       0x08001634   Section        0  cs32f10x_it.o(.text.SVC_Handler)
    SetSysClock                              0x08001639   Thumb Code     8  system_cs32f10x.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08001638   Section        0  system_cs32f10x.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08001640   Section        0  bms.o(.text.Subcommands)
    SysTick_Config                           0x08001735   Thumb Code    82  init.o(.text.SysTick_Config)
    [Anonymous Symbol]                       0x08001734   Section        0  init.o(.text.SysTick_Config)
    [Anonymous Symbol]                       0x08001788   Section        0  cs32f10x_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08001790   Section        0  system_cs32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x080017f8   Section        0  cs32f10x_it.o(.text.TIM1_UP_IRQHandler)
    [Anonymous Symbol]                       0x08001818   Section        0  task.o(.text.Task_Marks_Handler_Callback)
    [Anonymous Symbol]                       0x080018b8   Section        0  task.o(.text.Task_Pro_Handler_Callback)
    [Anonymous Symbol]                       0x0800192c   Section        0  cs32f10x_it.o(.text.USART3_IRQHandler)
    [Anonymous Symbol]                       0x08001990   Section        0  cs32f10x_it.o(.text.UsageFault_Handler)
    __NVIC_EnableIRQ                         0x08001995   Thumb Code    48  init.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08001994   Section        0  init.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x080019c5   Thumb Code    66  init.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x080019c4   Section        0  init.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08001a08   Section        0  cs32f10x_adc.o(.text.adc_init)
    [Anonymous Symbol]                       0x08001a6c   Section        0  adc.o(.text.adc_init_)
    [Anonymous Symbol]                       0x08001bd4   Section        0  cs32f10x_adc.o(.text.adc_regular_channel_config)
    [Anonymous Symbol]                       0x08001cb8   Section        0  cs32f10x_adc.o(.text.adc_struct_init)
    [Anonymous Symbol]                       0x08001cdc   Section        0  bms.o(.text.bms_init)
    [Anonymous Symbol]                       0x08001d64   Section        0  queue.o(.text.circ_buffer_pop)
    [Anonymous Symbol]                       0x08001dbc   Section        0  queue.o(.text.circ_buffer_push)
    [Anonymous Symbol]                       0x08001e20   Section        0  main.o(.text.delay)
    [Anonymous Symbol]                       0x08001e3c   Section        0  bms.o(.text.delay_us_2ms)
    [Anonymous Symbol]                       0x08001e40   Section        0  init.o(.text.exti_init)
    [Anonymous Symbol]                       0x08001e9c   Section        0  led.o(.text.f_led_alloff)
    [Anonymous Symbol]                       0x08001ec4   Section        0  led.o(.text.f_led_charge)
    [Anonymous Symbol]                       0x08001ef8   Section        0  led.o(.text.f_led_discharge)
    [Anonymous Symbol]                       0x08001f28   Section        0  led.o(.text.f_led_health)
    [Anonymous Symbol]                       0x08001f54   Section        0  led.o(.text.f_led_port_normal)
    [Anonymous Symbol]                       0x08001f7c   Section        0  led.o(.text.f_led_port_warning)
    [Anonymous Symbol]                       0x08001fa8   Section        0  led.o(.text.f_led_show_battery)
    [Anonymous Symbol]                       0x08001fd8   Section        0  app.o(.text.f_uaba_close)
    [Anonymous Symbol]                       0x08002010   Section        0  app.o(.text.f_uaba_fault_ov)
    [Anonymous Symbol]                       0x08002048   Section        0  app.o(.text.f_uaba_open)
    [Anonymous Symbol]                       0x08002080   Section        0  init.o(.text.fputc)
    [Anonymous Symbol]                       0x080020b8   Section        0  cs32f10x_gpio.o(.text.gpio_exti_pin_config)
    [Anonymous Symbol]                       0x0800210c   Section        0  cs32f10x_gpio.o(.text.gpio_mode_config)
    [Anonymous Symbol]                       0x080022b4   Section        0  cs32f10x_gpio.o(.text.gpio_pin_remap_config)
    [Anonymous Symbol]                       0x080022e8   Section        0  iic.o(.text.i2c_init_2)
    [Anonymous Symbol]                       0x08002334   Section        0  app.o(.text.key_fast_switch)
    [Anonymous Symbol]                       0x080023e4   Section        0  key.o(.text.key_init)
    [Anonymous Symbol]                       0x08002438   Section        0  app.o(.text.led_app)
    [Anonymous Symbol]                       0x08002570   Section        0  led.o(.text.led_bat_show)
    [Anonymous Symbol]                       0x08003070   Section        0  led.o(.text.led_init)
    [Anonymous Symbol]                       0x0800319c   Section        0  led.o(.text.led_port_show)
    [Anonymous Symbol]                       0x08003384   Section        0  led.o(.text.led_pwm_control)
    [Anonymous Symbol]                       0x08003488   Section        0  bms.o(.text.load_bms_init_array)
    [Anonymous Symbol]                       0x080034e8   Section        0  init.o(.text.log_init)
    [Anonymous Symbol]                       0x08003560   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x080035f0   Section        0  init.o(.text.nvic_configuration)
    [Anonymous Symbol]                       0x08003648   Section        0  cs32f10x_misc.o(.text.nvic_init)
    [Anonymous Symbol]                       0x080036e0   Section        0  cs32f10x_misc.o(.text.nvic_priority_group_config)
    [Anonymous Symbol]                       0x080036fc   Section        0  init.o(.text.other_io_init)
    portA_plug_check                         0x08003781   Thumb Code   100  app.o(.text.portA_plug_check)
    [Anonymous Symbol]                       0x08003780   Section        0  app.o(.text.portA_plug_check)
    [Anonymous Symbol]                       0x080037e4   Section        0  cs32f10x_rcu.o(.text.rcu_adcclk_config)
    [Anonymous Symbol]                       0x08003800   Section        0  cs32f10x_rcu.o(.text.rcu_clk_freq_get)
    set_sysclk_freq_72M                      0x08003971   Thumb Code   290  system_cs32f10x.o(.text.set_sysclk_freq_72M)
    [Anonymous Symbol]                       0x08003970   Section        0  system_cs32f10x.o(.text.set_sysclk_freq_72M)
    [Anonymous Symbol]                       0x08003a94   Section        0  app.o(.text.sys_pow_on_off_deal)
    [Anonymous Symbol]                       0x08003b24   Section        0  app.o(.text.sys_switch_check)
    [Anonymous Symbol]                       0x08003bc8   Section        0  adc.o(.text.task_adc)
    [Anonymous Symbol]                       0x08003d2c   Section        0  app.o(.text.task_app)
    [Anonymous Symbol]                       0x08003d54   Section        0  bms_pro.o(.text.task_bms)
    [Anonymous Symbol]                       0x08003efc   Section        0  communication.o(.text.task_com_rx)
    [Anonymous Symbol]                       0x08003f0c   Section        0  communication.o(.text.task_com_tx)
    [Anonymous Symbol]                       0x08004020   Section        0  debug.o(.text.task_debug)
    [Anonymous Symbol]                       0x08004374   Section        0  key.o(.text.task_key)
    [Anonymous Symbol]                       0x080045b8   Section        0  led.o(.text.task_led)
    [Anonymous Symbol]                       0x080045d4   Section        0  init.o(.text.tick_init)
    [Anonymous Symbol]                       0x080045fc   Section        0  cs32f10x_tim.o(.text.tim_base_init)
    [Anonymous Symbol]                       0x0800466c   Section        0  init.o(.text.tim_init)
    [Anonymous Symbol]                       0x080046e0   Section        0  communication.o(.text.transmit_data)
    [Anonymous Symbol]                       0x08004740   Section        0  bms.o(.text.turn_to_CFGUPDATE)
    [Anonymous Symbol]                       0x080047c0   Section        0  init.o(.text.uart_init)
    [Anonymous Symbol]                       0x08004844   Section        0  cs32f10x_usart.o(.text.usart_init)
    [Anonymous Symbol]                       0x080048f4   Section        0  app.o(.text.usba_app)
    i.__0printf                              0x08004bcc   Section        0  printfa.o(i.__0printf)
    i.__scatterload_copy                     0x08004bec   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08004bfa   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08004bfc   Section       14  handlers.o(i.__scatterload_zeroinit)
    _fp_digits                               0x08004c0d   Thumb Code   366  printfa.o(i._fp_digits)
    i._fp_digits                             0x08004c0c   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x08004d91   Thumb Code  1744  printfa.o(i._printf_core)
    i._printf_core                           0x08004d90   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x0800546d   Thumb Code    36  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x0800546c   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x08005491   Thumb Code    46  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x08005490   Section        0  printfa.o(i._printf_pre_padding)
    ADC_pdiv_table                           0x080054be   Data           4  cs32f10x_rcu.o(.rodata.ADC_pdiv_table)
    [Anonymous Symbol]                       0x080054be   Section        0  cs32f10x_rcu.o(.rodata.ADC_pdiv_table)
    APBAHB_pdiv_table                        0x080054c2   Data          16  cs32f10x_rcu.o(.rodata.APBAHB_pdiv_table)
    [Anonymous Symbol]                       0x080054c2   Section        0  cs32f10x_rcu.o(.rodata.APBAHB_pdiv_table)
    .L.str                                   0x080054d2   Data          13  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080054d2   Section        0  main.o(.rodata.str1.1)
    .L.str                                   0x080054df   Data           9  app.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080054df   Section        0  app.o(.rodata.str1.1)
    .L.str                                   0x080054e8   Data          13  app.o(.rodata.str1.1)
    .L.str.1                                 0x080054e8   Data          13  app.o(.rodata.str1.1)
    .L.str.2                                 0x080054f5   Data          14  app.o(.rodata.str1.1)
    .L.str                                   0x08005503   Data           6  bms.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08005503   Section        0  bms.o(.rodata.str1.1)
    .L.str.17                                0x08005509   Data          24  debug.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08005509   Section        0  debug.o(.rodata.str1.1)
    .L.str.35                                0x08005521   Data          25  debug.o(.rodata.str1.1)
    .L.str.30                                0x0800553a   Data          20  debug.o(.rodata.str1.1)
    .L.str.27                                0x0800554e   Data          24  debug.o(.rodata.str1.1)
    .L.str.31                                0x08005566   Data          20  debug.o(.rodata.str1.1)
    .L.str.28                                0x0800557a   Data          24  debug.o(.rodata.str1.1)
    .L.str.32                                0x08005592   Data          20  debug.o(.rodata.str1.1)
    .L.str.29                                0x080055a6   Data          24  debug.o(.rodata.str1.1)
    .L.str.21                                0x080055be   Data          44  debug.o(.rodata.str1.1)
    .L.str.20                                0x080055ea   Data          31  debug.o(.rodata.str1.1)
    .L.str.25                                0x08005609   Data          15  debug.o(.rodata.str1.1)
    .L.str.24                                0x08005618   Data          17  debug.o(.rodata.str1.1)
    .L.str.23                                0x08005629   Data          18  debug.o(.rodata.str1.1)
    .L.str.18                                0x0800563b   Data          19  debug.o(.rodata.str1.1)
    .L.str.14                                0x0800564e   Data          18  debug.o(.rodata.str1.1)
    .L.str.19                                0x08005660   Data          13  debug.o(.rodata.str1.1)
    .L.str.34                                0x0800566d   Data          19  debug.o(.rodata.str1.1)
    .L.str.22                                0x08005680   Data          14  debug.o(.rodata.str1.1)
    .L.str.33                                0x0800568e   Data          15  debug.o(.rodata.str1.1)
    .L.str.26                                0x0800569d   Data          17  debug.o(.rodata.str1.1)
    .L.str.13                                0x080056aa   Data           4  debug.o(.rodata.str1.1)
    .L.str.15                                0x080056ae   Data          24  debug.o(.rodata.str1.1)
    .L.str.16                                0x080056c6   Data          25  debug.o(.rodata.str1.1)
    .L.str.1                                 0x08005764   Data          14  led.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08005764   Section        0  led.o(.rodata.str1.1)
    .L.str                                   0x08005772   Data           6  queue.o(.rodata.str1.1)
    .L.str.3                                 0x08005772   Data          10  queue.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08005772   Section        0  queue.o(.rodata.str1.1)
    .L.str.1                                 0x08005778   Data           3  queue.o(.rodata.str1.1)
    .L.str.2                                 0x0800577c   Data          10  queue.o(.rodata.str1.1)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    Task_Comps                               0x20000008   Data          96  task.o(.data.Task_Comps)
    [Anonymous Symbol]                       0x20000008   Section        0  task.o(.data.Task_Comps)
    ProcessData1.packet                      0x20000304   Data          50  queue.o(.bss.ProcessData1.packet)
    [Anonymous Symbol]                       0x20000304   Section        0  queue.o(.bss.ProcessData1.packet)
    ProcessData1.packetIndex                 0x20000336   Data           2  queue.o(.bss.ProcessData1.packetIndex)
    [Anonymous Symbol]                       0x20000336   Section        0  queue.o(.bss.ProcessData1.packetIndex)
    ProcessData1.receive_status              0x20000338   Data           1  queue.o(.bss.ProcessData1.receive_status)
    [Anonymous Symbol]                       0x20000338   Section        0  queue.o(.bss.ProcessData1.receive_status)
    key_fast_switch.last_level               0x2000038d   Data           1  app.o(.bss.key_fast_switch.last_level)
    [Anonymous Symbol]                       0x2000038d   Section        0  app.o(.bss.key_fast_switch.last_level)
    key_fast_switch.num                      0x2000038e   Data           1  app.o(.bss.key_fast_switch.num)
    [Anonymous Symbol]                       0x2000038e   Section        0  app.o(.bss.key_fast_switch.num)
    key_fast_switch.timer                    0x20000390   Data           2  app.o(.bss.key_fast_switch.timer)
    [Anonymous Symbol]                       0x20000390   Section        0  app.o(.bss.key_fast_switch.timer)
    portA_plug_check.cnt                     0x20000394   Data           1  app.o(.bss.portA_plug_check.cnt)
    [Anonymous Symbol]                       0x20000394   Section        0  app.o(.bss.portA_plug_check.cnt)
    sys_switch_check.key2_high_cnt           0x200003e6   Data           1  app.o(.bss.sys_switch_check.key2_high_cnt)
    [Anonymous Symbol]                       0x200003e6   Section        0  app.o(.bss.sys_switch_check.key2_high_cnt)
    sys_switch_check.key2_low_cnt            0x200003e7   Data           1  app.o(.bss.sys_switch_check.key2_low_cnt)
    [Anonymous Symbol]                       0x200003e7   Section        0  app.o(.bss.sys_switch_check.key2_low_cnt)
    task_bms.idx                             0x200003e8   Data           1  bms_pro.o(.bss.task_bms.idx)
    [Anonymous Symbol]                       0x200003e8   Section        0  bms_pro.o(.bss.task_bms.idx)
    task_debug.i                             0x200003ec   Data           4  debug.o(.bss.task_debug.i)
    [Anonymous Symbol]                       0x200003ec   Section        0  debug.o(.bss.task_debug.i)
    usba_app.oc_cnt                          0x200003f2   Data           1  app.o(.bss.usba_app.oc_cnt)
    [Anonymous Symbol]                       0x200003f2   Section        0  app.o(.bss.usba_app.oc_cnt)
    usba_app.recover_cnt                     0x200003f4   Data           2  app.o(.bss.usba_app.recover_cnt)
    [Anonymous Symbol]                       0x200003f4   Section        0  app.o(.bss.usba_app.recover_cnt)
    usba_app.small_cur_cnt                   0x200003f6   Data           2  app.o(.bss.usba_app.small_cur_cnt)
    [Anonymous Symbol]                       0x200003f6   Section        0  app.o(.bss.usba_app.small_cur_cnt)
    STACK                                    0x20000408   Section     2048  startup_cs32f103xb.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_cs32f103xb.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_cs32f103xb.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_cs32f103xb.o(RESET)
    __main                                   0x080000ed   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000ed   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000f1   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000f5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000f5   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000f5   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000f5   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000fd   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000fd   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x08000101   Thumb Code     8  startup_cs32f103xb.o(.text)
    ADC1_2_IRQHandler                        0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    CAN1_RX1_IRQHandler                      0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    CAN1_SCE_IRQHandler                      0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel2_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel3_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel4_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel5_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel6_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    DMA1_Channel7_IRQHandler                 0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    EXTI0_IRQHandler                         0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    EXTI15_10_IRQHandler                     0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    EXTI1_IRQHandler                         0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    EXTI2_IRQHandler                         0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    EXTI3_IRQHandler                         0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    EXTI9_5_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    FLASH_IRQHandler                         0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    I2C1_ER_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    I2C1_EV_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    I2C2_ER_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    I2C2_EV_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    PVD_IRQHandler                           0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    RCU_IRQHandler                           0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    RTCAlarm_IRQHandler                      0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    RTC_IRQHandler                           0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    SPI1_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    SPI2_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TAMPER_IRQHandler                        0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM1_BRK_IRQHandler                      0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM1_CC_IRQHandler                       0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM2_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM3_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    TIM4_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    USART1_IRQHandler                        0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    USART2_IRQHandler                        0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    USBWakeUp_IRQHandler                     0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    WWDT_IRQHandler                          0x0800011b   Thumb Code     0  startup_cs32f103xb.o(.text)
    __aeabi_dmul                             0x08000125   Thumb Code   228  dmul.o(.text)
    __aeabi_ddiv                             0x08000209   Thumb Code   222  ddiv.o(.text)
    __aeabi_i2d                              0x080002e7   Thumb Code    34  dflti.o(.text)
    __aeabi_d2iz                             0x08000309   Thumb Code    62  dfixi.o(.text)
    __aeabi_uidiv                            0x08000347   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x08000347   Thumb Code    44  uidiv.o(.text)
    __aeabi_uldivmod                         0x08000373   Thumb Code    98  uldiv.o(.text)
    __aeabi_llsr                             0x080003d5   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x080003d5   Thumb Code     0  llushr.o(.text)
    __I$use$fp                               0x080003f5   Thumb Code     0  iusefp.o(.text)
    _double_round                            0x080003f5   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x08000413   Thumb Code   156  depilogue.o(.text)
    __aeabi_dadd                             0x080004af   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x080005f1   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x080005f7   Thumb Code     6  dadd.o(.text)
    __aeabi_d2ulz                            0x080005fd   Thumb Code    48  dfixul.o(.text)
    __aeabi_cdrcmple                         0x0800062d   Thumb Code    48  cdrcmple.o(.text)
    __scatterload                            0x0800065d   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x0800065d   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x0800068d   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x0800068d   Thumb Code     0  llshl.o(.text)
    __aeabi_lasr                             0x080006ab   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x080006ab   Thumb Code     0  llsshr.o(.text)
    __decompress                             0x080006cf   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x080006cf   Thumb Code    86  __dczerorl2.o(.text)
    BMS_FET_ENABLE                           0x08000725   Thumb Code    70  bms.o(.text.BMS_FET_ENABLE)
    BQ769x2_CHG_OFF                          0x0800076d   Thumb Code    14  bms.o(.text.BQ769x2_CHG_OFF)
    BQ769x2_DSG_OFF                          0x0800077d   Thumb Code    16  bms.o(.text.BQ769x2_DSG_OFF)
    BQ769x2_Init                             0x0800078d   Thumb Code   106  bms.o(.text.BQ769x2_Init)
    BQ769x2_ReadAlarmStatus                  0x080007f9   Thumb Code    24  bms.o(.text.BQ769x2_ReadAlarmStatus)
    BQ769x2_ReadAllVoltages                  0x08000811   Thumb Code   112  bms.o(.text.BQ769x2_ReadAllVoltages)
    BQ769x2_ReadCurrent                      0x08000881   Thumb Code    26  bms.o(.text.BQ769x2_ReadCurrent)
    BQ769x2_ReadFETStatus                    0x0800089d   Thumb Code   106  bms.o(.text.BQ769x2_ReadFETStatus)
    BQ769x2_ReadSafetyStatusA                0x08000909   Thumb Code   130  bms.o(.text.BQ769x2_ReadSafetyStatusA)
    BQ769x2_ReadSafetyStatusB                0x0800098d   Thumb Code    52  bms.o(.text.BQ769x2_ReadSafetyStatusB)
    BQ769x2_ReadSafetyStatusC                0x080009c1   Thumb Code   110  bms.o(.text.BQ769x2_ReadSafetyStatusC)
    BQ769x2_ReadTemperature                  0x08000a31   Thumb Code    34  bms.o(.text.BQ769x2_ReadTemperature)
    BQ769x2_ReadVoltage                      0x08000a55   Thumb Code    80  bms.o(.text.BQ769x2_ReadVoltage)
    BQ769x2_Read_Vcells_123                  0x08000aa5   Thumb Code    20  bms.o(.text.BQ769x2_Read_Vcells_123)
    BQ769x2_Read_Vcells_5                    0x08000ab9   Thumb Code    22  bms.o(.text.BQ769x2_Read_Vcells_5)
    BQ769x2_Read_Vcells_7                    0x08000ad1   Thumb Code    24  bms.o(.text.BQ769x2_Read_Vcells_7)
    BQ769x2_Read_Vcells_9                    0x08000ae9   Thumb Code    24  bms.o(.text.BQ769x2_Read_Vcells_9)
    BQ769x2_SetRegister                      0x08000b01   Thumb Code   306  bms.o(.text.BQ769x2_SetRegister)
    BSWBq769x2ReadBatteryStatus              0x08000c35   Thumb Code    40  bms.o(.text.BSWBq769x2ReadBatteryStatus)
    BusFault_Handler                         0x08000c5d   Thumb Code     4  cs32f10x_it.o(.text.BusFault_Handler)
    CRC8                                     0x08000c61   Thumb Code   152  bms.o(.text.CRC8)
    Checksum                                 0x08000cf9   Thumb Code    84  bms.o(.text.Checksum)
    CommandSubcommands                       0x08000d4d   Thumb Code    44  bms.o(.text.CommandSubcommands)
    DebugMon_Handler                         0x08000d79   Thumb Code     2  cs32f10x_it.o(.text.DebugMon_Handler)
    DirectCommands                           0x08000d7d   Thumb Code   102  bms.o(.text.DirectCommands)
    EXTI4_IRQHandler                         0x08000de5   Thumb Code    76  cs32f10x_it.o(.text.EXTI4_IRQHandler)
    HardFault_Handler                        0x08000e31   Thumb Code     4  cs32f10x_it.o(.text.HardFault_Handler)
    I2C_ReadMulti                            0x08000e35   Thumb Code   160  iic.o(.text.I2C_ReadMulti)
    I2C_ReadReg                              0x08000ed5   Thumb Code   248  bms.o(.text.I2C_ReadReg)
    I2C_ReceiveByte                          0x08000fcd   Thumb Code   184  iic.o(.text.I2C_ReceiveByte)
    I2C_SendAck                              0x08001085   Thumb Code    76  iic.o(.text.I2C_SendAck)
    I2C_SendByte                             0x080010d1   Thumb Code   178  iic.o(.text.I2C_SendByte)
    I2C_Start                                0x08001185   Thumb Code    50  iic.o(.text.I2C_Start)
    I2C_Stop                                 0x080011b9   Thumb Code    80  iic.o(.text.I2C_Stop)
    I2C_WaitAck                              0x08001209   Thumb Code   150  iic.o(.text.I2C_WaitAck)
    I2C_WriteMulti                           0x080012a1   Thumb Code   110  iic.o(.text.I2C_WriteMulti)
    I2C_WriteReg                             0x08001311   Thumb Code   236  bms.o(.text.I2C_WriteReg)
    IIC_ReadData                             0x080013fd   Thumb Code    38  bms.o(.text.IIC_ReadData)
    IIC_WriteData                            0x08001425   Thumb Code    38  bms.o(.text.IIC_WriteData)
    MemManage_Handler                        0x0800144d   Thumb Code     4  cs32f10x_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x08001451   Thumb Code     2  cs32f10x_it.o(.text.NMI_Handler)
    PendSV_Handler                           0x08001455   Thumb Code     2  cs32f10x_it.o(.text.PendSV_Handler)
    ProcessData1                             0x08001459   Thumb Code   200  queue.o(.text.ProcessData1)
    ProcessPacket                            0x08001521   Thumb Code   274  queue.o(.text.ProcessPacket)
    SVC_Handler                              0x08001635   Thumb Code     2  cs32f10x_it.o(.text.SVC_Handler)
    Subcommands                              0x08001641   Thumb Code   242  bms.o(.text.Subcommands)
    SysTick_Handler                          0x08001789   Thumb Code     8  cs32f10x_it.o(.text.SysTick_Handler)
    SystemInit                               0x08001791   Thumb Code   102  system_cs32f10x.o(.text.SystemInit)
    TIM1_UP_IRQHandler                       0x080017f9   Thumb Code    30  cs32f10x_it.o(.text.TIM1_UP_IRQHandler)
    Task_Marks_Handler_Callback              0x08001819   Thumb Code   160  task.o(.text.Task_Marks_Handler_Callback)
    Task_Pro_Handler_Callback                0x080018b9   Thumb Code   114  task.o(.text.Task_Pro_Handler_Callback)
    USART3_IRQHandler                        0x0800192d   Thumb Code    98  cs32f10x_it.o(.text.USART3_IRQHandler)
    UsageFault_Handler                       0x08001991   Thumb Code     4  cs32f10x_it.o(.text.UsageFault_Handler)
    adc_init                                 0x08001a09   Thumb Code    98  cs32f10x_adc.o(.text.adc_init)
    adc_init_                                0x08001a6d   Thumb Code   358  adc.o(.text.adc_init_)
    adc_regular_channel_config               0x08001bd5   Thumb Code   226  cs32f10x_adc.o(.text.adc_regular_channel_config)
    adc_struct_init                          0x08001cb9   Thumb Code    36  cs32f10x_adc.o(.text.adc_struct_init)
    bms_init                                 0x08001cdd   Thumb Code   134  bms.o(.text.bms_init)
    circ_buffer_pop                          0x08001d65   Thumb Code    88  queue.o(.text.circ_buffer_pop)
    circ_buffer_push                         0x08001dbd   Thumb Code   100  queue.o(.text.circ_buffer_push)
    delay                                    0x08001e21   Thumb Code    26  main.o(.text.delay)
    delay_us_2ms                             0x08001e3d   Thumb Code     2  bms.o(.text.delay_us_2ms)
    exti_init                                0x08001e41   Thumb Code    90  init.o(.text.exti_init)
    f_led_alloff                             0x08001e9d   Thumb Code    40  led.o(.text.f_led_alloff)
    f_led_charge                             0x08001ec5   Thumb Code    50  led.o(.text.f_led_charge)
    f_led_discharge                          0x08001ef9   Thumb Code    46  led.o(.text.f_led_discharge)
    f_led_health                             0x08001f29   Thumb Code    42  led.o(.text.f_led_health)
    f_led_port_normal                        0x08001f55   Thumb Code    40  led.o(.text.f_led_port_normal)
    f_led_port_warning                       0x08001f7d   Thumb Code    44  led.o(.text.f_led_port_warning)
    f_led_show_battery                       0x08001fa9   Thumb Code    46  led.o(.text.f_led_show_battery)
    f_uaba_close                             0x08001fd9   Thumb Code    56  app.o(.text.f_uaba_close)
    f_uaba_fault_ov                          0x08002011   Thumb Code    56  app.o(.text.f_uaba_fault_ov)
    f_uaba_open                              0x08002049   Thumb Code    56  app.o(.text.f_uaba_open)
    fputc                                    0x08002081   Thumb Code    54  init.o(.text.fputc)
    gpio_exti_pin_config                     0x080020b9   Thumb Code    84  cs32f10x_gpio.o(.text.gpio_exti_pin_config)
    gpio_mode_config                         0x0800210d   Thumb Code   424  cs32f10x_gpio.o(.text.gpio_mode_config)
    gpio_pin_remap_config                    0x080022b5   Thumb Code    52  cs32f10x_gpio.o(.text.gpio_pin_remap_config)
    i2c_init_2                               0x080022e9   Thumb Code    74  iic.o(.text.i2c_init_2)
    key_fast_switch                          0x08002335   Thumb Code   174  app.o(.text.key_fast_switch)
    key_init                                 0x080023e5   Thumb Code    82  key.o(.text.key_init)
    led_app                                  0x08002439   Thumb Code   310  app.o(.text.led_app)
    led_bat_show                             0x08002571   Thumb Code  2814  led.o(.text.led_bat_show)
    led_init                                 0x08003071   Thumb Code   298  led.o(.text.led_init)
    led_port_show                            0x0800319d   Thumb Code   488  led.o(.text.led_port_show)
    led_pwm_control                          0x08003385   Thumb Code   258  led.o(.text.led_pwm_control)
    load_bms_init_array                      0x08003489   Thumb Code    94  bms.o(.text.load_bms_init_array)
    log_init                                 0x080034e9   Thumb Code   118  init.o(.text.log_init)
    main                                     0x08003561   Thumb Code   142  main.o(.text.main)
    nvic_configuration                       0x080035f1   Thumb Code    86  init.o(.text.nvic_configuration)
    nvic_init                                0x08003649   Thumb Code   150  cs32f10x_misc.o(.text.nvic_init)
    nvic_priority_group_config               0x080036e1   Thumb Code    28  cs32f10x_misc.o(.text.nvic_priority_group_config)
    other_io_init                            0x080036fd   Thumb Code   132  init.o(.text.other_io_init)
    rcu_adcclk_config                        0x080037e5   Thumb Code    28  cs32f10x_rcu.o(.text.rcu_adcclk_config)
    rcu_clk_freq_get                         0x08003801   Thumb Code   368  cs32f10x_rcu.o(.text.rcu_clk_freq_get)
    sys_pow_on_off_deal                      0x08003a95   Thumb Code   144  app.o(.text.sys_pow_on_off_deal)
    sys_switch_check                         0x08003b25   Thumb Code   162  app.o(.text.sys_switch_check)
    task_adc                                 0x08003bc9   Thumb Code   354  adc.o(.text.task_adc)
    task_app                                 0x08003d2d   Thumb Code    38  app.o(.text.task_app)
    task_bms                                 0x08003d55   Thumb Code   422  bms_pro.o(.text.task_bms)
    task_com_rx                              0x08003efd   Thumb Code    16  communication.o(.text.task_com_rx)
    task_com_tx                              0x08003f0d   Thumb Code   276  communication.o(.text.task_com_tx)
    task_debug                               0x08004021   Thumb Code   850  debug.o(.text.task_debug)
    task_key                                 0x08004375   Thumb Code   580  key.o(.text.task_key)
    task_led                                 0x080045b9   Thumb Code    28  led.o(.text.task_led)
    tick_init                                0x080045d5   Thumb Code    40  init.o(.text.tick_init)
    tim_base_init                            0x080045fd   Thumb Code   110  cs32f10x_tim.o(.text.tim_base_init)
    tim_init                                 0x0800466d   Thumb Code   114  init.o(.text.tim_init)
    transmit_data                            0x080046e1   Thumb Code    96  communication.o(.text.transmit_data)
    turn_to_CFGUPDATE                        0x08004741   Thumb Code   126  bms.o(.text.turn_to_CFGUPDATE)
    uart_init                                0x080047c1   Thumb Code   130  init.o(.text.uart_init)
    usart_init                               0x08004845   Thumb Code   174  cs32f10x_usart.o(.text.usart_init)
    usba_app                                 0x080048f5   Thumb Code   726  app.o(.text.usba_app)
    __0printf                                0x08004bcd   Thumb Code    22  printfa.o(i.__0printf)
    __1printf                                0x08004bcd   Thumb Code     0  printfa.o(i.__0printf)
    __2printf                                0x08004bcd   Thumb Code     0  printfa.o(i.__0printf)
    __c89printf                              0x08004bcd   Thumb Code     0  printfa.o(i.__0printf)
    printf                                   0x08004bcd   Thumb Code     0  printfa.o(i.__0printf)
    __scatterload_copy                       0x08004bed   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08004bfb   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08004bfd   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x0800578c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080057ac   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    SystemCoreClock                          0x20000004   Data           4  system_cs32f10x.o(.data.SystemCoreClock)
    Tasks_Max                                0x20000068   Data           1  task.o(.data.Tasks_Max)
    bms_capGain                              0x2000006c   Data           4  bms.o(.data.bms_capGain)
    bms_ccGain                               0x20000070   Data           4  bms.o(.data.bms_ccGain)
    bms_init_array                           0x20000074   Data         420  bms.o(.data.bms_init_array)
    led                                      0x20000218   Data          60  led.o(.data.led)
    p                                        0x20000254   Data           8  debug.o(.data.p)
    pAPort                                   0x2000025c   Data          12  debug.o(.data.pAPort)
    pCPort                                   0x20000268   Data          12  debug.o(.data.pCPort)
    pGPort                                   0x20000274   Data          12  debug.o(.data.pGPort)
    pled                                     0x20000280   Data          20  debug.o(.data.pled)
    pled2                                    0x20000294   Data           8  debug.o(.data.pled2)
    sys                                      0x2000029c   Data          44  app.o(.data.sys)
    t_power_on_cnt_s                         0x200002c8   Data           1  bms.o(.data.t_power_on_cnt_s)
    AlarmBits                                0x200002d0   Data           2  bms.o(.bss.AlarmBits)
    CB_ActiveCells                           0x200002d2   Data           2  bms.o(.bss.CB_ActiveCells)
    CHG                                      0x200002d4   Data           1  bms.o(.bss.CHG)
    CellVoltage                              0x200002d6   Data          32  bms.o(.bss.CellVoltage)
    DSG                                      0x200002f6   Data           1  bms.o(.bss.DSG)
    FET_Status                               0x200002f7   Data           1  bms.o(.bss.FET_Status)
    LD_Voltage                               0x200002f8   Data           2  bms.o(.bss.LD_Voltage)
    OCC_Fault                                0x200002fa   Data           1  bms.o(.bss.OCC_Fault)
    OCD_Fault                                0x200002fb   Data           1  bms.o(.bss.OCD_Fault)
    OV_Fault                                 0x200002fc   Data           1  bms.o(.bss.OV_Fault)
    PCHG                                     0x200002fd   Data           1  bms.o(.bss.PCHG)
    PDSG                                     0x200002fe   Data           1  bms.o(.bss.PDSG)
    Pack_Current                             0x20000300   Data           2  bms.o(.bss.Pack_Current)
    Pack_Voltage                             0x20000302   Data           2  bms.o(.bss.Pack_Voltage)
    ProtectionsTriggered                     0x20000339   Data           1  bms.o(.bss.ProtectionsTriggered)
    RX_32Byte                                0x2000033a   Data          32  bms.o(.bss.RX_32Byte)
    RX_CRC_Fail                              0x2000035a   Data           2  bms.o(.bss.RX_CRC_Fail)
    RX_data                                  0x2000035c   Data           2  bms.o(.bss.RX_data)
    SCD_Fault                                0x2000035e   Data           1  bms.o(.bss.SCD_Fault)
    Stack_Voltage                            0x20000360   Data           2  bms.o(.bss.Stack_Voltage)
    UV_Fault                                 0x20000362   Data           1  bms.o(.bss.UV_Fault)
    V_cells                                  0x20000364   Data          12  bms.o(.bss.V_cells)
    bms_battery_status                       0x20000370   Data           2  bms_pro.o(.bss.bms_battery_status)
    bms_curr                                 0x20000372   Data           2  bms_pro.o(.bss.bms_curr)
    bms_tmp1                                 0x20000374   Data           2  bms_pro.o(.bss.bms_tmp1)
    bms_tmp2                                 0x20000376   Data           2  bms_pro.o(.bss.bms_tmp2)
    bms_tmp3                                 0x20000378   Data           2  bms_pro.o(.bss.bms_tmp3)
    bms_tmp4                                 0x2000037a   Data           2  bms_pro.o(.bss.bms_tmp4)
    field_Transmit                           0x2000037c   Data           5  communication.o(.bss.field_Transmit)
    field_receive                            0x20000381   Data           4  communication.o(.bss.field_receive)
    key_cb                                   0x20000385   Data           8  key.o(.bss.key_cb)
    pack_pin_voltage                         0x20000392   Data           2  bms_pro.o(.bss.pack_pin_voltage)
    receive_ok                               0x20000395   Data           1  communication.o(.bss.receive_ok)
    rxBuffer                                 0x20000396   Data          52  queue.o(.bss.rxBuffer)
    rx_CB                                    0x200003ca   Data          28  communication.o(.bss.rx_CB)
    u16_nack_flag                            0x200003f0   Data           2  bms.o(.bss.u16_nack_flag)
    value_PFStatusA                          0x200003f8   Data           1  bms.o(.bss.value_PFStatusA)
    value_PFStatusB                          0x200003f9   Data           1  bms.o(.bss.value_PFStatusB)
    value_PFStatusC                          0x200003fa   Data           1  bms.o(.bss.value_PFStatusC)
    value_SafetyStatusA                      0x200003fb   Data           1  bms.o(.bss.value_SafetyStatusA)
    value_SafetyStatusB                      0x200003fc   Data           1  bms.o(.bss.value_SafetyStatusB)
    value_SafetyStatusC                      0x200003fd   Data           1  bms.o(.bss.value_SafetyStatusC)
    write_nack                               0x200003fe   Data           2  bms.o(.bss.write_nack)
    write_res                                0x20000400   Data           2  bms.o(.bss.write_res)
    xbms                                     0x20000402   Data           4  app.o(.bss.xbms)
    __initial_sp                             0x20000c08   Data           0  startup_cs32f103xb.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00005a80, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x00005978])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000057ac, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO          995    RESET               startup_cs32f103xb.o
    0x080000ec   0x080000ec   0x00000000   Code   RO         1019  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x080000ec   0x080000ec   0x00000004   Code   RO         1064    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x080000f0   0x080000f0   0x00000004   Code   RO         1067    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x080000f4   0x080000f4   0x00000000   Code   RO         1069    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x080000f4   0x080000f4   0x00000000   Code   RO         1071    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x080000f4   0x080000f4   0x00000008   Code   RO         1072    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x080000fc   0x080000fc   0x00000000   Code   RO         1074    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x080000fc   0x080000fc   0x00000000   Code   RO         1076    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x080000fc   0x080000fc   0x00000004   Code   RO         1065    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x08000100   0x08000100   0x00000024   Code   RO          996    .text               startup_cs32f103xb.o
    0x08000124   0x08000124   0x000000e4   Code   RO         1056    .text               mf_w.l(dmul.o)
    0x08000208   0x08000208   0x000000de   Code   RO         1058    .text               mf_w.l(ddiv.o)
    0x080002e6   0x080002e6   0x00000022   Code   RO         1060    .text               mf_w.l(dflti.o)
    0x08000308   0x08000308   0x0000003e   Code   RO         1062    .text               mf_w.l(dfixi.o)
    0x08000346   0x08000346   0x0000002c   Code   RO         1088    .text               mc_w.l(uidiv.o)
    0x08000372   0x08000372   0x00000062   Code   RO         1090    .text               mc_w.l(uldiv.o)
    0x080003d4   0x080003d4   0x00000020   Code   RO         1092    .text               mc_w.l(llushr.o)
    0x080003f4   0x080003f4   0x00000000   Code   RO         1094    .text               mc_w.l(iusefp.o)
    0x080003f4   0x080003f4   0x000000ba   Code   RO         1095    .text               mf_w.l(depilogue.o)
    0x080004ae   0x080004ae   0x0000014e   Code   RO         1097    .text               mf_w.l(dadd.o)
    0x080005fc   0x080005fc   0x00000030   Code   RO         1099    .text               mf_w.l(dfixul.o)
    0x0800062c   0x0800062c   0x00000030   Code   RO         1101    .text               mf_w.l(cdrcmple.o)
    0x0800065c   0x0800065c   0x00000030   Code   RO         1103    .text               mc_w.l(init.o)
    0x0800068c   0x0800068c   0x0000001e   Code   RO         1105    .text               mc_w.l(llshl.o)
    0x080006aa   0x080006aa   0x00000024   Code   RO         1107    .text               mc_w.l(llsshr.o)
    0x080006ce   0x080006ce   0x00000056   Code   RO         1117    .text               mc_w.l(__dczerorl2.o)
    0x08000724   0x08000724   0x00000046   Code   RO          155    .text.BMS_FET_ENABLE  bms.o
    0x0800076a   0x0800076a   0x00000002   PAD
    0x0800076c   0x0800076c   0x0000000e   Code   RO          181    .text.BQ769x2_CHG_OFF  bms.o
    0x0800077a   0x0800077a   0x00000002   PAD
    0x0800077c   0x0800077c   0x00000010   Code   RO          177    .text.BQ769x2_DSG_OFF  bms.o
    0x0800078c   0x0800078c   0x0000006a   Code   RO          163    .text.BQ769x2_Init  bms.o
    0x080007f6   0x080007f6   0x00000002   PAD
    0x080007f8   0x080007f8   0x00000018   Code   RO          187    .text.BQ769x2_ReadAlarmStatus  bms.o
    0x08000810   0x08000810   0x00000070   Code   RO          205    .text.BQ769x2_ReadAllVoltages  bms.o
    0x08000880   0x08000880   0x0000001a   Code   RO          215    .text.BQ769x2_ReadCurrent  bms.o
    0x0800089a   0x0800089a   0x00000002   PAD
    0x0800089c   0x0800089c   0x0000006a   Code   RO          185    .text.BQ769x2_ReadFETStatus  bms.o
    0x08000906   0x08000906   0x00000002   PAD
    0x08000908   0x08000908   0x00000082   Code   RO          191    .text.BQ769x2_ReadSafetyStatusA  bms.o
    0x0800098a   0x0800098a   0x00000002   PAD
    0x0800098c   0x0800098c   0x00000034   Code   RO          193    .text.BQ769x2_ReadSafetyStatusB  bms.o
    0x080009c0   0x080009c0   0x0000006e   Code   RO          195    .text.BQ769x2_ReadSafetyStatusC  bms.o
    0x08000a2e   0x08000a2e   0x00000002   PAD
    0x08000a30   0x08000a30   0x00000022   Code   RO          217    .text.BQ769x2_ReadTemperature  bms.o
    0x08000a52   0x08000a52   0x00000002   PAD
    0x08000a54   0x08000a54   0x00000050   Code   RO          203    .text.BQ769x2_ReadVoltage  bms.o
    0x08000aa4   0x08000aa4   0x00000014   Code   RO          207    .text.BQ769x2_Read_Vcells_123  bms.o
    0x08000ab8   0x08000ab8   0x00000016   Code   RO          209    .text.BQ769x2_Read_Vcells_5  bms.o
    0x08000ace   0x08000ace   0x00000002   PAD
    0x08000ad0   0x08000ad0   0x00000018   Code   RO          211    .text.BQ769x2_Read_Vcells_7  bms.o
    0x08000ae8   0x08000ae8   0x00000018   Code   RO          213    .text.BQ769x2_Read_Vcells_9  bms.o
    0x08000b00   0x08000b00   0x00000132   Code   RO          153    .text.BQ769x2_SetRegister  bms.o
    0x08000c32   0x08000c32   0x00000002   PAD
    0x08000c34   0x08000c34   0x00000028   Code   RO          169    .text.BSWBq769x2ReadBatteryStatus  bms.o
    0x08000c5c   0x08000c5c   0x00000004   Code   RO           25    .text.BusFault_Handler  cs32f10x_it.o
    0x08000c60   0x08000c60   0x00000098   Code   RO          145    .text.CRC8          bms.o
    0x08000cf8   0x08000cf8   0x00000054   Code   RO          143    .text.Checksum      bms.o
    0x08000d4c   0x08000d4c   0x0000002c   Code   RO          159    .text.CommandSubcommands  bms.o
    0x08000d78   0x08000d78   0x00000002   Code   RO           31    .text.DebugMon_Handler  cs32f10x_it.o
    0x08000d7a   0x08000d7a   0x00000002   PAD
    0x08000d7c   0x08000d7c   0x00000066   Code   RO          167    .text.DirectCommands  bms.o
    0x08000de2   0x08000de2   0x00000002   PAD
    0x08000de4   0x08000de4   0x0000004c   Code   RO           41    .text.EXTI4_IRQHandler  cs32f10x_it.o
    0x08000e30   0x08000e30   0x00000004   Code   RO           21    .text.HardFault_Handler  cs32f10x_it.o
    0x08000e34   0x08000e34   0x000000a0   Code   RO          426    .text.I2C_ReadMulti  iic.o
    0x08000ed4   0x08000ed4   0x000000f8   Code   RO          149    .text.I2C_ReadReg   bms.o
    0x08000fcc   0x08000fcc   0x000000b8   Code   RO          418    .text.I2C_ReceiveByte  iic.o
    0x08001084   0x08001084   0x0000004c   Code   RO          412    .text.I2C_SendAck   iic.o
    0x080010d0   0x080010d0   0x000000b2   Code   RO          416    .text.I2C_SendByte  iic.o
    0x08001182   0x08001182   0x00000002   PAD
    0x08001184   0x08001184   0x00000032   Code   RO          408    .text.I2C_Start     iic.o
    0x080011b6   0x080011b6   0x00000002   PAD
    0x080011b8   0x080011b8   0x00000050   Code   RO          410    .text.I2C_Stop      iic.o
    0x08001208   0x08001208   0x00000096   Code   RO          414    .text.I2C_WaitAck   iic.o
    0x0800129e   0x0800129e   0x00000002   PAD
    0x080012a0   0x080012a0   0x0000006e   Code   RO          424    .text.I2C_WriteMulti  iic.o
    0x0800130e   0x0800130e   0x00000002   PAD
    0x08001310   0x08001310   0x000000ec   Code   RO          147    .text.I2C_WriteReg  bms.o
    0x080013fc   0x080013fc   0x00000026   Code   RO          139    .text.IIC_ReadData  bms.o
    0x08001422   0x08001422   0x00000002   PAD
    0x08001424   0x08001424   0x00000026   Code   RO          137    .text.IIC_WriteData  bms.o
    0x0800144a   0x0800144a   0x00000002   PAD
    0x0800144c   0x0800144c   0x00000004   Code   RO           23    .text.MemManage_Handler  cs32f10x_it.o
    0x08001450   0x08001450   0x00000002   Code   RO           19    .text.NMI_Handler   cs32f10x_it.o
    0x08001452   0x08001452   0x00000002   PAD
    0x08001454   0x08001454   0x00000002   Code   RO           33    .text.PendSV_Handler  cs32f10x_it.o
    0x08001456   0x08001456   0x00000002   PAD
    0x08001458   0x08001458   0x000000c8   Code   RO          368    .text.ProcessData1  queue.o
    0x08001520   0x08001520   0x00000112   Code   RO          364    .text.ProcessPacket  queue.o
    0x08001632   0x08001632   0x00000002   PAD
    0x08001634   0x08001634   0x00000002   Code   RO           29    .text.SVC_Handler   cs32f10x_it.o
    0x08001636   0x08001636   0x00000002   PAD
    0x08001638   0x08001638   0x00000008   Code   RO         1005    .text.SetSysClock   system_cs32f10x.o
    0x08001640   0x08001640   0x000000f2   Code   RO          157    .text.Subcommands   bms.o
    0x08001732   0x08001732   0x00000002   PAD
    0x08001734   0x08001734   0x00000052   Code   RO           62    .text.SysTick_Config  init.o
    0x08001786   0x08001786   0x00000002   PAD
    0x08001788   0x08001788   0x00000008   Code   RO           35    .text.SysTick_Handler  cs32f10x_it.o
    0x08001790   0x08001790   0x00000066   Code   RO         1003    .text.SystemInit    system_cs32f10x.o
    0x080017f6   0x080017f6   0x00000002   PAD
    0x080017f8   0x080017f8   0x0000001e   Code   RO           39    .text.TIM1_UP_IRQHandler  cs32f10x_it.o
    0x08001816   0x08001816   0x00000002   PAD
    0x08001818   0x08001818   0x000000a0   Code   RO          385    .text.Task_Marks_Handler_Callback  task.o
    0x080018b8   0x080018b8   0x00000072   Code   RO          387    .text.Task_Pro_Handler_Callback  task.o
    0x0800192a   0x0800192a   0x00000002   PAD
    0x0800192c   0x0800192c   0x00000062   Code   RO           37    .text.USART3_IRQHandler  cs32f10x_it.o
    0x0800198e   0x0800198e   0x00000002   PAD
    0x08001990   0x08001990   0x00000004   Code   RO           27    .text.UsageFault_Handler  cs32f10x_it.o
    0x08001994   0x08001994   0x00000030   Code   RO           66    .text.__NVIC_EnableIRQ  init.o
    0x080019c4   0x080019c4   0x00000042   Code   RO           72    .text.__NVIC_SetPriority  init.o
    0x08001a06   0x08001a06   0x00000002   PAD
    0x08001a08   0x08001a08   0x00000062   Code   RO          488    .text.adc_init      cs32f10x_adc.o
    0x08001a6a   0x08001a6a   0x00000002   PAD
    0x08001a6c   0x08001a6c   0x00000166   Code   RO           81    .text.adc_init_     adc.o
    0x08001bd2   0x08001bd2   0x00000002   PAD
    0x08001bd4   0x08001bd4   0x000000e2   Code   RO          494    .text.adc_regular_channel_config  cs32f10x_adc.o
    0x08001cb6   0x08001cb6   0x00000002   PAD
    0x08001cb8   0x08001cb8   0x00000024   Code   RO          490    .text.adc_struct_init  cs32f10x_adc.o
    0x08001cdc   0x08001cdc   0x00000086   Code   RO          161    .text.bms_init      bms.o
    0x08001d62   0x08001d62   0x00000002   PAD
    0x08001d64   0x08001d64   0x00000058   Code   RO          360    .text.circ_buffer_pop  queue.o
    0x08001dbc   0x08001dbc   0x00000064   Code   RO          358    .text.circ_buffer_push  queue.o
    0x08001e20   0x08001e20   0x0000001a   Code   RO            4    .text.delay         main.o
    0x08001e3a   0x08001e3a   0x00000002   PAD
    0x08001e3c   0x08001e3c   0x00000002   Code   RO          151    .text.delay_us_2ms  bms.o
    0x08001e3e   0x08001e3e   0x00000002   PAD
    0x08001e40   0x08001e40   0x0000005a   Code   RO           70    .text.exti_init     init.o
    0x08001e9a   0x08001e9a   0x00000002   PAD
    0x08001e9c   0x08001e9c   0x00000028   Code   RO          329    .text.f_led_alloff  led.o
    0x08001ec4   0x08001ec4   0x00000032   Code   RO          325    .text.f_led_charge  led.o
    0x08001ef6   0x08001ef6   0x00000002   PAD
    0x08001ef8   0x08001ef8   0x0000002e   Code   RO          323    .text.f_led_discharge  led.o
    0x08001f26   0x08001f26   0x00000002   PAD
    0x08001f28   0x08001f28   0x0000002a   Code   RO          327    .text.f_led_health  led.o
    0x08001f52   0x08001f52   0x00000002   PAD
    0x08001f54   0x08001f54   0x00000028   Code   RO          331    .text.f_led_port_normal  led.o
    0x08001f7c   0x08001f7c   0x0000002c   Code   RO          333    .text.f_led_port_warning  led.o
    0x08001fa8   0x08001fa8   0x0000002e   Code   RO          321    .text.f_led_show_battery  led.o
    0x08001fd6   0x08001fd6   0x00000002   PAD
    0x08001fd8   0x08001fd8   0x00000038   Code   RO           94    .text.f_uaba_close  app.o
    0x08002010   0x08002010   0x00000038   Code   RO           96    .text.f_uaba_fault_ov  app.o
    0x08002048   0x08002048   0x00000038   Code   RO           92    .text.f_uaba_open   app.o
    0x08002080   0x08002080   0x00000036   Code   RO           52    .text.fputc         init.o
    0x080020b6   0x080020b6   0x00000002   PAD
    0x080020b8   0x080020b8   0x00000054   Code   RO          696    .text.gpio_exti_pin_config  cs32f10x_gpio.o
    0x0800210c   0x0800210c   0x000001a8   Code   RO          684    .text.gpio_mode_config  cs32f10x_gpio.o
    0x080022b4   0x080022b4   0x00000034   Code   RO          694    .text.gpio_pin_remap_config  cs32f10x_gpio.o
    0x080022e8   0x080022e8   0x0000004a   Code   RO          406    .text.i2c_init_2    iic.o
    0x08002332   0x08002332   0x00000002   PAD
    0x08002334   0x08002334   0x000000ae   Code   RO          106    .text.key_fast_switch  app.o
    0x080023e2   0x080023e2   0x00000002   PAD
    0x080023e4   0x080023e4   0x00000052   Code   RO          309    .text.key_init      key.o
    0x08002436   0x08002436   0x00000002   PAD
    0x08002438   0x08002438   0x00000136   Code   RO          108    .text.led_app       app.o
    0x0800256e   0x0800256e   0x00000002   PAD
    0x08002570   0x08002570   0x00000afe   Code   RO          339    .text.led_bat_show  led.o
    0x0800306e   0x0800306e   0x00000002   PAD
    0x08003070   0x08003070   0x0000012a   Code   RO          335    .text.led_init      led.o
    0x0800319a   0x0800319a   0x00000002   PAD
    0x0800319c   0x0800319c   0x000001e8   Code   RO          341    .text.led_port_show  led.o
    0x08003384   0x08003384   0x00000102   Code   RO          343    .text.led_pwm_control  led.o
    0x08003486   0x08003486   0x00000002   PAD
    0x08003488   0x08003488   0x0000005e   Code   RO          171    .text.load_bms_init_array  bms.o
    0x080034e6   0x080034e6   0x00000002   PAD
    0x080034e8   0x080034e8   0x00000076   Code   RO           50    .text.log_init      init.o
    0x0800355e   0x0800355e   0x00000002   PAD
    0x08003560   0x08003560   0x0000008e   Code   RO            2    .text.main          main.o
    0x080035ee   0x080035ee   0x00000002   PAD
    0x080035f0   0x080035f0   0x00000056   Code   RO           64    .text.nvic_configuration  init.o
    0x08003646   0x08003646   0x00000002   PAD
    0x08003648   0x08003648   0x00000096   Code   RO          742    .text.nvic_init     cs32f10x_misc.o
    0x080036de   0x080036de   0x00000002   PAD
    0x080036e0   0x080036e0   0x0000001c   Code   RO          740    .text.nvic_priority_group_config  cs32f10x_misc.o
    0x080036fc   0x080036fc   0x00000084   Code   RO           58    .text.other_io_init  init.o
    0x08003780   0x08003780   0x00000064   Code   RO          112    .text.portA_plug_check  app.o
    0x080037e4   0x080037e4   0x0000001c   Code   RO          804    .text.rcu_adcclk_config  cs32f10x_rcu.o
    0x08003800   0x08003800   0x00000170   Code   RO          812    .text.rcu_clk_freq_get  cs32f10x_rcu.o
    0x08003970   0x08003970   0x00000122   Code   RO         1009    .text.set_sysclk_freq_72M  system_cs32f10x.o
    0x08003a92   0x08003a92   0x00000002   PAD
    0x08003a94   0x08003a94   0x00000090   Code   RO          104    .text.sys_pow_on_off_deal  app.o
    0x08003b24   0x08003b24   0x000000a2   Code   RO          102    .text.sys_switch_check  app.o
    0x08003bc6   0x08003bc6   0x00000002   PAD
    0x08003bc8   0x08003bc8   0x00000162   Code   RO           83    .text.task_adc      adc.o
    0x08003d2a   0x08003d2a   0x00000002   PAD
    0x08003d2c   0x08003d2c   0x00000026   Code   RO          100    .text.task_app      app.o
    0x08003d52   0x08003d52   0x00000002   PAD
    0x08003d54   0x08003d54   0x000001a6   Code   RO          442    .text.task_bms      bms_pro.o
    0x08003efa   0x08003efa   0x00000002   PAD
    0x08003efc   0x08003efc   0x00000010   Code   RO          271    .text.task_com_rx   communication.o
    0x08003f0c   0x08003f0c   0x00000114   Code   RO          273    .text.task_com_tx   communication.o
    0x08004020   0x08004020   0x00000352   Code   RO          293    .text.task_debug    debug.o
    0x08004372   0x08004372   0x00000002   PAD
    0x08004374   0x08004374   0x00000244   Code   RO          311    .text.task_key      key.o
    0x080045b8   0x080045b8   0x0000001c   Code   RO          337    .text.task_led      led.o
    0x080045d4   0x080045d4   0x00000028   Code   RO           60    .text.tick_init     init.o
    0x080045fc   0x080045fc   0x0000006e   Code   RO          855    .text.tim_base_init  cs32f10x_tim.o
    0x0800466a   0x0800466a   0x00000002   PAD
    0x0800466c   0x0800466c   0x00000072   Code   RO           68    .text.tim_init      init.o
    0x080046de   0x080046de   0x00000002   PAD
    0x080046e0   0x080046e0   0x00000060   Code   RO          275    .text.transmit_data  communication.o
    0x08004740   0x08004740   0x0000007e   Code   RO          173    .text.turn_to_CFGUPDATE  bms.o
    0x080047be   0x080047be   0x00000002   PAD
    0x080047c0   0x080047c0   0x00000082   Code   RO           56    .text.uart_init     init.o
    0x08004842   0x08004842   0x00000002   PAD
    0x08004844   0x08004844   0x000000ae   Code   RO          938    .text.usart_init    cs32f10x_usart.o
    0x080048f2   0x080048f2   0x00000002   PAD
    0x080048f4   0x080048f4   0x000002d6   Code   RO          110    .text.usba_app      app.o
    0x08004bca   0x08004bca   0x00000002   PAD
    0x08004bcc   0x08004bcc   0x00000020   Code   RO         1029    i.__0printf         mc_w.l(printfa.o)
    0x08004bec   0x08004bec   0x0000000e   Code   RO         1111    i.__scatterload_copy  mc_w.l(handlers.o)
    0x08004bfa   0x08004bfa   0x00000002   Code   RO         1112    i.__scatterload_null  mc_w.l(handlers.o)
    0x08004bfc   0x08004bfc   0x0000000e   Code   RO         1113    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x08004c0a   0x08004c0a   0x00000002   PAD
    0x08004c0c   0x08004c0c   0x00000184   Code   RO         1036    i._fp_digits        mc_w.l(printfa.o)
    0x08004d90   0x08004d90   0x000006dc   Code   RO         1037    i._printf_core      mc_w.l(printfa.o)
    0x0800546c   0x0800546c   0x00000024   Code   RO         1038    i._printf_post_padding  mc_w.l(printfa.o)
    0x08005490   0x08005490   0x0000002e   Code   RO         1039    i._printf_pre_padding  mc_w.l(printfa.o)
    0x080054be   0x080054be   0x00000004   Data   RO          815    .rodata.ADC_pdiv_table  cs32f10x_rcu.o
    0x080054c2   0x080054c2   0x00000010   Data   RO          814    .rodata.APBAHB_pdiv_table  cs32f10x_rcu.o
    0x080054d2   0x080054d2   0x0000000d   Data   RO           10    .rodata.str1.1      main.o
    0x080054df   0x080054df   0x00000024   Data   RO          120    .rodata.str1.1      app.o
    0x08005503   0x08005503   0x00000006   Data   RO          245    .rodata.str1.1      bms.o
    0x08005509   0x08005509   0x0000025b   Data   RO          295    .rodata.str1.1      debug.o
    0x08005764   0x08005764   0x0000000e   Data   RO          348    .rodata.str1.1      led.o
    0x08005772   0x08005772   0x0000001a   Data   RO          370    .rodata.str1.1      queue.o
    0x0800578c   0x0800578c   0x00000020   Data   RO         1110    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x080057b0, Size: 0x00000c08, Max: 0x00005000, ABSOLUTE, COMPRESSED[0x000001c8])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW         1078    .data               mc_w.l(stdout.o)
    0x20000004   COMPRESSED   0x00000004   Data   RW         1011    .data.SystemCoreClock  system_cs32f10x.o
    0x20000008   COMPRESSED   0x00000060   Data   RW          390    .data.Task_Comps    task.o
    0x20000068   COMPRESSED   0x00000001   Data   RW          389    .data.Tasks_Max     task.o
    0x20000069   COMPRESSED   0x00000003   PAD
    0x2000006c   COMPRESSED   0x00000004   Data   RW          249    .data.bms_capGain   bms.o
    0x20000070   COMPRESSED   0x00000004   Data   RW          248    .data.bms_ccGain    bms.o
    0x20000074   COMPRESSED   0x000001a4   Data   RW          250    .data.bms_init_array  bms.o
    0x20000218   COMPRESSED   0x0000003c   Data   RW          347    .data.led           led.o
    0x20000254   COMPRESSED   0x00000008   Data   RW          296    .data.p             debug.o
    0x2000025c   COMPRESSED   0x0000000c   Data   RW          299    .data.pAPort        debug.o
    0x20000268   COMPRESSED   0x0000000c   Data   RW          297    .data.pCPort        debug.o
    0x20000274   COMPRESSED   0x0000000c   Data   RW          298    .data.pGPort        debug.o
    0x20000280   COMPRESSED   0x00000014   Data   RW          300    .data.pled          debug.o
    0x20000294   COMPRESSED   0x00000008   Data   RW          301    .data.pled2         debug.o
    0x2000029c   COMPRESSED   0x0000002c   Data   RW          116    .data.sys           app.o
    0x200002c8   COMPRESSED   0x00000001   Data   RW          246    .data.t_power_on_cnt_s  bms.o
    0x200002c9   COMPRESSED   0x00000007   PAD
    0x200002d0        -       0x00000002   Zero   RW          228    .bss.AlarmBits      bms.o
    0x200002d2        -       0x00000002   Zero   RW          262    .bss.CB_ActiveCells  bms.o
    0x200002d4        -       0x00000001   Zero   RW          237    .bss.CHG            bms.o
    0x200002d5   COMPRESSED   0x00000001   PAD
    0x200002d6        -       0x00000020   Zero   RW          223    .bss.CellVoltage    bms.o
    0x200002f6        -       0x00000001   Zero   RW          236    .bss.DSG            bms.o
    0x200002f7        -       0x00000001   Zero   RW          251    .bss.FET_Status     bms.o
    0x200002f8        -       0x00000002   Zero   RW          226    .bss.LD_Voltage     bms.o
    0x200002fa        -       0x00000001   Zero   RW          233    .bss.OCC_Fault      bms.o
    0x200002fb        -       0x00000001   Zero   RW          232    .bss.OCD_Fault      bms.o
    0x200002fc        -       0x00000001   Zero   RW          230    .bss.OV_Fault       bms.o
    0x200002fd        -       0x00000001   Zero   RW          238    .bss.PCHG           bms.o
    0x200002fe        -       0x00000001   Zero   RW          239    .bss.PDSG           bms.o
    0x200002ff   COMPRESSED   0x00000001   PAD
    0x20000300        -       0x00000002   Zero   RW          227    .bss.Pack_Current   bms.o
    0x20000302        -       0x00000002   Zero   RW          225    .bss.Pack_Voltage   bms.o
    0x20000304        -       0x00000032   Zero   RW          374    .bss.ProcessData1.packet  queue.o
    0x20000336        -       0x00000002   Zero   RW          375    .bss.ProcessData1.packetIndex  queue.o
    0x20000338        -       0x00000001   Zero   RW          376    .bss.ProcessData1.receive_status  queue.o
    0x20000339        -       0x00000001   Zero   RW          234    .bss.ProtectionsTriggered  bms.o
    0x2000033a        -       0x00000020   Zero   RW          222    .bss.RX_32Byte      bms.o
    0x2000035a        -       0x00000002   Zero   RW          243    .bss.RX_CRC_Fail    bms.o
    0x2000035c        -       0x00000002   Zero   RW          221    .bss.RX_data        bms.o
    0x2000035e        -       0x00000001   Zero   RW          231    .bss.SCD_Fault      bms.o
    0x2000035f   COMPRESSED   0x00000001   PAD
    0x20000360        -       0x00000002   Zero   RW          224    .bss.Stack_Voltage  bms.o
    0x20000362        -       0x00000001   Zero   RW          229    .bss.UV_Fault       bms.o
    0x20000363   COMPRESSED   0x00000001   PAD
    0x20000364        -       0x0000000c   Zero   RW          258    .bss.V_cells        bms.o
    0x20000370        -       0x00000002   Zero   RW          473    .bss.bms_battery_status  bms_pro.o
    0x20000372        -       0x00000002   Zero   RW          459    .bss.bms_curr       bms_pro.o
    0x20000374        -       0x00000002   Zero   RW          451    .bss.bms_tmp1       bms_pro.o
    0x20000376        -       0x00000002   Zero   RW          447    .bss.bms_tmp2       bms_pro.o
    0x20000378        -       0x00000002   Zero   RW          448    .bss.bms_tmp3       bms_pro.o
    0x2000037a        -       0x00000002   Zero   RW          464    .bss.bms_tmp4       bms_pro.o
    0x2000037c        -       0x00000005   Zero   RW          281    .bss.field_Transmit  communication.o
    0x20000381        -       0x00000004   Zero   RW          285    .bss.field_receive  communication.o
    0x20000385        -       0x00000008   Zero   RW          313    .bss.key_cb         key.o
    0x2000038d        -       0x00000001   Zero   RW          117    .bss.key_fast_switch.last_level  app.o
    0x2000038e        -       0x00000001   Zero   RW          118    .bss.key_fast_switch.num  app.o
    0x2000038f   COMPRESSED   0x00000001   PAD
    0x20000390        -       0x00000002   Zero   RW          119    .bss.key_fast_switch.timer  app.o
    0x20000392        -       0x00000002   Zero   RW          478    .bss.pack_pin_voltage  bms_pro.o
    0x20000394        -       0x00000001   Zero   RW          129    .bss.portA_plug_check.cnt  app.o
    0x20000395        -       0x00000001   Zero   RW          280    .bss.receive_ok     communication.o
    0x20000396        -       0x00000034   Zero   RW          377    .bss.rxBuffer       queue.o
    0x200003ca        -       0x0000001c   Zero   RW          279    .bss.rx_CB          communication.o
    0x200003e6        -       0x00000001   Zero   RW          122    .bss.sys_switch_check.key2_high_cnt  app.o
    0x200003e7        -       0x00000001   Zero   RW          123    .bss.sys_switch_check.key2_low_cnt  app.o
    0x200003e8        -       0x00000001   Zero   RW          477    .bss.task_bms.idx   bms_pro.o
    0x200003e9   COMPRESSED   0x00000003   PAD
    0x200003ec        -       0x00000004   Zero   RW          302    .bss.task_debug.i   debug.o
    0x200003f0        -       0x00000002   Zero   RW          244    .bss.u16_nack_flag  bms.o
    0x200003f2        -       0x00000001   Zero   RW          125    .bss.usba_app.oc_cnt  app.o
    0x200003f3   COMPRESSED   0x00000001   PAD
    0x200003f4        -       0x00000002   Zero   RW          127    .bss.usba_app.recover_cnt  app.o
    0x200003f6        -       0x00000002   Zero   RW          124    .bss.usba_app.small_cur_cnt  app.o
    0x200003f8        -       0x00000001   Zero   RW          255    .bss.value_PFStatusA  bms.o
    0x200003f9        -       0x00000001   Zero   RW          256    .bss.value_PFStatusB  bms.o
    0x200003fa        -       0x00000001   Zero   RW          257    .bss.value_PFStatusC  bms.o
    0x200003fb        -       0x00000001   Zero   RW          252    .bss.value_SafetyStatusA  bms.o
    0x200003fc        -       0x00000001   Zero   RW          253    .bss.value_SafetyStatusB  bms.o
    0x200003fd        -       0x00000001   Zero   RW          254    .bss.value_SafetyStatusC  bms.o
    0x200003fe        -       0x00000002   Zero   RW          242    .bss.write_nack     bms.o
    0x20000400        -       0x00000002   Zero   RW          247    .bss.write_res      bms.o
    0x20000402        -       0x00000004   Zero   RW          128    .bss.xbms           app.o
    0x20000406   COMPRESSED   0x00000002   PAD
    0x20000408        -       0x00000800   Zero   RW          993    STACK               startup_cs32f103xb.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       712          0          0          0          0       2320   adc.o
      1822          0         36         44         16       5254   app.o
      2856          0          6        429        115      10300   bms.o
       422         20          0          0         15       3680   bms_pro.o
       388          0          0          0         38       3373   communication.o
       360          0          0          0          0       3468   cs32f10x_adc.o
       560          0          0          0          0       3263   cs32f10x_gpio.o
       236          0          0          0          0       2526   cs32f10x_it.o
       178          0          0          0          0       3350   cs32f10x_misc.o
       396          0         20          0          0       4396   cs32f10x_rcu.o
       110          0          0          0          0       8838   cs32f10x_tim.o
       174          0          0          0          0       4263   cs32f10x_usart.o
       850          0        603         72          4       1787   debug.o
      1062          0          0          0          0       5443   iic.o
       960          0          0          0          0       6809   init.o
       662          0          0          0          8       2078   key.o
      4194         64         14         60          0       5674   led.o
       168          0         13          0          0       1511   main.o
       662          0         26          0        105       2588   queue.o
        36          8        236          0       2048        868   startup_cs32f103xb.o
       400          0          0          4          0       3011   system_cs32f10x.o
       274          0          0         97          0       1160   task.o

    ----------------------------------------------------------------------
     17612         92        986        712       2364      85960   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       130          0          0          6         15          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        86          0          0          0          0          0   __dczerorl2.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
      2258         90          0          0          0        452   printfa.o
         0          0          0          4          0          0   stdout.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
        48          0          0          0          0         68   cdrcmple.o
       334          0          0          0          0        148   dadd.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        62          0          0          0          0         80   dfixi.o
        48          0          0          0          0         68   dfixul.o
        34          0          0          0          0         76   dflti.o
       228          0          0          0          0         96   dmul.o

    ----------------------------------------------------------------------
      3846        108          0          4          0       1708   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      2682        108          0          4          0        896   mc_w.l
      1162          0          0          0          0        812   mf_w.l

    ----------------------------------------------------------------------
      3846        108          0          4          0       1708   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     21458        200        986        716       2364      86616   Grand Totals
     21458        200        986        456       2364      86616   ELF Image Totals (compressed)
     21458        200        986        456          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                22444 (  21.92kB)
    Total RW  Size (RW Data + ZI Data)              3080 (   3.01kB)
    Total ROM Size (Code + RO Data + RW Data)      22900 (  22.36kB)

==============================================================================

